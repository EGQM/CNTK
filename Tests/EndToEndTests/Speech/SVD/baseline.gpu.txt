CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 264172964 kB
-------------------------------------------------------------------
=== Running /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/SVD/cntk.cntk currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data RunDir=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/SVD OutputDir=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu DeviceId=0 timestamping=true
-------------------------------------------------------------------
Build info: 

		Built time: Jul 14 2016 13:57:01
		Last modified date: Thu Jul 14 12:50:48 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: b918e06de12613a1773a0976ab94e213bd09ce52
		Built by philly on adf92da755f9
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
07/14/2016 14:17:13: -------------------------------------------------------------------
07/14/2016 14:17:13: Build info: 

07/14/2016 14:17:13: 		Built time: Jul 14 2016 13:57:01
07/14/2016 14:17:13: 		Last modified date: Thu Jul 14 12:50:48 2016
07/14/2016 14:17:13: 		Build type: release
07/14/2016 14:17:13: 		Build target: GPU
07/14/2016 14:17:13: 		With 1bit-SGD: no
07/14/2016 14:17:13: 		Math lib: mkl
07/14/2016 14:17:13: 		CUDA_PATH: /usr/local/cuda-7.5
07/14/2016 14:17:13: 		CUB_PATH: /usr/local/cub-1.4.1
07/14/2016 14:17:13: 		CUDNN_PATH: /usr/local/cudnn-4.0
07/14/2016 14:17:13: 		Build Branch: HEAD
07/14/2016 14:17:13: 		Build SHA1: b918e06de12613a1773a0976ab94e213bd09ce52
07/14/2016 14:17:13: 		Built by philly on adf92da755f9
07/14/2016 14:17:13: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
07/14/2016 14:17:13: -------------------------------------------------------------------
07/14/2016 14:17:14: -------------------------------------------------------------------
07/14/2016 14:17:14: GPU info:

07/14/2016 14:17:14: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
07/14/2016 14:17:14: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
07/14/2016 14:17:14: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
07/14/2016 14:17:14: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
07/14/2016 14:17:14: -------------------------------------------------------------------

07/14/2016 14:17:14: Running on localhost at 2016/07/14 14:17:14
07/14/2016 14:17:14: Command line: 
/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/gpu/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/SVD/cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/SVD  OutputDir=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu  DeviceId=0  timestamping=true



07/14/2016 14:17:14: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
07/14/2016 14:17:14: precision=float
command=speechTrain:modelDecomposition:SVDTrain
deviceId=$DeviceId$
speechTrain=[
    action=train
    makeMode=false
    modelPath=$RunDir$/models/cntkSpeech.dnn
    deviceId=$DeviceId$
    traceLevel=1
    SimpleNetworkBuilder=[
        layerSizes=363:512:512:132
        trainingCriterion=CrossEntropyWithSoftmax
        evalCriterion=ErrorPrediction
        layerTypes=Sigmoid
        applyMeanVarNorm=true
        initValueScale=1.0
        uniformInit=true
        needPrior=true
    ]
    SGD=[
        epochSize=20480
        minibatchSize=64:256:1024
        learningRatesPerMB=1.0:0.5:0.1
        numMBsToShowResult=10
        momentumPerMB=0.9:0.656119
        dropoutRate=0.0
        maxEpochs=3
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
reader=[
    readerType=HTKMLFReader
    readMethod=blockRandomize
    miniBatchMode=Partial
    randomize=Auto
    verbosity=0
    features=[
        dim=363
        type=Real
        scpFile=glob_0000.scp
    ]
    labels=[
        mlfFile=$DataDir$/glob_0000.mlf
        labelMappingFile=$DataDir$/state.list
        labelDim=132
        labelType=Category
    ]
]
modelDecomposition=[
    action=SVD
    modelPath=$RunDir$/models/cntkSpeech.dnn
    outputmodelPath=$RunDir$/models/cntkSpeech.svd.dnn.0
    KeepRatio=0.5
    NodeNameRegex=W.*
]
SVDTrain=[
    action=train
    makeMode=true
    modelPath=$RunDir$/models/cntkSpeech.svd.dnn
    deviceId=$DeviceId$
    traceLevel=1
    NDLNetworkBuilder=[
        NetworkDescription=$RunDir$/nonExistent.ndl
    ]
    SGD=[
        epochSize=20480
        minibatchSize=1024
        learningRatesPerMB=0.1
        numMBsToShowResult=10
        momentumPerMB=0.656119
        dropoutRate=0.0
        maxEpochs=2
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
RunDir=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu
DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/SVD
OutputDir=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu
DeviceId=0
timestamping=true

07/14/2016 14:17:14: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<

07/14/2016 14:17:14: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
07/14/2016 14:17:14: precision=float
command=speechTrain:modelDecomposition:SVDTrain
deviceId=0
speechTrain=[
    action=train
    makeMode=false
    modelPath=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.dnn
    deviceId=0
    traceLevel=1
    SimpleNetworkBuilder=[
        layerSizes=363:512:512:132
        trainingCriterion=CrossEntropyWithSoftmax
        evalCriterion=ErrorPrediction
        layerTypes=Sigmoid
        applyMeanVarNorm=true
        initValueScale=1.0
        uniformInit=true
        needPrior=true
    ]
    SGD=[
        epochSize=20480
        minibatchSize=64:256:1024
        learningRatesPerMB=1.0:0.5:0.1
        numMBsToShowResult=10
        momentumPerMB=0.9:0.656119
        dropoutRate=0.0
        maxEpochs=3
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
reader=[
    readerType=HTKMLFReader
    readMethod=blockRandomize
    miniBatchMode=Partial
    randomize=Auto
    verbosity=0
    features=[
        dim=363
        type=Real
        scpFile=glob_0000.scp
    ]
    labels=[
        mlfFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf
        labelMappingFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
        labelDim=132
        labelType=Category
    ]
]
modelDecomposition=[
    action=SVD
    modelPath=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.dnn
    outputmodelPath=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn.0
    KeepRatio=0.5
    NodeNameRegex=W.*
]
SVDTrain=[
    action=train
    makeMode=true
    modelPath=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn
    deviceId=0
    traceLevel=1
    NDLNetworkBuilder=[
        NetworkDescription=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/nonExistent.ndl
    ]
    SGD=[
        epochSize=20480
        minibatchSize=1024
        learningRatesPerMB=0.1
        numMBsToShowResult=10
        momentumPerMB=0.656119
        dropoutRate=0.0
        maxEpochs=2
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]
currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
RunDir=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu
DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/SVD
OutputDir=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu
DeviceId=0
timestamping=true

07/14/2016 14:17:14: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<

07/14/2016 14:17:14: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
configparameters: cntk.cntk:command=speechTrain:modelDecomposition:SVDTrain
configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/SVD
configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
configparameters: cntk.cntk:deviceId=0
configparameters: cntk.cntk:modelDecomposition=[
    action=SVD
    modelPath=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.dnn
    outputmodelPath=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn.0
    KeepRatio=0.5
    NodeNameRegex=W.*
]

configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu
configparameters: cntk.cntk:precision=float
configparameters: cntk.cntk:reader=[
    readerType=HTKMLFReader
    readMethod=blockRandomize
    miniBatchMode=Partial
    randomize=Auto
    verbosity=0
    features=[
        dim=363
        type=Real
        scpFile=glob_0000.scp
    ]
    labels=[
        mlfFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf
        labelMappingFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
        labelDim=132
        labelType=Category
    ]
]

configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu
configparameters: cntk.cntk:speechTrain=[
    action=train
    makeMode=false
    modelPath=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.dnn
    deviceId=0
    traceLevel=1
    SimpleNetworkBuilder=[
        layerSizes=363:512:512:132
        trainingCriterion=CrossEntropyWithSoftmax
        evalCriterion=ErrorPrediction
        layerTypes=Sigmoid
        applyMeanVarNorm=true
        initValueScale=1.0
        uniformInit=true
        needPrior=true
    ]
    SGD=[
        epochSize=20480
        minibatchSize=64:256:1024
        learningRatesPerMB=1.0:0.5:0.1
        numMBsToShowResult=10
        momentumPerMB=0.9:0.656119
        dropoutRate=0.0
        maxEpochs=3
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]

configparameters: cntk.cntk:SVDTrain=[
    action=train
    makeMode=true
    modelPath=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn
    deviceId=0
    traceLevel=1
    NDLNetworkBuilder=[
        NetworkDescription=/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/nonExistent.ndl
    ]
    SGD=[
        epochSize=20480
        minibatchSize=1024
        learningRatesPerMB=0.1
        numMBsToShowResult=10
        momentumPerMB=0.656119
        dropoutRate=0.0
        maxEpochs=2
        keepCheckPointFiles=false
        clippingThresholdPerSample=1#INF
    ]
]

configparameters: cntk.cntk:timestamping=true
07/14/2016 14:17:14: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
07/14/2016 14:17:14: Commands: speechTrain modelDecomposition SVDTrain
07/14/2016 14:17:14: Precision = "float"
07/14/2016 14:17:14: CNTKModelPath: /tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.dnn
07/14/2016 14:17:14: CNTKCommandTrainInfo: speechTrain : 3
07/14/2016 14:17:14: CNTKModelPath: /tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn
07/14/2016 14:17:14: CNTKCommandTrainInfo: SVDTrain : 2
07/14/2016 14:17:14: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5

07/14/2016 14:17:14: ##############################################################################
07/14/2016 14:17:14: #                                                                            #
07/14/2016 14:17:14: # Action "train"                                                             #
07/14/2016 14:17:14: #                                                                            #
07/14/2016 14:17:14: ##############################################################################

07/14/2016 14:17:14: CNTKCommandTrainBegin: speechTrain
SimpleNetworkBuilder Using GPU 0
reading script file glob_0000.scp ... 946 entries
total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
...............................................................................................feature set 0: 252508 frames in 946 out of 946 utterances
label set 0: 129 classes
minibatchutterancesource: 946 utterances grouped into 3 chunks, av. chunk size: 315.3 utterances, 84169.3 frames

07/14/2016 14:17:14: Creating virgin network.
SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==4

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *]
Validating --> W2 = LearnableParameter() :  -> [132 x 512]
Validating --> W1 = LearnableParameter() :  -> [512 x 512]
Validating --> W0 = LearnableParameter() :  -> [512 x 363]
Validating --> features = InputValue() :  -> [363 x *]
Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
Validating --> Prior = Mean (labels) : [132 x *] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

07/14/2016 14:17:14: Created model with 25 nodes on GPU 0.

07/14/2016 14:17:14: Training criterion node(s):
07/14/2016 14:17:14: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

07/14/2016 14:17:14: Evaluation criterion node(s):

07/14/2016 14:17:14: 	EvalErrorPrediction = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
0x7fd894abed38: {[MVNormalizedFeatures Value[363 x *]] }
0x7fd894abf438: {[W0*features Value[512 x *]] }
0x7fd894abf968: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
0x7fd894abfac8: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
0x7fd894abfc88: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
0x7fd894abfe48: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
0x7fd894ac0008: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
0x7fd894ac01c8: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
0x7fd894ac0388: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
0x7fd894ac0ee8: {[CrossEntropyWithSoftmax Gradient[1]] }
0x7fd894ac10a8: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
0x7fd894ac1268: {[W2*H1 Gradient[132 x 1 x *]] }
0x7fd894ac1428: {[B2 Gradient[132 x 1]] }
0x7fd8951d2e08: {[W1 Value[512 x 512]] }
0x7fd8951d3bd8: {[B1 Value[512 x 1]] }
0x7fd8951d4d78: {[W2 Value[132 x 512]] }
0x7fd8951d54f8: {[B2 Value[132 x 1]] }
0x7fd8951d6858: {[labels Value[132 x *]] }
0x7fd8951d7ab8: {[Prior Value[132]] }
0x7fd8951dd358: {[EvalErrorPrediction Value[1]] }
0x7fd8951dd658: {[ScaledLogLikelihood Value[132 x 1 x *]] }
0x7fd8951dd818: {[CrossEntropyWithSoftmax Value[1]] }
0x7fd8951dde18: {[LogOfPrior Value[132]] }
0x7fd8951e3448: {[B0 Value[512 x 1]] }
0x7fd8953c21e8: {[MeanOfFeatures Value[363]] }
0x7fd8953c26f8: {[InvStdOfFeatures Value[363]] }
0x7fd8953c33e8: {[W0 Value[512 x 363]] }
0x7fd89911de68: {[features Value[363 x *]] }


07/14/2016 14:17:14: Precomputing --> 3 PreCompute nodes found.

07/14/2016 14:17:14: 	MeanOfFeatures = Mean()
07/14/2016 14:17:14: 	InvStdOfFeatures = InvStdDev()
07/14/2016 14:17:14: 	Prior = Mean()
minibatchiterator: epoch 0: frames [0..252508] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms

07/14/2016 14:17:15: Precomputing --> Completed.


07/14/2016 14:17:15: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses

07/14/2016 14:17:15: Starting minibatch loop.
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[   1-  10, 3.12%]: CrossEntropyWithSoftmax = 4.43175049 * 640; EvalErrorPrediction = 0.89687500 * 640; time = 0.0097s; samplesPerSecond = 65863.9
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[  11-  20, 6.25%]: CrossEntropyWithSoftmax = 4.31479950 * 640; EvalErrorPrediction = 0.91250000 * 640; time = 0.0075s; samplesPerSecond = 84891.9
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[  21-  30, 9.38%]: CrossEntropyWithSoftmax = 4.00219116 * 640; EvalErrorPrediction = 0.87343750 * 640; time = 0.0076s; samplesPerSecond = 84332.6
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[  31-  40, 12.50%]: CrossEntropyWithSoftmax = 3.85458832 * 640; EvalErrorPrediction = 0.85000000 * 640; time = 0.0075s; samplesPerSecond = 84948.2
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[  41-  50, 15.62%]: CrossEntropyWithSoftmax = 3.69650421 * 640; EvalErrorPrediction = 0.85781250 * 640; time = 0.0076s; samplesPerSecond = 84723.3
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[  51-  60, 18.75%]: CrossEntropyWithSoftmax = 3.61849670 * 640; EvalErrorPrediction = 0.86093750 * 640; time = 0.0075s; samplesPerSecond = 84790.7
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[  61-  70, 21.88%]: CrossEntropyWithSoftmax = 3.60577545 * 640; EvalErrorPrediction = 0.84687500 * 640; time = 0.0076s; samplesPerSecond = 84622.5
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[  71-  80, 25.00%]: CrossEntropyWithSoftmax = 3.36638489 * 640; EvalErrorPrediction = 0.79843750 * 640; time = 0.0076s; samplesPerSecond = 84510.8
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[  81-  90, 28.12%]: CrossEntropyWithSoftmax = 3.34688721 * 640; EvalErrorPrediction = 0.79843750 * 640; time = 0.0075s; samplesPerSecond = 85265.1
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[  91- 100, 31.25%]: CrossEntropyWithSoftmax = 3.39504700 * 640; EvalErrorPrediction = 0.77500000 * 640; time = 0.0076s; samplesPerSecond = 84644.9
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 101- 110, 34.38%]: CrossEntropyWithSoftmax = 3.28059387 * 640; EvalErrorPrediction = 0.76250000 * 640; time = 0.0075s; samplesPerSecond = 84925.7
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 111- 120, 37.50%]: CrossEntropyWithSoftmax = 3.20159607 * 640; EvalErrorPrediction = 0.76875000 * 640; time = 0.0075s; samplesPerSecond = 85083.8
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 121- 130, 40.62%]: CrossEntropyWithSoftmax = 3.11371765 * 640; EvalErrorPrediction = 0.76093750 * 640; time = 0.0076s; samplesPerSecond = 84712.1
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 131- 140, 43.75%]: CrossEntropyWithSoftmax = 2.96736145 * 640; EvalErrorPrediction = 0.72656250 * 640; time = 0.0076s; samplesPerSecond = 84611.3
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 141- 150, 46.88%]: CrossEntropyWithSoftmax = 3.04701843 * 640; EvalErrorPrediction = 0.73750000 * 640; time = 0.0075s; samplesPerSecond = 84993.4
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 151- 160, 50.00%]: CrossEntropyWithSoftmax = 2.91791382 * 640; EvalErrorPrediction = 0.68750000 * 640; time = 0.0076s; samplesPerSecond = 84377.1
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 161- 170, 53.12%]: CrossEntropyWithSoftmax = 2.85393066 * 640; EvalErrorPrediction = 0.69843750 * 640; time = 0.0075s; samplesPerSecond = 85185.7
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 171- 180, 56.25%]: CrossEntropyWithSoftmax = 2.86520386 * 640; EvalErrorPrediction = 0.70000000 * 640; time = 0.0092s; samplesPerSecond = 69899.5
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 181- 190, 59.38%]: CrossEntropyWithSoftmax = 2.73497925 * 640; EvalErrorPrediction = 0.66406250 * 640; time = 0.0076s; samplesPerSecond = 84133.0
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 191- 200, 62.50%]: CrossEntropyWithSoftmax = 2.61762085 * 640; EvalErrorPrediction = 0.66718750 * 640; time = 0.0076s; samplesPerSecond = 84544.3
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 201- 210, 65.62%]: CrossEntropyWithSoftmax = 2.60917358 * 640; EvalErrorPrediction = 0.64375000 * 640; time = 0.0075s; samplesPerSecond = 84801.9
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 211- 220, 68.75%]: CrossEntropyWithSoftmax = 2.46868286 * 640; EvalErrorPrediction = 0.62500000 * 640; time = 0.0076s; samplesPerSecond = 84533.1
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 221- 230, 71.88%]: CrossEntropyWithSoftmax = 2.63320923 * 640; EvalErrorPrediction = 0.68593750 * 640; time = 0.0076s; samplesPerSecond = 84757.0
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 231- 240, 75.00%]: CrossEntropyWithSoftmax = 2.39415283 * 640; EvalErrorPrediction = 0.63437500 * 640; time = 0.0075s; samplesPerSecond = 85015.9
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 241- 250, 78.12%]: CrossEntropyWithSoftmax = 2.41368408 * 640; EvalErrorPrediction = 0.62187500 * 640; time = 0.0075s; samplesPerSecond = 85253.8
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 251- 260, 81.25%]: CrossEntropyWithSoftmax = 2.38572998 * 640; EvalErrorPrediction = 0.62812500 * 640; time = 0.0076s; samplesPerSecond = 84633.7
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 261- 270, 84.38%]: CrossEntropyWithSoftmax = 2.27224121 * 640; EvalErrorPrediction = 0.62968750 * 640; time = 0.0076s; samplesPerSecond = 84055.7
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 271- 280, 87.50%]: CrossEntropyWithSoftmax = 2.28541870 * 640; EvalErrorPrediction = 0.60000000 * 640; time = 0.0075s; samplesPerSecond = 85027.2
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 281- 290, 90.62%]: CrossEntropyWithSoftmax = 2.23679199 * 640; EvalErrorPrediction = 0.61562500 * 640; time = 0.0076s; samplesPerSecond = 84555.4
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 291- 300, 93.75%]: CrossEntropyWithSoftmax = 2.09804688 * 640; EvalErrorPrediction = 0.55156250 * 640; time = 0.0075s; samplesPerSecond = 84937.0
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 301- 310, 96.88%]: CrossEntropyWithSoftmax = 2.26342163 * 640; EvalErrorPrediction = 0.61718750 * 640; time = 0.0075s; samplesPerSecond = 84835.6
07/14/2016 14:17:15:  Epoch[ 1 of 3]-Minibatch[ 311- 320, 100.00%]: CrossEntropyWithSoftmax = 2.10312500 * 640; EvalErrorPrediction = 0.54843750 * 640; time = 0.0075s; samplesPerSecond = 84869.4
07/14/2016 14:17:15: Finished Epoch[ 1 of 3]: [Training] CrossEntropyWithSoftmax = 2.98112621 * 20480; EvalErrorPrediction = 0.72016602 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=0.24821s
07/14/2016 14:17:15: SGD: Saving checkpoint model '/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.dnn.1'

07/14/2016 14:17:15: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 1, with 1 datapasses

07/14/2016 14:17:15: Starting minibatch loop.
07/14/2016 14:17:15:  Epoch[ 2 of 3]-Minibatch[   1-  10, 12.50%]: CrossEntropyWithSoftmax = 2.03823891 * 2560; EvalErrorPrediction = 0.55156250 * 2560; time = 0.0143s; samplesPerSecond = 179435.1
07/14/2016 14:17:15:  Epoch[ 2 of 3]-Minibatch[  11-  20, 25.00%]: CrossEntropyWithSoftmax = 1.99128799 * 2560; EvalErrorPrediction = 0.54257813 * 2560; time = 0.0122s; samplesPerSecond = 209167.4
07/14/2016 14:17:15:  Epoch[ 2 of 3]-Minibatch[  21-  30, 37.50%]: CrossEntropyWithSoftmax = 1.97657089 * 2560; EvalErrorPrediction = 0.53710938 * 2560; time = 0.0122s; samplesPerSecond = 209853.3
07/14/2016 14:17:15:  Epoch[ 2 of 3]-Minibatch[  31-  40, 50.00%]: CrossEntropyWithSoftmax = 1.92676125 * 2560; EvalErrorPrediction = 0.53476563 * 2560; time = 0.0122s; samplesPerSecond = 210077.1
07/14/2016 14:17:15:  Epoch[ 2 of 3]-Minibatch[  41-  50, 62.50%]: CrossEntropyWithSoftmax = 1.90556793 * 2560; EvalErrorPrediction = 0.52890625 * 2560; time = 0.0122s; samplesPerSecond = 209973.8
07/14/2016 14:17:15:  Epoch[ 2 of 3]-Minibatch[  51-  60, 75.00%]: CrossEntropyWithSoftmax = 1.92869720 * 2560; EvalErrorPrediction = 0.53085938 * 2560; time = 0.0122s; samplesPerSecond = 209647.0
07/14/2016 14:17:15:  Epoch[ 2 of 3]-Minibatch[  61-  70, 87.50%]: CrossEntropyWithSoftmax = 1.89329758 * 2560; EvalErrorPrediction = 0.52460938 * 2560; time = 0.0122s; samplesPerSecond = 210094.4
07/14/2016 14:17:15:  Epoch[ 2 of 3]-Minibatch[  71-  80, 100.00%]: CrossEntropyWithSoftmax = 1.83673553 * 2560; EvalErrorPrediction = 0.51953125 * 2560; time = 0.0122s; samplesPerSecond = 209818.9
07/14/2016 14:17:15: Finished Epoch[ 2 of 3]: [Training] CrossEntropyWithSoftmax = 1.93714466 * 20480; EvalErrorPrediction = 0.53374023 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=0.101727s
07/14/2016 14:17:15: SGD: Saving checkpoint model '/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.dnn.2'

07/14/2016 14:17:15: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 1, with 1 datapasses

07/14/2016 14:17:15: Starting minibatch loop.
07/14/2016 14:17:15:  Epoch[ 3 of 3]-Minibatch[   1-  10, 50.00%]: CrossEntropyWithSoftmax = 1.86187706 * 10240; EvalErrorPrediction = 0.51992187 * 10240; time = 0.0342s; samplesPerSecond = 299459.0
07/14/2016 14:17:15:  Epoch[ 3 of 3]-Minibatch[  11-  20, 100.00%]: CrossEntropyWithSoftmax = 1.82934265 * 10240; EvalErrorPrediction = 0.50839844 * 10240; time = 0.0301s; samplesPerSecond = 339759.1
07/14/2016 14:17:15: Finished Epoch[ 3 of 3]: [Training] CrossEntropyWithSoftmax = 1.84560986 * 20480; EvalErrorPrediction = 0.51416016 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-05; epochTime=0.068213s
07/14/2016 14:17:15: SGD: Saving checkpoint model '/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.dnn'
07/14/2016 14:17:15: CNTKCommandTrainEnd: speechTrain

07/14/2016 14:17:15: Action "train" complete.


07/14/2016 14:17:15: ##############################################################################
07/14/2016 14:17:15: #                                                                            #
07/14/2016 14:17:15: # Action "SVD"                                                               #
07/14/2016 14:17:15: #                                                                            #
07/14/2016 14:17:15: ##############################################################################


Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 25 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *1]
Validating --> W2 = LearnableParameter() :  -> [132 x 512]
Validating --> W1 = LearnableParameter() :  -> [512 x 512]
Validating --> W0 = LearnableParameter() :  -> [512 x 363]
Validating --> features = InputValue() :  -> [363 x *1]
Validating --> MeanOfFeatures = Mean (features) : [363 x *1] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *1] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *1], [363], [363] -> [363 x *1]
Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *1] -> [512 x *1]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *1] -> [132 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *1], [132 x 1] -> [132 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *1] -> [132 x 1 x *1]
Validating --> Prior = Mean (labels) : [132 x *1] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *1], [132] -> [132 x 1 x *1]

Validating network. 17 nodes to process in pass 2.


Validating network, final pass.



12 out of 25 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

--------------------------------------------------------------------------------------------
ParameterSVD: start to process group 0 with KeepRatio=0.50
--------------------------------------------------------------------------------------------
Performing SVD for a   512-by-363   matrix (node name: W0                  ) ---  computation time  0.12 secs ;  keep 50.0% energy ===> keep   104 svd values (reduce to 49.0% parameters) 
Performing SVD for a   512-by-512   matrix (node name: W1                  ) ---  computation time  0.22 secs ;  keep 50.0% energy ===> keep   128 svd values (reduce to 50.0% parameters) 
Performing SVD for a   132-by-512   matrix (node name: W2                  ) ---  computation time  0.03 secs ;  keep 50.0% energy ===> keep    32 svd values (reduce to 30.5% parameters) 

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 31 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *1]
Validating --> W2_U = LearnableParameter() :  -> [132 x 32]
Validating --> W2_V = LearnableParameter() :  -> [32 x 512]
Validating --> W1_U = LearnableParameter() :  -> [512 x 128]
Validating --> W1_V = LearnableParameter() :  -> [128 x 512]
Validating --> W0_U = LearnableParameter() :  -> [512 x 104]
Validating --> W0_V = LearnableParameter() :  -> [104 x 363]
Validating --> features = InputValue() :  -> [363 x *1]
Validating --> MeanOfFeatures = Mean (features) : [363 x *1] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *1] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *1], [363], [363] -> [363 x *1]
Validating --> W0*features = Times (W0_V, MVNormalizedFeatures) : [104 x 363], [363 x *1] -> [104 x *1]
Validating --> W0_SVD = Times (W0_U, W0*features) : [512 x 104], [104 x *1] -> [512 x *1]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0_SVD, B0) : [512 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W1*H1 = Times (W1_V, H1) : [128 x 512], [512 x 1 x *1] -> [128 x 1 x *1]
Validating --> W1_SVD = Times (W1_U, W1*H1) : [512 x 128], [128 x 1 x *1] -> [512 x 1 x *1]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1_SVD, B1) : [512 x 1 x *1], [512 x 1] -> [512 x 1 x *1]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *1] -> [512 x 1 x *1]
Validating --> W2*H1 = Times (W2_V, H2) : [32 x 512], [512 x 1 x *1] -> [32 x 1 x *1]
Validating --> W2_SVD = Times (W2_U, W2*H1) : [132 x 32], [32 x 1 x *1] -> [132 x 1 x *1]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2_SVD, B2) : [132 x 1 x *1], [132 x 1] -> [132 x 1 x *1]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *1], [132 x 1 x *1] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *1] -> [132 x 1 x *1]
Validating --> Prior = Mean (labels) : [132 x *1] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *1], [132] -> [132 x 1 x *1]

Validating network. 16 nodes to process in pass 2.


Validating network, final pass.



15 out of 31 nodes do not share the minibatch layout with the input data.

Post-processing network complete.


07/14/2016 14:17:16: Action "SVD" complete.


07/14/2016 14:17:16: ##############################################################################
07/14/2016 14:17:16: #                                                                            #
07/14/2016 14:17:16: # Action "train"                                                             #
07/14/2016 14:17:16: #                                                                            #
07/14/2016 14:17:16: ##############################################################################

07/14/2016 14:17:16: CNTKCommandTrainBegin: SVDTrain
NDLBuilder Using GPU 0
reading script file glob_0000.scp ... 946 entries
total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
...............................................................................................feature set 0: 252508 frames in 946 out of 946 utterances
label set 0: 129 classes
minibatchutterancesource: 946 utterances grouped into 3 chunks, av. chunk size: 315.3 utterances, 84169.3 frames

07/14/2016 14:17:16: Starting from checkpoint. Loading network from '/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn.0'.

Post-processing network...

7 roots:
	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
	EvalErrorPrediction = ErrorPrediction()
	InvStdOfFeatures = InvStdDev()
	MeanOfFeatures = Mean()
	PosteriorProb = Softmax()
	Prior = Mean()
	ScaledLogLikelihood = Minus()

Validating network. 31 nodes to process in pass 1.

Validating --> labels = InputValue() :  -> [132 x *3]
Validating --> W2_U = LearnableParameter() :  -> [132 x 32]
Validating --> W2_V = LearnableParameter() :  -> [32 x 512]
Validating --> W1_U = LearnableParameter() :  -> [512 x 128]
Validating --> W1_V = LearnableParameter() :  -> [128 x 512]
Validating --> W0_U = LearnableParameter() :  -> [512 x 104]
Validating --> W0_V = LearnableParameter() :  -> [104 x 363]
Validating --> features = InputValue() :  -> [363 x *3]
Validating --> MeanOfFeatures = Mean (features) : [363 x *3] -> [363]
Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *3] -> [363]
Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *3], [363], [363] -> [363 x *3]
Validating --> W0*features = Times (W0_V, MVNormalizedFeatures) : [104 x 363], [363 x *3] -> [104 x *3]
Validating --> W0_SVD = Times (W0_U, W0*features) : [512 x 104], [104 x *3] -> [512 x *3]
Validating --> B0 = LearnableParameter() :  -> [512 x 1]
Validating --> W0*features+B0 = Plus (W0_SVD, B0) : [512 x *3], [512 x 1] -> [512 x 1 x *3]
Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *3] -> [512 x 1 x *3]
Validating --> W1*H1 = Times (W1_V, H1) : [128 x 512], [512 x 1 x *3] -> [128 x 1 x *3]
Validating --> W1_SVD = Times (W1_U, W1*H1) : [512 x 128], [128 x 1 x *3] -> [512 x 1 x *3]
Validating --> B1 = LearnableParameter() :  -> [512 x 1]
Validating --> W1*H1+B1 = Plus (W1_SVD, B1) : [512 x 1 x *3], [512 x 1] -> [512 x 1 x *3]
Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *3] -> [512 x 1 x *3]
Validating --> W2*H1 = Times (W2_V, H2) : [32 x 512], [512 x 1 x *3] -> [32 x 1 x *3]
Validating --> W2_SVD = Times (W2_U, W2*H1) : [132 x 32], [32 x 1 x *3] -> [132 x 1 x *3]
Validating --> B2 = LearnableParameter() :  -> [132 x 1]
Validating --> HLast = Plus (W2_SVD, B2) : [132 x 1 x *3], [132 x 1] -> [132 x 1 x *3]
Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *3], [132 x 1 x *3] -> [1]
Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *3], [132 x 1 x *3] -> [1]
Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *3] -> [132 x 1 x *3]
Validating --> Prior = Mean (labels) : [132 x *3] -> [132]
Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *3], [132] -> [132 x 1 x *3]

Validating network. 20 nodes to process in pass 2.


Validating network, final pass.



15 out of 31 nodes do not share the minibatch layout with the input data.

Post-processing network complete.

07/14/2016 14:17:16: Loaded model with 31 nodes on GPU 0.

07/14/2016 14:17:16: Training criterion node(s):
07/14/2016 14:17:16: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax

07/14/2016 14:17:16: Evaluation criterion node(s):

07/14/2016 14:17:16: 	EvalErrorPrediction = ErrorPrediction


Allocating matrices for forward and/or backward propagation.

Memory Sharing Structure:

(nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *3]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *3]] [PosteriorProb Value[132 x 1 x *3]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *3]] [features Gradient[363 x *3]] [labels Gradient[132 x *3]] }
0x1bc34d8: {[B1 Value[512 x 1]] }
0x1c03c48: {[W0*features+B0 Value[512 x 1 x *3]] [W0_U Gradient[512 x 104]] }
0x1c03e08: {[H1 Value[512 x 1 x *3]] [W0_SVD Gradient[512 x *3]] }
0x1c03fc8: {[W0*features Gradient[104 x *3]] [W0*features+B0 Gradient[512 x 1 x *3]] [W1*H1 Value[128 x 1 x *3]] }
0x1c04188: {[W1_SVD Value[512 x 1 x *3]] [W1_V Gradient[128 x 512]] }
0x1c04348: {[W1*H1+B1 Value[512 x 1 x *3]] [W1_U Gradient[512 x 128]] }
0x1c04508: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *3]] [H2 Value[512 x 1 x *3]] [W1_SVD Gradient[512 x 1 x *3]] }
0x1c187b8: {[CrossEntropyWithSoftmax Gradient[1]] }
0x1c18978: {[HLast Gradient[132 x 1 x *3]] [W2*H1 Gradient[32 x 1 x *3]] }
0x1c18b38: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *3]] [W2_SVD Gradient[132 x 1 x *3]] }
0x1c18cf8: {[B2 Gradient[132 x 1]] }
0x1c1b568: {[MVNormalizedFeatures Value[363 x *3]] }
0x1c20508: {[ScaledLogLikelihood Value[132 x 1 x *3]] }
0x1c206c8: {[CrossEntropyWithSoftmax Value[1]] }
0x1c3e798: {[W1_U Value[512 x 128]] }
0x1c59698: {[W0_V Value[104 x 363]] }
0x1c6e7e8: {[Prior Value[132]] }
0x1c74528: {[InvStdOfFeatures Value[363]] }
0x1c79368: {[W1_V Value[128 x 512]] }
0x1c7a128: {[MeanOfFeatures Value[363]] }
0x1c7c5d8: {[features Value[363 x *3]] }
0x1c7d0e8: {[EvalErrorPrediction Value[1]] }
0x1c82078: {[W2_U Value[132 x 32]] }
0x1c821d8: {[W2_V Value[32 x 512]] }
0x1d04138: {[W0*features Value[104 x *3]] }
0x1d04298: {[W0_SVD Value[512 x *3]] [W0_V Gradient[104 x 363]] }
0x1d043e8: {[LogOfPrior Value[132]] }
0x1d05428: {[B0 Value[512 x 1]] }
0x1d16b18: {[B2 Value[132 x 1]] }
0x1d1e578: {[W0_U Value[512 x 104]] }
0x1d34978: {[labels Value[132 x *3]] }
0x1f2e2e8: {[W1*H1 Gradient[128 x 1 x *3]] [W1*H1+B1 Gradient[512 x 1 x *3]] [W2*H1 Value[32 x 1 x *3]] }
0x1f2e4a8: {[W2_SVD Value[132 x 1 x *3]] [W2_V Gradient[32 x 512]] }
0x1f2e668: {[HLast Value[132 x 1 x *3]] [W2_U Gradient[132 x 32]] }

07/14/2016 14:17:16: No PreCompute nodes found, skipping PreCompute step.

07/14/2016 14:17:16: Starting Epoch 1: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms

07/14/2016 14:17:16: Starting minibatch loop.
07/14/2016 14:17:16:  Epoch[ 1 of 2]-Minibatch[   1-  10, 50.00%]: CrossEntropyWithSoftmax = 1.83599281 * 10240; EvalErrorPrediction = 0.50751953 * 10240; time = 0.0381s; samplesPerSecond = 268625.4
07/14/2016 14:17:16:  Epoch[ 1 of 2]-Minibatch[  11-  20, 100.00%]: CrossEntropyWithSoftmax = 1.80718269 * 10240; EvalErrorPrediction = 0.50810547 * 10240; time = 0.0296s; samplesPerSecond = 345642.3
07/14/2016 14:17:16: Finished Epoch[ 1 of 2]: [Training] CrossEntropyWithSoftmax = 1.82158775 * 20480; EvalErrorPrediction = 0.50781250 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 9.7656251e-05; epochTime=0.20866s
07/14/2016 14:17:16: SGD: Saving checkpoint model '/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn.1'

07/14/2016 14:17:16: Starting Epoch 2: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 1, with 1 datapasses

07/14/2016 14:17:16: Starting minibatch loop.
07/14/2016 14:17:16:  Epoch[ 2 of 2]-Minibatch[   1-  10, 50.00%]: CrossEntropyWithSoftmax = 1.81160030 * 10240; EvalErrorPrediction = 0.50712891 * 10240; time = 0.0301s; samplesPerSecond = 340097.6
07/14/2016 14:17:16:  Epoch[ 2 of 2]-Minibatch[  11-  20, 100.00%]: CrossEntropyWithSoftmax = 1.79177837 * 10240; EvalErrorPrediction = 0.50166016 * 10240; time = 0.0286s; samplesPerSecond = 358392.8
07/14/2016 14:17:16: Finished Epoch[ 2 of 2]: [Training] CrossEntropyWithSoftmax = 1.80168934 * 20480; EvalErrorPrediction = 0.50439453 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 9.7656251e-05; epochTime=0.062142s
07/14/2016 14:17:16: SGD: Saving checkpoint model '/tmp/cntk-test-20160714141322.924935/Speech_SVD@release_gpu/models/cntkSpeech.svd.dnn'
07/14/2016 14:17:16: CNTKCommandTrainEnd: SVDTrain

07/14/2016 14:17:16: Action "train" complete.

07/14/2016 14:17:16: __COMPLETED__