CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 264172964 kB
-------------------------------------------------------------------
=== Running mpiexec -n 2 /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/.. OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu DeviceId=-1 timestamping=true numCPUThreads=12 precision=double speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]] stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/stderr
-------------------------------------------------------------------
Build info: 

		Built time: Jul 15 2016 07:37:16
		Last modified date: Tue Jul 12 04:28:35 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 500f0ccaa040821405404d7879c0e823003f1544
		Built by philly on 34e58dd0283f
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPIWrapper: initializing MPI
-------------------------------------------------------------------
Build info: 

		Built time: Jul 15 2016 07:37:16
		Last modified date: Tue Jul 12 04:28:35 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 500f0ccaa040821405404d7879c0e823003f1544
		Built by philly on 34e58dd0283f
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (1) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (0) are in (participating)
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 1 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 0 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: all 2 nodes responded
ping [mpihelper]: all 2 nodes responded
07/15/2016 07:40:14: Redirecting stderr to file /tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/stderr_speechTrain.logrank0
07/15/2016 07:40:14: Redirecting stderr to file /tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/stderr_speechTrain.logrank1
MPI Rank 0: 07/15/2016 07:40:14: -------------------------------------------------------------------
MPI Rank 0: 07/15/2016 07:40:14: Build info: 
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:14: 		Built time: Jul 15 2016 07:37:16
MPI Rank 0: 07/15/2016 07:40:14: 		Last modified date: Tue Jul 12 04:28:35 2016
MPI Rank 0: 07/15/2016 07:40:14: 		Build type: release
MPI Rank 0: 07/15/2016 07:40:14: 		Build target: GPU
MPI Rank 0: 07/15/2016 07:40:14: 		With 1bit-SGD: yes
MPI Rank 0: 07/15/2016 07:40:14: 		Math lib: mkl
MPI Rank 0: 07/15/2016 07:40:14: 		CUDA_PATH: /usr/local/cuda-7.5
MPI Rank 0: 07/15/2016 07:40:14: 		CUB_PATH: /usr/local/cub-1.4.1
MPI Rank 0: 07/15/2016 07:40:14: 		CUDNN_PATH: /usr/local/cudnn-4.0
MPI Rank 0: 07/15/2016 07:40:14: 		Build Branch: HEAD
MPI Rank 0: 07/15/2016 07:40:14: 		Build SHA1: 500f0ccaa040821405404d7879c0e823003f1544
MPI Rank 0: 07/15/2016 07:40:14: 		Built by philly on 34e58dd0283f
MPI Rank 0: 07/15/2016 07:40:14: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
MPI Rank 0: 07/15/2016 07:40:14: -------------------------------------------------------------------
MPI Rank 0: 07/15/2016 07:40:15: -------------------------------------------------------------------
MPI Rank 0: 07/15/2016 07:40:15: GPU info:
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 0: 07/15/2016 07:40:15: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 0: 07/15/2016 07:40:15: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 0: 07/15/2016 07:40:15: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 0: 07/15/2016 07:40:15: -------------------------------------------------------------------
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: Running on localhost at 2016/07/15 07:40:15
MPI Rank 0: 07/15/2016 07:40:15: Command line: 
MPI Rank 0: /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..  OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu  DeviceId=-1  timestamping=true  numCPUThreads=12  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 07/15/2016 07:40:15: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = $DeviceId$
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = $DeviceId$
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=12
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 07/15/2016 07:40:15: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = -1
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=12
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: configparameters: cntk.cntk:command=speechTrain
MPI Rank 0: configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: configparameters: cntk.cntk:deviceId=-1
MPI Rank 0: configparameters: cntk.cntk:numCPUThreads=12
MPI Rank 0: configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 0: configparameters: cntk.cntk:precision=double
MPI Rank 0: configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu
MPI Rank 0: configparameters: cntk.cntk:speechTrain=[
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: 
MPI Rank 0: configparameters: cntk.cntk:stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: configparameters: cntk.cntk:timestamping=true
MPI Rank 0: 07/15/2016 07:40:15: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 07/15/2016 07:40:15: Commands: speechTrain
MPI Rank 0: 07/15/2016 07:40:15: Precision = "double"
MPI Rank 0: 07/15/2016 07:40:15: Using 12 CPU threads.
MPI Rank 0: 07/15/2016 07:40:15: CNTKModelPath: /tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn
MPI Rank 0: 07/15/2016 07:40:15: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 0: 07/15/2016 07:40:15: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: ##############################################################################
MPI Rank 0: 07/15/2016 07:40:15: #                                                                            #
MPI Rank 0: 07/15/2016 07:40:15: # Action "train"                                                             #
MPI Rank 0: 07/15/2016 07:40:15: #                                                                            #
MPI Rank 0: 07/15/2016 07:40:15: ##############################################################################
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: CNTKCommandTrainBegin: speechTrain
MPI Rank 0: SimpleNetworkBuilder Using CPU
MPI Rank 0: reading script file glob_0000.scp ... 946 entries
MPI Rank 0: total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
MPI Rank 0: htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
MPI Rank 0: ...............................................................................................feature set 0: 252508 frames in 946 out of 946 utterances
MPI Rank 0: label set 0: 129 classes
MPI Rank 0: minibatchutterancesource: 946 utterances grouped into 3 chunks, av. chunk size: 315.3 utterances, 84169.3 frames
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: Creating virgin network.
MPI Rank 0: 
MPI Rank 0: Post-processing network...
MPI Rank 0: 
MPI Rank 0: 7 roots:
MPI Rank 0: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 0: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 0: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 	MeanOfFeatures = Mean()
MPI Rank 0: 	PosteriorProb = Softmax()
MPI Rank 0: 	Prior = Mean()
MPI Rank 0: 	ScaledLogLikelihood = Minus()
MPI Rank 0: 
MPI Rank 0: Validating network. 25 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 0: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 0: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 0: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 0: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 0: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 0: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 0: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 0: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 0: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 0: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 0: 
MPI Rank 0: Validating network. 17 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating network, final pass.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: Post-processing network complete.
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: Created model with 25 nodes on CPU.
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: Training criterion node(s):
MPI Rank 0: 07/15/2016 07:40:15: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: Evaluation criterion node(s):
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Allocating matrices for forward and/or backward propagation.
MPI Rank 0: 
MPI Rank 0: Memory Sharing Structure:
MPI Rank 0: 
MPI Rank 0: (nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 0: 0x2545048: {[features Value[363 x *]] }
MPI Rank 0: 0x2696ca8: {[B2 Value[132 x 1]] }
MPI Rank 0: 0x26c3008: {[W1 Value[512 x 512]] }
MPI Rank 0: 0x28af4b8: {[W0 Value[512 x 363]] }
MPI Rank 0: 0x28cd338: {[B0 Value[512 x 1]] }
MPI Rank 0: 0x28ddfd8: {[Prior Value[132]] }
MPI Rank 0: 0x28ded08: {[InvStdOfFeatures Value[363]] }
MPI Rank 0: 0x28e5238: {[B1 Value[512 x 1]] }
MPI Rank 0: 0x28e63a8: {[W0*features Value[512 x *]] }
MPI Rank 0: 0x28e68d8: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 0: 0x28eeca8: {[EvalErrorPrediction Value[1]] }
MPI Rank 0: 0x28eefa8: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 0: 0x28ef168: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 0: 0x28fdf68: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 0: 0x28fe128: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 0: 0x28fe2e8: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 0: 0x28fe4a8: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 0: 0x28fe668: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 0: 0x290bdb8: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 0: 0x290bf78: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 0: 0x290c1b8: {[LogOfPrior Value[132]] }
MPI Rank 0: 0x291c1c8: {[W2 Value[132 x 512]] }
MPI Rank 0: 0x291d6d8: {[MeanOfFeatures Value[363]] }
MPI Rank 0: 0x291d878: {[labels Value[132 x *]] }
MPI Rank 0: 0x291ed28: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 0: 0x291eee8: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 0: 0x291f0a8: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 0: 0x291f268: {[B2 Gradient[132 x 1]] }
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: Precomputing --> 3 PreCompute nodes found.
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:15: 	MeanOfFeatures = Mean()
MPI Rank 0: 07/15/2016 07:40:15: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 07/15/2016 07:40:15: 	Prior = Mean()
MPI Rank 0: minibatchiterator: epoch 0: frames [0..252508] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:17: Precomputing --> Completed.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:17: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 0: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:17: Starting minibatch loop.
MPI Rank 0: 07/15/2016 07:40:17:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.63389229 * 192; EvalErrorPrediction = 0.93229167 * 192; time = 0.1039s; samplesPerSecond = 1848.3
MPI Rank 0: 07/15/2016 07:40:17:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.45833369 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 0.0941s; samplesPerSecond = 2040.4
MPI Rank 0: 07/15/2016 07:40:17:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.57954549 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0935s; samplesPerSecond = 2053.7
MPI Rank 0: 07/15/2016 07:40:17:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.38909786 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0950s; samplesPerSecond = 2020.3
MPI Rank 0: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.50958103 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0933s; samplesPerSecond = 2058.1
MPI Rank 0: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.62%]: CrossEntropyWithSoftmax = 4.36870130 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 0.0960s; samplesPerSecond = 2000.1
MPI Rank 0: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 3.91504203 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0989s; samplesPerSecond = 1940.4
MPI Rank 0: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.10208906 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0975s; samplesPerSecond = 1970.2
MPI Rank 0: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.93008100 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.0947s; samplesPerSecond = 2027.3
MPI Rank 0: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.91484418 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0964s; samplesPerSecond = 1991.7
MPI Rank 0: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.95323697 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0973s; samplesPerSecond = 1972.4
MPI Rank 0: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.86236511 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0990s; samplesPerSecond = 1939.9
MPI Rank 0: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.85885844 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0954s; samplesPerSecond = 2013.4
MPI Rank 0: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.12%]: CrossEntropyWithSoftmax = 3.61539867 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0967s; samplesPerSecond = 1985.4
MPI Rank 0: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.69034639 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0996s; samplesPerSecond = 1928.7
MPI Rank 0: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.66917314 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.1076s; samplesPerSecond = 1783.9
MPI Rank 0: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.83017263 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 0.1002s; samplesPerSecond = 1916.4
MPI Rank 0: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.61640211 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0985s; samplesPerSecond = 1949.5
MPI Rank 0: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.41494315 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0970s; samplesPerSecond = 1980.2
MPI Rank 0: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.75243966 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0994s; samplesPerSecond = 1932.4
MPI Rank 0: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.74288125 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0970s; samplesPerSecond = 1978.7
MPI Rank 0: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.62%]: CrossEntropyWithSoftmax = 3.67295164 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0935s; samplesPerSecond = 2054.1
MPI Rank 0: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.63572174 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0976s; samplesPerSecond = 1966.6
MPI Rank 0: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.42127234 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0977s; samplesPerSecond = 1965.0
MPI Rank 0: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.46775883 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0969s; samplesPerSecond = 1981.7
MPI Rank 0: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.15370288 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0954s; samplesPerSecond = 2011.6
MPI Rank 0: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.46422707 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0973s; samplesPerSecond = 1973.6
MPI Rank 0: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.23871301 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0969s; samplesPerSecond = 1980.5
MPI Rank 0: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.49457613 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0967s; samplesPerSecond = 1985.1
MPI Rank 0: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.12%]: CrossEntropyWithSoftmax = 3.23872885 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0926s; samplesPerSecond = 2073.4
MPI Rank 0: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.61007515 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0981s; samplesPerSecond = 1958.1
MPI Rank 0: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.39403276 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0999s; samplesPerSecond = 1922.0
MPI Rank 0: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.34125945 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0943s; samplesPerSecond = 2036.4
MPI Rank 0: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.30686415 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0971s; samplesPerSecond = 1977.6
MPI Rank 0: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.28225825 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0977s; samplesPerSecond = 1965.9
MPI Rank 0: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.54632107 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0967s; samplesPerSecond = 1984.6
MPI Rank 0: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.15975609 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.1004s; samplesPerSecond = 1912.4
MPI Rank 0: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.62%]: CrossEntropyWithSoftmax = 3.13618287 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.1012s; samplesPerSecond = 1897.0
MPI Rank 0: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.15144651 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0967s; samplesPerSecond = 1984.5
MPI Rank 0: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.42811255 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0970s; samplesPerSecond = 1979.7
MPI Rank 0: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.26845711 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0954s; samplesPerSecond = 2012.6
MPI Rank 0: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 2.95512372 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0958s; samplesPerSecond = 2004.4
MPI Rank 0: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.18488153 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0964s; samplesPerSecond = 1991.3
MPI Rank 0: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.14196889 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0953s; samplesPerSecond = 2015.6
MPI Rank 0: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.15175823 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0928s; samplesPerSecond = 2068.4
MPI Rank 0: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.12%]: CrossEntropyWithSoftmax = 2.92713234 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0930s; samplesPerSecond = 2065.2
MPI Rank 0: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.98379506 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0951s; samplesPerSecond = 2018.6
MPI Rank 0: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.12743476 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0951s; samplesPerSecond = 2019.4
MPI Rank 0: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.08109336 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0935s; samplesPerSecond = 2053.4
MPI Rank 0: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 3.08951642 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0964s; samplesPerSecond = 1991.6
MPI Rank 0: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 3.09443965 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0921s; samplesPerSecond = 2085.6
MPI Rank 0: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 2.99016661 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0950s; samplesPerSecond = 2020.3
MPI Rank 0: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 2.90819932 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0977s; samplesPerSecond = 1965.6
MPI Rank 0: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.62%]: CrossEntropyWithSoftmax = 2.90955782 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0961s; samplesPerSecond = 1997.9
MPI Rank 0: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 2.99324373 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0979s; samplesPerSecond = 1961.0
MPI Rank 0: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.80131478 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0930s; samplesPerSecond = 2065.4
MPI Rank 0: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.89199520 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0989s; samplesPerSecond = 1940.9
MPI Rank 0: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.91873286 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0986s; samplesPerSecond = 1947.4
MPI Rank 0: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.89015238 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0964s; samplesPerSecond = 1991.8
MPI Rank 0: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.86356184 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0946s; samplesPerSecond = 2028.9
MPI Rank 0: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.79468471 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0949s; samplesPerSecond = 2022.7
MPI Rank 0: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.73822492 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0952s; samplesPerSecond = 2015.9
MPI Rank 0: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.89731040 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0966s; samplesPerSecond = 1987.1
MPI Rank 0: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.57846960 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0994s; samplesPerSecond = 1930.9
MPI Rank 0: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.56566131 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0967s; samplesPerSecond = 1985.6
MPI Rank 0: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.65335727 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0950s; samplesPerSecond = 2021.8
MPI Rank 0: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.76336810 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0999s; samplesPerSecond = 1922.7
MPI Rank 0: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.60944478 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.1024s; samplesPerSecond = 1875.7
MPI Rank 0: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.57942439 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0969s; samplesPerSecond = 1981.1
MPI Rank 0: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.62%]: CrossEntropyWithSoftmax = 2.76807082 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0942s; samplesPerSecond = 2038.3
MPI Rank 0: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.49105732 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0959s; samplesPerSecond = 2001.2
MPI Rank 0: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.61632083 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0970s; samplesPerSecond = 1979.4
MPI Rank 0: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.44924745 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0997s; samplesPerSecond = 1926.4
MPI Rank 0: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.65090260 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0958s; samplesPerSecond = 2004.1
MPI Rank 0: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.69321049 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0947s; samplesPerSecond = 2026.7
MPI Rank 0: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.71775648 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0962s; samplesPerSecond = 1994.8
MPI Rank 0: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.46117437 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0949s; samplesPerSecond = 2024.0
MPI Rank 0: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.12%]: CrossEntropyWithSoftmax = 2.37521804 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0987s; samplesPerSecond = 1944.5
MPI Rank 0: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.49931632 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0992s; samplesPerSecond = 1935.0
MPI Rank 0: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.49153873 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0968s; samplesPerSecond = 1982.9
MPI Rank 0: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.37059892 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0944s; samplesPerSecond = 2034.2
MPI Rank 0: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.56556702 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0957s; samplesPerSecond = 2006.0
MPI Rank 0: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.43440265 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0969s; samplesPerSecond = 1981.8
MPI Rank 0: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.38655954 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0978s; samplesPerSecond = 1963.1
MPI Rank 0: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.48894139 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.1001s; samplesPerSecond = 1918.7
MPI Rank 0: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.62%]: CrossEntropyWithSoftmax = 2.43025617 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0956s; samplesPerSecond = 2009.0
MPI Rank 0: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.41569834 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0953s; samplesPerSecond = 2014.0
MPI Rank 0: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.33125343 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0978s; samplesPerSecond = 1962.8
MPI Rank 0: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.45492453 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0992s; samplesPerSecond = 1936.1
MPI Rank 0: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.17205678 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0984s; samplesPerSecond = 1950.3
MPI Rank 0: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.36654958 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0964s; samplesPerSecond = 1992.7
MPI Rank 0: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.27596218 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.1012s; samplesPerSecond = 1896.4
MPI Rank 0: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.30734557 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0949s; samplesPerSecond = 2023.2
MPI Rank 0: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.12%]: CrossEntropyWithSoftmax = 2.41511979 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0954s; samplesPerSecond = 2013.3
MPI Rank 0: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.16486987 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0965s; samplesPerSecond = 1988.8
MPI Rank 0: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.20333430 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0977s; samplesPerSecond = 1965.1
MPI Rank 0: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.19411356 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.1001s; samplesPerSecond = 1917.9
MPI Rank 0: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.21717829 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.1003s; samplesPerSecond = 1914.8
MPI Rank 0: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.20918754 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.1025s; samplesPerSecond = 1872.8
MPI Rank 0: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.07852021 * 192; EvalErrorPrediction = 0.52083333 * 192; time = 0.0992s; samplesPerSecond = 1935.6
MPI Rank 0: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.33405780 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0958s; samplesPerSecond = 2004.7
MPI Rank 0: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.62%]: CrossEntropyWithSoftmax = 2.34144784 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0950s; samplesPerSecond = 2021.4
MPI Rank 0: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.26125270 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0973s; samplesPerSecond = 1972.5
MPI Rank 0: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.35679913 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0953s; samplesPerSecond = 2014.2
MPI Rank 0: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.25039354 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0991s; samplesPerSecond = 1938.0
MPI Rank 0: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 1.94123714 * 192; EvalErrorPrediction = 0.51562500 * 192; time = 0.0978s; samplesPerSecond = 1963.2
MPI Rank 0: 07/15/2016 07:40:27: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.01776111 * 20480; EvalErrorPrediction = 0.72788086 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=10.3558s
MPI Rank 0: 07/15/2016 07:40:27: SGD: Saving checkpoint model '/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.1'
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:27: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:27: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/15/2016 07:40:28:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.12589513 * 502; EvalErrorPrediction = 0.56374502 * 502; time = 0.2535s; samplesPerSecond = 1980.6
MPI Rank 0: 07/15/2016 07:40:28:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.03847039 * 489; EvalErrorPrediction = 0.53578732 * 489; time = 0.2236s; samplesPerSecond = 2187.1
MPI Rank 0: 07/15/2016 07:40:28:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.17462100 * 491; EvalErrorPrediction = 0.58248473 * 491; time = 0.2270s; samplesPerSecond = 2163.2
MPI Rank 0: 07/15/2016 07:40:28:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.06143408 * 498; EvalErrorPrediction = 0.54819277 * 498; time = 0.2241s; samplesPerSecond = 2222.7
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     1.02 seconds since last report (0.00 seconds on comm.); 4224 samples processed by 2 workers (2144 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 4.12k samplesPerSecond , throughputPerWorker = 2.06k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:29:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.12584269 * 506; EvalErrorPrediction = 0.55533597 * 506; time = 0.2578s; samplesPerSecond = 1962.5
MPI Rank 0: 07/15/2016 07:40:29:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.05725058 * 501; EvalErrorPrediction = 0.55888224 * 501; time = 0.2338s; samplesPerSecond = 2142.4
MPI Rank 0: 07/15/2016 07:40:29:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.96732904 * 480; EvalErrorPrediction = 0.52708333 * 480; time = 0.2175s; samplesPerSecond = 2207.0
MPI Rank 0: 07/15/2016 07:40:29:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.07566029 * 503; EvalErrorPrediction = 0.55864811 * 503; time = 0.2275s; samplesPerSecond = 2211.4
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     1.01 seconds since last report (0.00 seconds on comm.); 4220 samples processed by 2 workers (2165 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 4.16k samplesPerSecond , throughputPerWorker = 2.08k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:30:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.04234939 * 501; EvalErrorPrediction = 0.54291417 * 501; time = 0.2429s; samplesPerSecond = 2062.8
MPI Rank 0: 07/15/2016 07:40:30:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.00847482 * 476; EvalErrorPrediction = 0.55042017 * 476; time = 0.2196s; samplesPerSecond = 2167.7
MPI Rank 0: 07/15/2016 07:40:30:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 1.87607946 * 485; EvalErrorPrediction = 0.49896907 * 485; time = 0.2237s; samplesPerSecond = 2168.2
MPI Rank 0: 07/15/2016 07:40:30:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.09236511 * 505; EvalErrorPrediction = 0.59405941 * 505; time = 0.2330s; samplesPerSecond = 2167.2
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.01 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     1.04 seconds since last report (0.00 seconds on comm.); 4250 samples processed by 2 workers (2128 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 4.10k samplesPerSecond , throughputPerWorker = 2.05k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:31:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 1.95835448 * 500; EvalErrorPrediction = 0.53000000 * 500; time = 0.2839s; samplesPerSecond = 1761.4
MPI Rank 0: 07/15/2016 07:40:31:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.94716600 * 519; EvalErrorPrediction = 0.52023121 * 519; time = 0.2412s; samplesPerSecond = 2151.6
MPI Rank 0: 07/15/2016 07:40:31:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.96891077 * 515; EvalErrorPrediction = 0.53203883 * 515; time = 0.2316s; samplesPerSecond = 2224.1
MPI Rank 0: 07/15/2016 07:40:31:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.86321662 * 501; EvalErrorPrediction = 0.51896208 * 501; time = 0.2272s; samplesPerSecond = 2205.5
MPI Rank 0: 07/15/2016 07:40:31:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 1.94476828 * 513; EvalErrorPrediction = 0.50682261 * 513; time = 0.2355s; samplesPerSecond = 2178.2
MPI Rank 0: 07/15/2016 07:40:32:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 2.08294599 * 483; EvalErrorPrediction = 0.56521739 * 483; time = 0.2243s; samplesPerSecond = 2153.6
MPI Rank 0: 07/15/2016 07:40:32:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.99816497 * 480; EvalErrorPrediction = 0.55208333 * 480; time = 0.2252s; samplesPerSecond = 2131.7
MPI Rank 0: 07/15/2016 07:40:32:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.95495526 * 496; EvalErrorPrediction = 0.54435484 * 496; time = 0.2322s; samplesPerSecond = 2136.2
MPI Rank 0: 07/15/2016 07:40:32:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.83482509 * 468; EvalErrorPrediction = 0.51923077 * 468; time = 0.2117s; samplesPerSecond = 2211.2
MPI Rank 0: 07/15/2016 07:40:33:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.87806920 * 482; EvalErrorPrediction = 0.51452282 * 482; time = 0.2182s; samplesPerSecond = 2208.5
MPI Rank 0: 07/15/2016 07:40:33:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.98474688 * 513; EvalErrorPrediction = 0.54970760 * 513; time = 0.2342s; samplesPerSecond = 2190.0
MPI Rank 0: 07/15/2016 07:40:33:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.93795871 * 504; EvalErrorPrediction = 0.53373016 * 504; time = 0.2311s; samplesPerSecond = 2180.6
MPI Rank 0: 07/15/2016 07:40:33:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.88790266 * 479; EvalErrorPrediction = 0.53027140 * 479; time = 0.2174s; samplesPerSecond = 2203.7
MPI Rank 0: 07/15/2016 07:40:33:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.82845154 * 477; EvalErrorPrediction = 0.48427673 * 477; time = 0.2144s; samplesPerSecond = 2224.6
MPI Rank 0: 07/15/2016 07:40:34:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.85592160 * 324; EvalErrorPrediction = 0.54012346 * 324; time = 0.1514s; samplesPerSecond = 2140.3
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.01 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     3.11 seconds since last report (0.00 seconds on comm.); 7786 samples processed by 2 workers (6754 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 2.50k samplesPerSecond , throughputPerWorker = 1.25k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:34: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.01593617 * 20480; EvalErrorPrediction = 0.54677734 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=6.1879s
MPI Rank 0: 07/15/2016 07:40:34: SGD: Saving checkpoint model '/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.2'
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:34: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:34: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/15/2016 07:40:35:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.91205151 * 1914; EvalErrorPrediction = 0.52351097 * 1914; time = 0.9217s; samplesPerSecond = 2076.5
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     1.21 seconds since last report (0.00 seconds on comm.); 4884 samples processed by 2 workers (2567 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 4.03k samplesPerSecond , throughputPerWorker = 2.01k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:35:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.91645799 * 1913; EvalErrorPrediction = 0.51907998 * 1913; time = 0.8129s; samplesPerSecond = 2353.4
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     1.15 seconds since last report (0.00 seconds on comm.); 4824 samples processed by 2 workers (2568 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 4.18k samplesPerSecond , throughputPerWorker = 2.09k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:36:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.88301951 * 1966; EvalErrorPrediction = 0.51373347 * 1966; time = 0.9198s; samplesPerSecond = 2137.4
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     1.13 seconds since last report (0.00 seconds on comm.); 4895 samples processed by 2 workers (2580 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 4.34k samplesPerSecond , throughputPerWorker = 2.17k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:37:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.88378850 * 1922; EvalErrorPrediction = 0.50988554 * 1922; time = 0.8332s; samplesPerSecond = 2306.6
MPI Rank 0: 07/15/2016 07:40:38:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.94166080 * 1909; EvalErrorPrediction = 0.52592981 * 1909; time = 0.8263s; samplesPerSecond = 2310.3
MPI Rank 0: 07/15/2016 07:40:39:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.80758328 * 1920; EvalErrorPrediction = 0.49062500 * 1920; time = 0.8267s; samplesPerSecond = 2322.5
MPI Rank 0: 07/15/2016 07:40:39:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.93143873 * 1304; EvalErrorPrediction = 0.55368098 * 1304; time = 0.5509s; samplesPerSecond = 2367.1
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     2.22 seconds since last report (0.00 seconds on comm.); 5877 samples processed by 2 workers (5133 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 2.65k samplesPerSecond , throughputPerWorker = 1.32k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:39: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.89803064 * 20480; EvalErrorPrediction = 0.52104492 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-05; epochTime=5.71104s
MPI Rank 0: 07/15/2016 07:40:40: SGD: Saving checkpoint model '/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.3'
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:40: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:40: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/15/2016 07:40:40:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.87216271 * 1881; EvalErrorPrediction = 0.51727804 * 1881; time = 0.8189s; samplesPerSecond = 2296.9
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     1.11 seconds since last report (0.00 seconds on comm.); 4909 samples processed by 2 workers (2523 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 4.44k samplesPerSecond , throughputPerWorker = 2.22k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:41:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.88492067 * 1877; EvalErrorPrediction = 0.50932339 * 1877; time = 0.8258s; samplesPerSecond = 2273.0
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     1.11 seconds since last report (0.00 seconds on comm.); 4856 samples processed by 2 workers (2522 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 4.37k samplesPerSecond , throughputPerWorker = 2.18k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:42:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.89492070 * 1913; EvalErrorPrediction = 0.51803450 * 1913; time = 0.8440s; samplesPerSecond = 2266.5
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     1.12 seconds since last report (0.00 seconds on comm.); 4962 samples processed by 2 workers (2523 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 4.44k samplesPerSecond , throughputPerWorker = 2.22k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:43:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.91074243 * 1897; EvalErrorPrediction = 0.52345809 * 1897; time = 0.8399s; samplesPerSecond = 2258.6
MPI Rank 0: 07/15/2016 07:40:44:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.88126748 * 1852; EvalErrorPrediction = 0.51349892 * 1852; time = 0.8021s; samplesPerSecond = 2308.8
MPI Rank 0: 07/15/2016 07:40:44:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.88809371 * 1853; EvalErrorPrediction = 0.51592013 * 1853; time = 0.8004s; samplesPerSecond = 2315.2
MPI Rank 0: 07/15/2016 07:40:45:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.94654853 * 1258; EvalErrorPrediction = 0.53100159 * 1258; time = 0.5297s; samplesPerSecond = 2375.1
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     2.15 seconds since last report (0.00 seconds on comm.); 5753 samples processed by 2 workers (4963 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 2.68k samplesPerSecond , throughputPerWorker = 1.34k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:45: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.87731875 * 20480; EvalErrorPrediction = 0.51694336 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-05; epochTime=5.4797s
MPI Rank 0: 07/15/2016 07:40:45: SGD: Saving checkpoint model '/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.4'
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:45: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:45: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/15/2016 07:40:46:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.85900436 * 1871; EvalErrorPrediction = 0.51576697 * 1871; time = 0.8217s; samplesPerSecond = 2277.0
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     1.11 seconds since last report (0.00 seconds on comm.); 4883 samples processed by 2 workers (2507 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 4.40k samplesPerSecond , throughputPerWorker = 2.20k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:47:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.82687314 * 1897; EvalErrorPrediction = 0.50448076 * 1897; time = 0.8333s; samplesPerSecond = 2276.4
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     1.11 seconds since last report (0.00 seconds on comm.); 4599 samples processed by 2 workers (2509 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 4.15k samplesPerSecond , throughputPerWorker = 2.07k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:48:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.82892653 * 1838; EvalErrorPrediction = 0.49673558 * 1838; time = 0.8143s; samplesPerSecond = 2257.2
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     1.07 seconds since last report (0.00 seconds on comm.); 4768 samples processed by 2 workers (2396 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 4.46k samplesPerSecond , throughputPerWorker = 2.23k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:48:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.80327034 * 1806; EvalErrorPrediction = 0.49778516 * 1806; time = 0.8140s; samplesPerSecond = 2218.6
MPI Rank 0: 07/15/2016 07:40:49:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.81963559 * 1902; EvalErrorPrediction = 0.49474238 * 1902; time = 0.8330s; samplesPerSecond = 2283.4
MPI Rank 0: 07/15/2016 07:40:50:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.92825370 * 1852; EvalErrorPrediction = 0.52645788 * 1852; time = 0.8110s; samplesPerSecond = 2283.5
MPI Rank 0: 07/15/2016 07:40:51:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.83403338 * 1281; EvalErrorPrediction = 0.50741608 * 1281; time = 0.5522s; samplesPerSecond = 2319.6
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     2.21 seconds since last report (0.00 seconds on comm.); 6230 samples processed by 2 workers (5035 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 2.82k samplesPerSecond , throughputPerWorker = 1.41k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:51: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.85296143 * 20480; EvalErrorPrediction = 0.51455078 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-05; epochTime=5.49962s
MPI Rank 0: 07/15/2016 07:40:51: SGD: Saving checkpoint model '/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn'
MPI Rank 0: 07/15/2016 07:40:51: CNTKCommandTrainEnd: speechTrain
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:51: Action "train" complete.
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:51: __COMPLETED__
MPI Rank 0: ~MPIWrapper
MPI Rank 1: 07/15/2016 07:40:14: -------------------------------------------------------------------
MPI Rank 1: 07/15/2016 07:40:14: Build info: 
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:14: 		Built time: Jul 15 2016 07:37:16
MPI Rank 1: 07/15/2016 07:40:14: 		Last modified date: Tue Jul 12 04:28:35 2016
MPI Rank 1: 07/15/2016 07:40:14: 		Build type: release
MPI Rank 1: 07/15/2016 07:40:14: 		Build target: GPU
MPI Rank 1: 07/15/2016 07:40:14: 		With 1bit-SGD: yes
MPI Rank 1: 07/15/2016 07:40:14: 		Math lib: mkl
MPI Rank 1: 07/15/2016 07:40:14: 		CUDA_PATH: /usr/local/cuda-7.5
MPI Rank 1: 07/15/2016 07:40:14: 		CUB_PATH: /usr/local/cub-1.4.1
MPI Rank 1: 07/15/2016 07:40:14: 		CUDNN_PATH: /usr/local/cudnn-4.0
MPI Rank 1: 07/15/2016 07:40:14: 		Build Branch: HEAD
MPI Rank 1: 07/15/2016 07:40:14: 		Build SHA1: 500f0ccaa040821405404d7879c0e823003f1544
MPI Rank 1: 07/15/2016 07:40:14: 		Built by philly on 34e58dd0283f
MPI Rank 1: 07/15/2016 07:40:14: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
MPI Rank 1: 07/15/2016 07:40:14: -------------------------------------------------------------------
MPI Rank 1: 07/15/2016 07:40:15: -------------------------------------------------------------------
MPI Rank 1: 07/15/2016 07:40:15: GPU info:
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 1: 07/15/2016 07:40:15: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 1: 07/15/2016 07:40:15: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 1: 07/15/2016 07:40:15: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 1: 07/15/2016 07:40:15: -------------------------------------------------------------------
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: Running on localhost at 2016/07/15 07:40:15
MPI Rank 1: 07/15/2016 07:40:15: Command line: 
MPI Rank 1: /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..  OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu  DeviceId=-1  timestamping=true  numCPUThreads=12  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 07/15/2016 07:40:15: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = $DeviceId$
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = $DeviceId$
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=12
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 07/15/2016 07:40:15: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = -1
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=12
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: configparameters: cntk.cntk:command=speechTrain
MPI Rank 1: configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: configparameters: cntk.cntk:deviceId=-1
MPI Rank 1: configparameters: cntk.cntk:numCPUThreads=12
MPI Rank 1: configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 1: configparameters: cntk.cntk:precision=double
MPI Rank 1: configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu
MPI Rank 1: configparameters: cntk.cntk:speechTrain=[
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: 
MPI Rank 1: configparameters: cntk.cntk:stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: configparameters: cntk.cntk:timestamping=true
MPI Rank 1: 07/15/2016 07:40:15: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 07/15/2016 07:40:15: Commands: speechTrain
MPI Rank 1: 07/15/2016 07:40:15: Precision = "double"
MPI Rank 1: 07/15/2016 07:40:15: Using 12 CPU threads.
MPI Rank 1: 07/15/2016 07:40:15: CNTKModelPath: /tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn
MPI Rank 1: 07/15/2016 07:40:15: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 1: 07/15/2016 07:40:15: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: ##############################################################################
MPI Rank 1: 07/15/2016 07:40:15: #                                                                            #
MPI Rank 1: 07/15/2016 07:40:15: # Action "train"                                                             #
MPI Rank 1: 07/15/2016 07:40:15: #                                                                            #
MPI Rank 1: 07/15/2016 07:40:15: ##############################################################################
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: CNTKCommandTrainBegin: speechTrain
MPI Rank 1: SimpleNetworkBuilder Using CPU
MPI Rank 1: reading script file glob_0000.scp ... 946 entries
MPI Rank 1: total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
MPI Rank 1: htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
MPI Rank 1: ...............................................................................................feature set 0: 252508 frames in 946 out of 946 utterances
MPI Rank 1: label set 0: 129 classes
MPI Rank 1: minibatchutterancesource: 946 utterances grouped into 3 chunks, av. chunk size: 315.3 utterances, 84169.3 frames
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: Creating virgin network.
MPI Rank 1: 
MPI Rank 1: Post-processing network...
MPI Rank 1: 
MPI Rank 1: 7 roots:
MPI Rank 1: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 1: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 1: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 	MeanOfFeatures = Mean()
MPI Rank 1: 	PosteriorProb = Softmax()
MPI Rank 1: 	Prior = Mean()
MPI Rank 1: 	ScaledLogLikelihood = Minus()
MPI Rank 1: 
MPI Rank 1: Validating network. 25 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 1: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 1: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 1: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 1: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 1: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 1: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 1: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 1: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 1: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 1: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 1: 
MPI Rank 1: Validating network. 17 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating network, final pass.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: Post-processing network complete.
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: Created model with 25 nodes on CPU.
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: Training criterion node(s):
MPI Rank 1: 07/15/2016 07:40:15: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: Evaluation criterion node(s):
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Allocating matrices for forward and/or backward propagation.
MPI Rank 1: 
MPI Rank 1: Memory Sharing Structure:
MPI Rank 1: 
MPI Rank 1: (nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 1: 0x1fb1928: {[B2 Value[132 x 1]] }
MPI Rank 1: 0x20d3f38: {[W1 Value[512 x 512]] }
MPI Rank 1: 0x20d6568: {[InvStdOfFeatures Value[363]] }
MPI Rank 1: 0x20fb9c8: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 1: 0x20fbb88: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 1: 0x20fbd48: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 1: 0x20fbf08: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 1: 0x2109828: {[MeanOfFeatures Value[363]] }
MPI Rank 1: 0x27bcad8: {[W2 Value[132 x 512]] }
MPI Rank 1: 0x27d5dd8: {[W0 Value[512 x 363]] }
MPI Rank 1: 0x27d7248: {[labels Value[132 x *]] }
MPI Rank 1: 0x27d9ca8: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 1: 0x27d9e68: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 1: 0x27da028: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 1: 0x27da1e8: {[B2 Gradient[132 x 1]] }
MPI Rank 1: 0x27db8f8: {[B0 Value[512 x 1]] }
MPI Rank 1: 0x27de758: {[Prior Value[132]] }
MPI Rank 1: 0x27e1f68: {[features Value[363 x *]] }
MPI Rank 1: 0x27e6be8: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 1: 0x27e6d58: {[LogOfPrior Value[132]] }
MPI Rank 1: 0x27ea808: {[B1 Value[512 x 1]] }
MPI Rank 1: 0x27eab38: {[EvalErrorPrediction Value[1]] }
MPI Rank 1: 0x27eacc8: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 1: 0x27eae88: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 1: 0x2870fd8: {[W0*features Value[512 x *]] }
MPI Rank 1: 0x28711e8: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 1: 0x28713a8: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 1: 0x2871568: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: Precomputing --> 3 PreCompute nodes found.
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:15: 	MeanOfFeatures = Mean()
MPI Rank 1: 07/15/2016 07:40:15: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 07/15/2016 07:40:15: 	Prior = Mean()
MPI Rank 1: minibatchiterator: epoch 0: frames [0..252508] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:17: Precomputing --> Completed.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:17: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 1: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:17: Starting minibatch loop.
MPI Rank 1: 07/15/2016 07:40:17:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.63389229 * 192; EvalErrorPrediction = 0.93229167 * 192; time = 0.1016s; samplesPerSecond = 1890.0
MPI Rank 1: 07/15/2016 07:40:17:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.45833369 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 0.0929s; samplesPerSecond = 2067.6
MPI Rank 1: 07/15/2016 07:40:17:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.57954549 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0929s; samplesPerSecond = 2067.7
MPI Rank 1: 07/15/2016 07:40:17:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.38909786 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0971s; samplesPerSecond = 1977.0
MPI Rank 1: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.50958103 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0949s; samplesPerSecond = 2023.7
MPI Rank 1: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.62%]: CrossEntropyWithSoftmax = 4.36870130 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 0.0950s; samplesPerSecond = 2020.4
MPI Rank 1: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 3.91504203 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0946s; samplesPerSecond = 2030.0
MPI Rank 1: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.10208906 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0928s; samplesPerSecond = 2070.0
MPI Rank 1: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.93008100 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.0909s; samplesPerSecond = 2112.3
MPI Rank 1: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.91484418 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0946s; samplesPerSecond = 2030.0
MPI Rank 1: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.95323697 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0950s; samplesPerSecond = 2020.6
MPI Rank 1: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.86236511 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0952s; samplesPerSecond = 2016.9
MPI Rank 1: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.85885844 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0957s; samplesPerSecond = 2006.7
MPI Rank 1: 07/15/2016 07:40:18:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.12%]: CrossEntropyWithSoftmax = 3.61539867 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0963s; samplesPerSecond = 1994.8
MPI Rank 1: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.69034639 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0964s; samplesPerSecond = 1992.7
MPI Rank 1: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.66917314 * 192; EvalErrorPrediction = 0.87500000 * 192; time = 0.0982s; samplesPerSecond = 1954.7
MPI Rank 1: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.83017263 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 0.0967s; samplesPerSecond = 1985.7
MPI Rank 1: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.61640211 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.1022s; samplesPerSecond = 1877.9
MPI Rank 1: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.41494315 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0939s; samplesPerSecond = 2043.9
MPI Rank 1: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.75243966 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0950s; samplesPerSecond = 2021.1
MPI Rank 1: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.74288125 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0934s; samplesPerSecond = 2055.4
MPI Rank 1: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.62%]: CrossEntropyWithSoftmax = 3.67295164 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0915s; samplesPerSecond = 2098.9
MPI Rank 1: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.63572174 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.1005s; samplesPerSecond = 1910.2
MPI Rank 1: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.42127234 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0948s; samplesPerSecond = 2025.7
MPI Rank 1: 07/15/2016 07:40:19:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.46775883 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0930s; samplesPerSecond = 2065.3
MPI Rank 1: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.15370288 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0940s; samplesPerSecond = 2042.4
MPI Rank 1: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.46422707 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0979s; samplesPerSecond = 1960.4
MPI Rank 1: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.23871301 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0978s; samplesPerSecond = 1963.7
MPI Rank 1: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.49457613 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0980s; samplesPerSecond = 1958.5
MPI Rank 1: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.12%]: CrossEntropyWithSoftmax = 3.23872885 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0967s; samplesPerSecond = 1986.0
MPI Rank 1: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.61007515 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0949s; samplesPerSecond = 2024.1
MPI Rank 1: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.39403276 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0991s; samplesPerSecond = 1937.6
MPI Rank 1: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.34125945 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0962s; samplesPerSecond = 1995.2
MPI Rank 1: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.30686415 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0968s; samplesPerSecond = 1983.5
MPI Rank 1: 07/15/2016 07:40:20:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.28225825 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0957s; samplesPerSecond = 2007.3
MPI Rank 1: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.54632107 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0932s; samplesPerSecond = 2059.1
MPI Rank 1: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.15975609 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0930s; samplesPerSecond = 2065.2
MPI Rank 1: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.62%]: CrossEntropyWithSoftmax = 3.13618287 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0962s; samplesPerSecond = 1995.4
MPI Rank 1: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.15144651 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0992s; samplesPerSecond = 1936.3
MPI Rank 1: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.42811255 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0962s; samplesPerSecond = 1995.9
MPI Rank 1: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.26845711 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0993s; samplesPerSecond = 1932.6
MPI Rank 1: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 2.95512372 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0988s; samplesPerSecond = 1942.7
MPI Rank 1: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.18488153 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0986s; samplesPerSecond = 1946.9
MPI Rank 1: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.14196889 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0992s; samplesPerSecond = 1936.2
MPI Rank 1: 07/15/2016 07:40:21:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.15175823 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0972s; samplesPerSecond = 1975.5
MPI Rank 1: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.12%]: CrossEntropyWithSoftmax = 2.92713234 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0979s; samplesPerSecond = 1960.6
MPI Rank 1: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.98379506 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0998s; samplesPerSecond = 1924.7
MPI Rank 1: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.12743476 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0986s; samplesPerSecond = 1946.4
MPI Rank 1: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.08109336 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0941s; samplesPerSecond = 2041.1
MPI Rank 1: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 3.08951642 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0946s; samplesPerSecond = 2030.2
MPI Rank 1: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 3.09443965 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0966s; samplesPerSecond = 1986.9
MPI Rank 1: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 2.99016661 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0960s; samplesPerSecond = 2000.0
MPI Rank 1: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 2.90819932 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0935s; samplesPerSecond = 2053.9
MPI Rank 1: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.62%]: CrossEntropyWithSoftmax = 2.90955782 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0946s; samplesPerSecond = 2030.1
MPI Rank 1: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 2.99324373 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0968s; samplesPerSecond = 1983.4
MPI Rank 1: 07/15/2016 07:40:22:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.80131478 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0950s; samplesPerSecond = 2020.4
MPI Rank 1: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.89199520 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0967s; samplesPerSecond = 1986.2
MPI Rank 1: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.91873286 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0971s; samplesPerSecond = 1977.4
MPI Rank 1: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.89015238 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0954s; samplesPerSecond = 2011.6
MPI Rank 1: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.86356184 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0955s; samplesPerSecond = 2010.9
MPI Rank 1: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.79468471 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0969s; samplesPerSecond = 1981.5
MPI Rank 1: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.73822492 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0971s; samplesPerSecond = 1977.2
MPI Rank 1: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.89731040 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0951s; samplesPerSecond = 2018.4
MPI Rank 1: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.57846960 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0998s; samplesPerSecond = 1923.2
MPI Rank 1: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.56566131 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0976s; samplesPerSecond = 1967.1
MPI Rank 1: 07/15/2016 07:40:23:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.65335727 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0969s; samplesPerSecond = 1980.8
MPI Rank 1: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.76336810 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0955s; samplesPerSecond = 2010.5
MPI Rank 1: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.60944478 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0986s; samplesPerSecond = 1946.5
MPI Rank 1: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.57942439 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.1005s; samplesPerSecond = 1911.2
MPI Rank 1: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.62%]: CrossEntropyWithSoftmax = 2.76807082 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0992s; samplesPerSecond = 1935.1
MPI Rank 1: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.49105732 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0992s; samplesPerSecond = 1935.6
MPI Rank 1: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.61632083 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0941s; samplesPerSecond = 2040.0
MPI Rank 1: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.44924745 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0971s; samplesPerSecond = 1976.7
MPI Rank 1: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.65090260 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0971s; samplesPerSecond = 1977.3
MPI Rank 1: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.69321049 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0991s; samplesPerSecond = 1936.6
MPI Rank 1: 07/15/2016 07:40:24:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.71775648 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0949s; samplesPerSecond = 2023.2
MPI Rank 1: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.46117437 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0959s; samplesPerSecond = 2002.5
MPI Rank 1: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.12%]: CrossEntropyWithSoftmax = 2.37521804 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0948s; samplesPerSecond = 2024.4
MPI Rank 1: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.49931632 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0977s; samplesPerSecond = 1966.0
MPI Rank 1: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.49153873 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0955s; samplesPerSecond = 2011.2
MPI Rank 1: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.37059892 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0990s; samplesPerSecond = 1938.6
MPI Rank 1: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.56556702 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0988s; samplesPerSecond = 1944.1
MPI Rank 1: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.43440265 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0954s; samplesPerSecond = 2013.4
MPI Rank 1: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.38655954 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0946s; samplesPerSecond = 2029.3
MPI Rank 1: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.48894139 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0948s; samplesPerSecond = 2024.4
MPI Rank 1: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.62%]: CrossEntropyWithSoftmax = 2.43025617 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0977s; samplesPerSecond = 1965.5
MPI Rank 1: 07/15/2016 07:40:25:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.41569834 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0966s; samplesPerSecond = 1988.4
MPI Rank 1: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.33125343 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0976s; samplesPerSecond = 1968.2
MPI Rank 1: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.45492453 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.1005s; samplesPerSecond = 1911.2
MPI Rank 1: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.17205678 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0979s; samplesPerSecond = 1961.3
MPI Rank 1: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.36654958 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.1014s; samplesPerSecond = 1892.8
MPI Rank 1: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.27596218 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0992s; samplesPerSecond = 1935.5
MPI Rank 1: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.30734557 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0954s; samplesPerSecond = 2013.3
MPI Rank 1: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.12%]: CrossEntropyWithSoftmax = 2.41511979 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0975s; samplesPerSecond = 1968.7
MPI Rank 1: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.16486987 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0943s; samplesPerSecond = 2036.8
MPI Rank 1: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.20333430 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0994s; samplesPerSecond = 1931.8
MPI Rank 1: 07/15/2016 07:40:26:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.19411356 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0995s; samplesPerSecond = 1930.4
MPI Rank 1: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.21717829 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0992s; samplesPerSecond = 1935.0
MPI Rank 1: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.20918754 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.1017s; samplesPerSecond = 1887.7
MPI Rank 1: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.07852021 * 192; EvalErrorPrediction = 0.52083333 * 192; time = 0.0974s; samplesPerSecond = 1970.7
MPI Rank 1: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.33405780 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.1010s; samplesPerSecond = 1900.2
MPI Rank 1: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.62%]: CrossEntropyWithSoftmax = 2.34144784 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0996s; samplesPerSecond = 1928.6
MPI Rank 1: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.26125270 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0958s; samplesPerSecond = 2003.2
MPI Rank 1: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.35679913 * 192; EvalErrorPrediction = 0.58333333 * 192; time = 0.0999s; samplesPerSecond = 1921.0
MPI Rank 1: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.25039354 * 192; EvalErrorPrediction = 0.60416667 * 192; time = 0.0958s; samplesPerSecond = 2003.7
MPI Rank 1: 07/15/2016 07:40:27:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 1.94123714 * 192; EvalErrorPrediction = 0.51562500 * 192; time = 0.0976s; samplesPerSecond = 1967.6
MPI Rank 1: 07/15/2016 07:40:27: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.01776111 * 20480; EvalErrorPrediction = 0.72788086 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=10.3348s
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:27: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:27: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/15/2016 07:40:28:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.22597043 * 266; EvalErrorPrediction = 0.59774436 * 266; time = 0.1348s; samplesPerSecond = 1972.6
MPI Rank 1: 07/15/2016 07:40:28:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.39402551 * 279; EvalErrorPrediction = 0.64516129 * 279; time = 0.1363s; samplesPerSecond = 2047.4
MPI Rank 1: 07/15/2016 07:40:28:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.02133385 * 277; EvalErrorPrediction = 0.57039711 * 277; time = 0.1317s; samplesPerSecond = 2102.5
MPI Rank 1: 07/15/2016 07:40:28:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.15973087 * 270; EvalErrorPrediction = 0.57037037 * 270; time = 0.1294s; samplesPerSecond = 2086.0
MPI Rank 1: 07/15/2016 07:40:28:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.32990293 * 262; EvalErrorPrediction = 0.60687023 * 262; time = 0.1220s; samplesPerSecond = 2147.6
MPI Rank 1: 07/15/2016 07:40:28:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.03859540 * 267; EvalErrorPrediction = 0.54307116 * 267; time = 0.1279s; samplesPerSecond = 2087.4
MPI Rank 1: 07/15/2016 07:40:28:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 2.01815562 * 288; EvalErrorPrediction = 0.55208333 * 288; time = 0.1370s; samplesPerSecond = 2101.5
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     1.02 seconds since last report (0.00 seconds on comm.); 4224 samples processed by 2 workers (2080 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 4.12k samplesPerSecond , throughputPerWorker = 2.06k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:29:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 1.98983072 * 265; EvalErrorPrediction = 0.53584906 * 265; time = 0.1439s; samplesPerSecond = 1841.5
MPI Rank 1: 07/15/2016 07:40:29:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.19518137 * 267; EvalErrorPrediction = 0.58052434 * 267; time = 0.1349s; samplesPerSecond = 1979.4
MPI Rank 1: 07/15/2016 07:40:29:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.13944985 * 292; EvalErrorPrediction = 0.57191781 * 292; time = 0.1394s; samplesPerSecond = 2094.9
MPI Rank 1: 07/15/2016 07:40:29:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.04041507 * 283; EvalErrorPrediction = 0.56537102 * 283; time = 0.1331s; samplesPerSecond = 2125.9
MPI Rank 1: 07/15/2016 07:40:29:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.14042284 * 263; EvalErrorPrediction = 0.61216730 * 263; time = 0.1255s; samplesPerSecond = 2094.8
MPI Rank 1: 07/15/2016 07:40:29:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.11232886 * 268; EvalErrorPrediction = 0.57462687 * 268; time = 0.1273s; samplesPerSecond = 2106.0
MPI Rank 1: 07/15/2016 07:40:29:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 2.02529779 * 249; EvalErrorPrediction = 0.53815261 * 249; time = 0.1178s; samplesPerSecond = 2114.3
MPI Rank 1: 07/15/2016 07:40:29:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 2.05700129 * 253; EvalErrorPrediction = 0.54545455 * 253; time = 0.1186s; samplesPerSecond = 2133.8
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.02 seconds , average latency = 0.01 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     1.01 seconds since last report (0.00 seconds on comm.); 4220 samples processed by 2 workers (2055 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 4.16k samplesPerSecond , throughputPerWorker = 2.08k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:30:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 2.05123420 * 267; EvalErrorPrediction = 0.54681648 * 267; time = 0.1614s; samplesPerSecond = 1653.9
MPI Rank 1: 07/15/2016 07:40:30:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 2.01876569 * 255; EvalErrorPrediction = 0.52156863 * 255; time = 0.1225s; samplesPerSecond = 2082.3
MPI Rank 1: 07/15/2016 07:40:30:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 1.95691888 * 285; EvalErrorPrediction = 0.52631579 * 285; time = 0.1387s; samplesPerSecond = 2054.2
MPI Rank 1: 07/15/2016 07:40:30:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 2.00832042 * 288; EvalErrorPrediction = 0.57638889 * 288; time = 0.1371s; samplesPerSecond = 2100.4
MPI Rank 1: 07/15/2016 07:40:30:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.94698163 * 272; EvalErrorPrediction = 0.51470588 * 272; time = 0.1276s; samplesPerSecond = 2131.5
MPI Rank 1: 07/15/2016 07:40:30:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 2.02812855 * 300; EvalErrorPrediction = 0.53666667 * 300; time = 0.1409s; samplesPerSecond = 2129.2
MPI Rank 1: 07/15/2016 07:40:30:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 2.03116788 * 286; EvalErrorPrediction = 0.53146853 * 286; time = 0.1386s; samplesPerSecond = 2063.4
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.02 seconds , average latency = 0.01 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     1.04 seconds since last report (0.00 seconds on comm.); 4250 samples processed by 2 workers (2122 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 4.10k samplesPerSecond , throughputPerWorker = 2.05k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:31:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 2.10383314 * 255; EvalErrorPrediction = 0.57254902 * 255; time = 0.1403s; samplesPerSecond = 1818.0
MPI Rank 1: 07/15/2016 07:40:31:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 2.00185557 * 264; EvalErrorPrediction = 0.53409091 * 264; time = 0.1297s; samplesPerSecond = 2034.7
MPI Rank 1: 07/15/2016 07:40:31:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.84952788 * 289; EvalErrorPrediction = 0.56401384 * 289; time = 0.1360s; samplesPerSecond = 2124.7
MPI Rank 1: 07/15/2016 07:40:31:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 2.07425894 * 291; EvalErrorPrediction = 0.56701031 * 291; time = 0.1375s; samplesPerSecond = 2116.7
MPI Rank 1: 07/15/2016 07:40:31:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.87322204 * 188; EvalErrorPrediction = 0.51063830 * 188; time = 0.0880s; samplesPerSecond = 2136.5
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.44-seconds latency this time; accumulated time on sync point = 0.47 seconds , average latency = 0.12 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     3.11 seconds since last report (2.16 seconds on comm.); 7786 samples processed by 2 workers (1032 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 2.50k samplesPerSecond , throughputPerWorker = 1.25k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:34: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.01593617 * 20480; EvalErrorPrediction = 0.54677734 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=6.18791s
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:34: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:34: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/15/2016 07:40:34:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 2.00080857 * 1158; EvalErrorPrediction = 0.56303972 * 1158; time = 0.5141s; samplesPerSecond = 2252.4
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.18-seconds latency this time; accumulated time on sync point = 0.18 seconds , average latency = 0.18 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     1.21 seconds since last report (0.00 seconds on comm.); 4884 samples processed by 2 workers (2317 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 4.03k samplesPerSecond , throughputPerWorker = 2.01k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:35:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.87149853 * 1159; EvalErrorPrediction = 0.52372735 * 1159; time = 0.6947s; samplesPerSecond = 1668.4
MPI Rank 1: 07/15/2016 07:40:35:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.92220500 * 1106; EvalErrorPrediction = 0.53797468 * 1106; time = 0.4870s; samplesPerSecond = 2271.3
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.18-seconds latency this time; accumulated time on sync point = 0.36 seconds , average latency = 0.18 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     1.15 seconds since last report (0.00 seconds on comm.); 4824 samples processed by 2 workers (2256 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 4.19k samplesPerSecond , throughputPerWorker = 2.09k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:36:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.93709807 * 1150; EvalErrorPrediction = 0.53739130 * 1150; time = 0.6654s; samplesPerSecond = 1728.4
MPI Rank 1: 07/15/2016 07:40:37:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.84693440 * 1163; EvalErrorPrediction = 0.50730868 * 1163; time = 0.5081s; samplesPerSecond = 2288.8
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.10-seconds latency this time; accumulated time on sync point = 0.46 seconds , average latency = 0.15 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     1.13 seconds since last report (0.00 seconds on comm.); 4895 samples processed by 2 workers (2315 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 4.34k samplesPerSecond , throughputPerWorker = 2.17k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:37:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.86843823 * 1152; EvalErrorPrediction = 0.50954861 * 1152; time = 0.6189s; samplesPerSecond = 1861.3
MPI Rank 1: 07/15/2016 07:40:38:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.86468044 * 744; EvalErrorPrediction = 0.49596774 * 744; time = 0.3168s; samplesPerSecond = 2348.5
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.77-seconds latency this time; accumulated time on sync point = 1.23 seconds , average latency = 0.31 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     2.22 seconds since last report (1.12 seconds on comm.); 5877 samples processed by 2 workers (744 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 2.65k samplesPerSecond , throughputPerWorker = 1.32k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:39: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.89803064 * 20480; EvalErrorPrediction = 0.52104492 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-05; epochTime=5.71104s
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:40: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:40: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/15/2016 07:40:40:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.89039607 * 1191; EvalErrorPrediction = 0.53148615 * 1191; time = 0.5171s; samplesPerSecond = 2303.2
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.04 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     1.11 seconds since last report (0.00 seconds on comm.); 4909 samples processed by 2 workers (2386 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 4.44k samplesPerSecond , throughputPerWorker = 2.22k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:41:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.85449368 * 1195; EvalErrorPrediction = 0.52133891 * 1195; time = 0.5846s; samplesPerSecond = 2044.1
MPI Rank 1: 07/15/2016 07:40:41:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.78322861 * 1159; EvalErrorPrediction = 0.50733391 * 1159; time = 0.4770s; samplesPerSecond = 2429.6
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.12-seconds latency this time; accumulated time on sync point = 0.16 seconds , average latency = 0.08 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     1.11 seconds since last report (0.00 seconds on comm.); 4856 samples processed by 2 workers (2334 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 4.37k samplesPerSecond , throughputPerWorker = 2.18k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:42:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.82736623 * 1175; EvalErrorPrediction = 0.51659574 * 1175; time = 0.6341s; samplesPerSecond = 1853.0
MPI Rank 1: 07/15/2016 07:40:42:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.90163914 * 1220; EvalErrorPrediction = 0.49836066 * 1220; time = 0.5197s; samplesPerSecond = 2347.3
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.08-seconds latency this time; accumulated time on sync point = 0.24 seconds , average latency = 0.08 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     1.12 seconds since last report (0.00 seconds on comm.); 4962 samples processed by 2 workers (2439 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 4.44k samplesPerSecond , throughputPerWorker = 2.22k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:43:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.82437756 * 1219; EvalErrorPrediction = 0.50779327 * 1219; time = 0.5965s; samplesPerSecond = 2043.7
MPI Rank 1: 07/15/2016 07:40:43:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.87515704 * 790; EvalErrorPrediction = 0.53291139 * 790; time = 0.3245s; samplesPerSecond = 2434.7
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.74-seconds latency this time; accumulated time on sync point = 0.99 seconds , average latency = 0.25 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     2.15 seconds since last report (1.07 seconds on comm.); 5753 samples processed by 2 workers (790 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 2.68k samplesPerSecond , throughputPerWorker = 1.34k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:45: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.87731875 * 20480; EvalErrorPrediction = 0.51694336 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-05; epochTime=5.47971s
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:45: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:45: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/15/2016 07:40:46:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.94543094 * 1201; EvalErrorPrediction = 0.54454621 * 1201; time = 0.5148s; samplesPerSecond = 2333.0
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.07-seconds latency this time; accumulated time on sync point = 0.07 seconds , average latency = 0.07 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     1.11 seconds since last report (0.00 seconds on comm.); 4883 samples processed by 2 workers (2376 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 4.40k samplesPerSecond , throughputPerWorker = 2.20k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:46:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.88305673 * 1175; EvalErrorPrediction = 0.54382979 * 1175; time = 0.5916s; samplesPerSecond = 1986.0
MPI Rank 1: 07/15/2016 07:40:47:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.85049018 * 1234; EvalErrorPrediction = 0.51701783 * 1234; time = 0.5345s; samplesPerSecond = 2308.5
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.20-seconds latency this time; accumulated time on sync point = 0.26 seconds , average latency = 0.13 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     1.11 seconds since last report (0.00 seconds on comm.); 4599 samples processed by 2 workers (2090 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 4.15k samplesPerSecond , throughputPerWorker = 2.07k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:48:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.85864633 * 1266; EvalErrorPrediction = 0.53396524 * 1266; time = 0.7520s; samplesPerSecond = 1683.6
MPI Rank 1: 07/15/2016 07:40:48:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.87072905 * 1170; EvalErrorPrediction = 0.50256410 * 1170; time = 0.5156s; samplesPerSecond = 2269.4
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.30 seconds , average latency = 0.10 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     1.07 seconds since last report (0.00 seconds on comm.); 4768 samples processed by 2 workers (2372 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 4.46k samplesPerSecond , throughputPerWorker = 2.23k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:49:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.78845224 * 1220; EvalErrorPrediction = 0.51311475 * 1220; time = 0.5581s; samplesPerSecond = 2185.8
MPI Rank 1: 07/15/2016 07:40:49:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.88899845 * 767; EvalErrorPrediction = 0.54367666 * 767; time = 0.3291s; samplesPerSecond = 2330.9
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.60-seconds latency this time; accumulated time on sync point = 0.90 seconds , average latency = 0.23 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     2.21 seconds since last report (1.08 seconds on comm.); 6230 samples processed by 2 workers (1195 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 2.82k samplesPerSecond , throughputPerWorker = 1.41k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:51: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.85296143 * 20480; EvalErrorPrediction = 0.51455078 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-05; epochTime=5.49962s
MPI Rank 1: 07/15/2016 07:40:51: CNTKCommandTrainEnd: speechTrain
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:51: Action "train" complete.
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:51: __COMPLETED__
MPI Rank 1: ~MPIWrapper