CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU E5-2630 v2 @ 2.60GHz
    Hardware threads: 24
    Total Memory: 264172964 kB
-------------------------------------------------------------------
=== Running mpiexec -n 2 /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/.. OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu DeviceId=0 timestamping=true numCPUThreads=12 precision=double speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]] stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/stderr
-------------------------------------------------------------------
Build info: 

		Built time: Jul 15 2016 07:37:16
		Last modified date: Tue Jul 12 04:28:35 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 500f0ccaa040821405404d7879c0e823003f1544
		Built by philly on 34e58dd0283f
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
-------------------------------------------------------------------
Build info: 

		Built time: Jul 15 2016 07:37:16
		Last modified date: Tue Jul 12 04:28:35 2016
		Build type: release
		Build target: GPU
		With 1bit-SGD: yes
		Math lib: mkl
		CUDA_PATH: /usr/local/cuda-7.5
		CUB_PATH: /usr/local/cub-1.4.1
		CUDNN_PATH: /usr/local/cudnn-4.0
		Build Branch: HEAD
		Build SHA1: 500f0ccaa040821405404d7879c0e823003f1544
		Built by philly on 34e58dd0283f
		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
-------------------------------------------------------------------
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
Changed current directory to /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPIWrapper: initializing MPI
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (0) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (1) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 1 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: all 2 nodes responded
mpihelper: we are cog 0 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: all 2 nodes responded
07/15/2016 07:40:53: Redirecting stderr to file /tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/stderr_speechTrain.logrank0
07/15/2016 07:40:53: Redirecting stderr to file /tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/stderr_speechTrain.logrank1
MPI Rank 0: 07/15/2016 07:40:53: -------------------------------------------------------------------
MPI Rank 0: 07/15/2016 07:40:53: Build info: 
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:53: 		Built time: Jul 15 2016 07:37:16
MPI Rank 0: 07/15/2016 07:40:53: 		Last modified date: Tue Jul 12 04:28:35 2016
MPI Rank 0: 07/15/2016 07:40:53: 		Build type: release
MPI Rank 0: 07/15/2016 07:40:53: 		Build target: GPU
MPI Rank 0: 07/15/2016 07:40:53: 		With 1bit-SGD: yes
MPI Rank 0: 07/15/2016 07:40:53: 		Math lib: mkl
MPI Rank 0: 07/15/2016 07:40:53: 		CUDA_PATH: /usr/local/cuda-7.5
MPI Rank 0: 07/15/2016 07:40:53: 		CUB_PATH: /usr/local/cub-1.4.1
MPI Rank 0: 07/15/2016 07:40:53: 		CUDNN_PATH: /usr/local/cudnn-4.0
MPI Rank 0: 07/15/2016 07:40:53: 		Build Branch: HEAD
MPI Rank 0: 07/15/2016 07:40:53: 		Build SHA1: 500f0ccaa040821405404d7879c0e823003f1544
MPI Rank 0: 07/15/2016 07:40:53: 		Built by philly on 34e58dd0283f
MPI Rank 0: 07/15/2016 07:40:53: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
MPI Rank 0: 07/15/2016 07:40:53: -------------------------------------------------------------------
MPI Rank 0: 07/15/2016 07:40:54: -------------------------------------------------------------------
MPI Rank 0: 07/15/2016 07:40:54: GPU info:
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 0: 07/15/2016 07:40:54: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 0: 07/15/2016 07:40:54: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 0: 07/15/2016 07:40:54: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 0: 07/15/2016 07:40:54: -------------------------------------------------------------------
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: Running on localhost at 2016/07/15 07:40:54
MPI Rank 0: 07/15/2016 07:40:54: Command line: 
MPI Rank 0: /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..  OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu  DeviceId=0  timestamping=true  numCPUThreads=12  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 07/15/2016 07:40:54: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = $DeviceId$
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = $DeviceId$
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: DeviceId=0
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=12
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 07/15/2016 07:40:54: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = 0
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = 0
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: DeviceId=0
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=12
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: configparameters: cntk.cntk:command=speechTrain
MPI Rank 0: configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 0: configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 0: configparameters: cntk.cntk:deviceId=0
MPI Rank 0: configparameters: cntk.cntk:numCPUThreads=12
MPI Rank 0: configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 0: configparameters: cntk.cntk:precision=double
MPI Rank 0: configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu
MPI Rank 0: configparameters: cntk.cntk:speechTrain=[
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = 0
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: 
MPI Rank 0: configparameters: cntk.cntk:stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 0: configparameters: cntk.cntk:timestamping=true
MPI Rank 0: 07/15/2016 07:40:54: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 07/15/2016 07:40:54: Commands: speechTrain
MPI Rank 0: 07/15/2016 07:40:54: Precision = "double"
MPI Rank 0: 07/15/2016 07:40:54: Using 12 CPU threads.
MPI Rank 0: 07/15/2016 07:40:54: CNTKModelPath: /tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn
MPI Rank 0: 07/15/2016 07:40:54: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 0: 07/15/2016 07:40:54: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: ##############################################################################
MPI Rank 0: 07/15/2016 07:40:54: #                                                                            #
MPI Rank 0: 07/15/2016 07:40:54: # Action "train"                                                             #
MPI Rank 0: 07/15/2016 07:40:54: #                                                                            #
MPI Rank 0: 07/15/2016 07:40:54: ##############################################################################
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: CNTKCommandTrainBegin: speechTrain
MPI Rank 0: SimpleNetworkBuilder Using GPU 0
MPI Rank 0: reading script file glob_0000.scp ... 946 entries
MPI Rank 0: total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
MPI Rank 0: htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
MPI Rank 0: ...............................................................................................feature set 0: 252508 frames in 946 out of 946 utterances
MPI Rank 0: label set 0: 129 classes
MPI Rank 0: minibatchutterancesource: 946 utterances grouped into 3 chunks, av. chunk size: 315.3 utterances, 84169.3 frames
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: Creating virgin network.
MPI Rank 0: SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==8
MPI Rank 0: 
MPI Rank 0: Post-processing network...
MPI Rank 0: 
MPI Rank 0: 7 roots:
MPI Rank 0: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 0: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 0: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 	MeanOfFeatures = Mean()
MPI Rank 0: 	PosteriorProb = Softmax()
MPI Rank 0: 	Prior = Mean()
MPI Rank 0: 	ScaledLogLikelihood = Minus()
MPI Rank 0: 
MPI Rank 0: Validating network. 25 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 0: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 0: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 0: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 0: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 0: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 0: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 0: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 0: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 0: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 0: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 0: 
MPI Rank 0: Validating network. 17 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating network, final pass.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: Post-processing network complete.
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: Created model with 25 nodes on GPU 0.
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: Training criterion node(s):
MPI Rank 0: 07/15/2016 07:40:54: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: Evaluation criterion node(s):
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Allocating matrices for forward and/or backward propagation.
MPI Rank 0: 
MPI Rank 0: Memory Sharing Structure:
MPI Rank 0: 
MPI Rank 0: (nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 0: 0x7faa6284c028: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 0: 0x7faa6284c728: {[W0*features Value[512 x *]] }
MPI Rank 0: 0x7faa6284cc58: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 0: 0x7faa6284cdb8: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 0: 0x7faa6284cf78: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 0: 0x7faa6284d138: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 0: 0x7faa6284d2f8: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 0: 0x7faa6284d4b8: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 0: 0x7faa6284d678: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 0: 0x7faa6284e1d8: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 0: 0x7faa6284e398: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 0: 0x7faa6284e558: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 0: 0x7faa6284e718: {[B2 Gradient[132 x 1]] }
MPI Rank 0: 0x7faa62e5d958: {[B2 Value[132 x 1]] }
MPI Rank 0: 0x7faa62e5e788: {[labels Value[132 x *]] }
MPI Rank 0: 0x7faa62e5f9e8: {[Prior Value[132]] }
MPI Rank 0: 0x7faa62e65288: {[EvalErrorPrediction Value[1]] }
MPI Rank 0: 0x7faa62e65588: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 0: 0x7faa62e65748: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 0: 0x7faa62e65d48: {[LogOfPrior Value[132]] }
MPI Rank 0: 0x7faa62e67848: {[B0 Value[512 x 1]] }
MPI Rank 0: 0x7faa62e69a48: {[W1 Value[512 x 512]] }
MPI Rank 0: 0x7faa62e6a818: {[B1 Value[512 x 1]] }
MPI Rank 0: 0x7faa62e6b9b8: {[W2 Value[132 x 512]] }
MPI Rank 0: 0x7faa63062c58: {[W0 Value[512 x 363]] }
MPI Rank 0: 0x7faa6326ce18: {[MeanOfFeatures Value[363]] }
MPI Rank 0: 0x7faa6326d288: {[InvStdOfFeatures Value[363]] }
MPI Rank 0: 0x7faa7991e1f8: {[features Value[363 x *]] }
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: Precomputing --> 3 PreCompute nodes found.
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:54: 	MeanOfFeatures = Mean()
MPI Rank 0: 07/15/2016 07:40:54: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 07/15/2016 07:40:54: 	Prior = Mean()
MPI Rank 0: minibatchiterator: epoch 0: frames [0..252508] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:56: Precomputing --> Completed.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:57: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 0: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:57: Starting minibatch loop.
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.65975105 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 0.0207s; samplesPerSecond = 9282.1
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.55327870 * 192; EvalErrorPrediction = 0.95312500 * 192; time = 0.0196s; samplesPerSecond = 9776.5
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.57535762 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0197s; samplesPerSecond = 9761.1
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.38188648 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0196s; samplesPerSecond = 9772.5
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.45906506 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0196s; samplesPerSecond = 9777.5
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.62%]: CrossEntropyWithSoftmax = 4.36042571 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0196s; samplesPerSecond = 9773.0
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 3.92816653 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0196s; samplesPerSecond = 9776.5
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.07128689 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0196s; samplesPerSecond = 9778.0
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.92540406 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0196s; samplesPerSecond = 9778.0
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.91665259 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0197s; samplesPerSecond = 9739.3
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.93187129 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0196s; samplesPerSecond = 9781.4
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.86063942 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0197s; samplesPerSecond = 9769.5
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.85775127 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0196s; samplesPerSecond = 9771.5
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.12%]: CrossEntropyWithSoftmax = 3.60554340 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0196s; samplesPerSecond = 9782.9
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.68187602 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.0196s; samplesPerSecond = 9774.5
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.65624550 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0197s; samplesPerSecond = 9767.0
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.82670705 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0196s; samplesPerSecond = 9786.9
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.60134199 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0196s; samplesPerSecond = 9772.0
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.40815866 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0196s; samplesPerSecond = 9774.5
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.74057042 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0196s; samplesPerSecond = 9774.0
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.73982483 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0197s; samplesPerSecond = 9730.9
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.62%]: CrossEntropyWithSoftmax = 3.66129398 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0197s; samplesPerSecond = 9758.6
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.63107164 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0196s; samplesPerSecond = 9775.0
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.40512706 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0197s; samplesPerSecond = 9769.5
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.46680642 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0196s; samplesPerSecond = 9786.4
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.14408141 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0197s; samplesPerSecond = 9723.5
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.45844320 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0196s; samplesPerSecond = 9782.4
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.23660464 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0196s; samplesPerSecond = 9781.9
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.48527247 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.0196s; samplesPerSecond = 9778.5
MPI Rank 0: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.12%]: CrossEntropyWithSoftmax = 3.22198011 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0196s; samplesPerSecond = 9779.5
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.59115276 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0197s; samplesPerSecond = 9763.5
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.36392434 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0207s; samplesPerSecond = 9274.0
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.31162016 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0182s; samplesPerSecond = 10551.2
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.28101436 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0190s; samplesPerSecond = 10096.2
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.24629888 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.0190s; samplesPerSecond = 10094.6
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.51034636 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0190s; samplesPerSecond = 10089.9
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.12512975 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0190s; samplesPerSecond = 10112.2
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.62%]: CrossEntropyWithSoftmax = 3.09608686 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0190s; samplesPerSecond = 10095.7
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.11321109 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0190s; samplesPerSecond = 10106.9
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.38243295 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.0190s; samplesPerSecond = 10103.7
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.24719907 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0190s; samplesPerSecond = 10096.8
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 2.91641342 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0190s; samplesPerSecond = 10099.9
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.15592288 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0190s; samplesPerSecond = 10098.9
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.11570520 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0226s; samplesPerSecond = 8483.2
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.11725644 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0191s; samplesPerSecond = 10039.7
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.12%]: CrossEntropyWithSoftmax = 2.90128826 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0191s; samplesPerSecond = 10028.7
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.93656846 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0191s; samplesPerSecond = 10041.8
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.09806645 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0191s; samplesPerSecond = 10037.1
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.03497307 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0191s; samplesPerSecond = 10032.9
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 3.05741199 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0191s; samplesPerSecond = 10031.9
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 3.06180258 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0191s; samplesPerSecond = 10034.5
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 2.96061231 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.0191s; samplesPerSecond = 10032.9
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 2.88269046 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0191s; samplesPerSecond = 10047.6
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.62%]: CrossEntropyWithSoftmax = 2.87544964 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0192s; samplesPerSecond = 10012.5
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 2.97421438 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0191s; samplesPerSecond = 10031.9
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.77480559 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0192s; samplesPerSecond = 10003.6
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.87698515 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0191s; samplesPerSecond = 10035.5
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.89483909 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0191s; samplesPerSecond = 10037.1
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.87603450 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0191s; samplesPerSecond = 10034.0
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.83147893 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0191s; samplesPerSecond = 10032.9
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.77117969 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0191s; samplesPerSecond = 10032.4
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.72145865 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0191s; samplesPerSecond = 10034.0
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.89654258 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0191s; samplesPerSecond = 10039.7
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.57594435 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0192s; samplesPerSecond = 10023.0
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.56638259 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0191s; samplesPerSecond = 10036.6
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.62584797 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0192s; samplesPerSecond = 10016.7
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.76147740 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0192s; samplesPerSecond = 10014.1
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.58581382 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0191s; samplesPerSecond = 10027.2
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.58264171 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0191s; samplesPerSecond = 10042.9
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.62%]: CrossEntropyWithSoftmax = 2.77646032 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0191s; samplesPerSecond = 10044.5
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.49416357 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0191s; samplesPerSecond = 10027.2
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.63014880 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0192s; samplesPerSecond = 10023.5
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.44158480 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0191s; samplesPerSecond = 10033.4
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.65698802 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0191s; samplesPerSecond = 10030.8
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.68573611 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0191s; samplesPerSecond = 10042.9
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.71202514 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0191s; samplesPerSecond = 10041.3
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.47320534 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0192s; samplesPerSecond = 10026.1
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.12%]: CrossEntropyWithSoftmax = 2.36032720 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0192s; samplesPerSecond = 10023.0
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.49364747 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0192s; samplesPerSecond = 10021.9
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.48111825 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0192s; samplesPerSecond = 10023.0
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.37408271 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0191s; samplesPerSecond = 10031.9
MPI Rank 0: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.55668018 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0191s; samplesPerSecond = 10034.0
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.43476395 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0191s; samplesPerSecond = 10030.8
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.40167293 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0191s; samplesPerSecond = 10041.8
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.49632054 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0191s; samplesPerSecond = 10039.2
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.62%]: CrossEntropyWithSoftmax = 2.42386276 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0191s; samplesPerSecond = 10036.1
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.39243346 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0191s; samplesPerSecond = 10059.7
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.33506597 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0191s; samplesPerSecond = 10042.9
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.46269780 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0191s; samplesPerSecond = 10029.3
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.16525044 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0191s; samplesPerSecond = 10028.7
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.38205640 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0191s; samplesPerSecond = 10029.8
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.26268150 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0191s; samplesPerSecond = 10039.2
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.29520393 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0191s; samplesPerSecond = 10029.8
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.12%]: CrossEntropyWithSoftmax = 2.40100177 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0191s; samplesPerSecond = 10034.0
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.17147342 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0191s; samplesPerSecond = 10028.2
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.21319452 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0191s; samplesPerSecond = 10041.8
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.18936500 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0191s; samplesPerSecond = 10038.2
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.20091024 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0191s; samplesPerSecond = 10033.4
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.19512173 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0191s; samplesPerSecond = 10029.3
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.06818658 * 192; EvalErrorPrediction = 0.51562500 * 192; time = 0.0191s; samplesPerSecond = 10045.0
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.33278311 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0191s; samplesPerSecond = 10036.1
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.62%]: CrossEntropyWithSoftmax = 2.32658849 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0191s; samplesPerSecond = 10029.3
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.24668364 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0191s; samplesPerSecond = 10029.8
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.36022537 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0191s; samplesPerSecond = 10036.6
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.22775172 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0191s; samplesPerSecond = 10039.2
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 1.95309060 * 192; EvalErrorPrediction = 0.53645833 * 192; time = 0.0191s; samplesPerSecond = 10035.0
MPI Rank 0: 07/15/2016 07:40:59: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.00582250 * 20480; EvalErrorPrediction = 0.72578125 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=2.06566s
MPI Rank 0: 07/15/2016 07:40:59: SGD: Saving checkpoint model '/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.1'
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:59: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:40:59: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.11793339 * 502; EvalErrorPrediction = 0.56972112 * 502; time = 0.0240s; samplesPerSecond = 20914.9
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.03081114 * 489; EvalErrorPrediction = 0.53987730 * 489; time = 0.0255s; samplesPerSecond = 19156.2
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.15192407 * 491; EvalErrorPrediction = 0.57230143 * 491; time = 0.0220s; samplesPerSecond = 22270.6
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.04981284 * 498; EvalErrorPrediction = 0.54618474 * 498; time = 0.0357s; samplesPerSecond = 13941.4
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.04 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.17 seconds since last report (0.01 seconds on comm.); 4224 samples processed by 2 workers (2144 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 24.65k samplesPerSecond , throughputPerWorker = 12.33k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.10391109 * 506; EvalErrorPrediction = 0.55533597 * 506; time = 0.0898s; samplesPerSecond = 5634.4
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.05178098 * 501; EvalErrorPrediction = 0.55089820 * 501; time = 0.0218s; samplesPerSecond = 22977.4
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.95789761 * 480; EvalErrorPrediction = 0.51458333 * 480; time = 0.0263s; samplesPerSecond = 18248.9
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.06375188 * 503; EvalErrorPrediction = 0.56461233 * 503; time = 0.0283s; samplesPerSecond = 17774.5
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.07 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.17 seconds since last report (0.00 seconds on comm.); 4220 samples processed by 2 workers (2165 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 25.49k samplesPerSecond , throughputPerWorker = 12.75k samplesPerSecond
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.01805674 * 501; EvalErrorPrediction = 0.53493014 * 501; time = 0.0715s; samplesPerSecond = 7006.3
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 1.99321447 * 476; EvalErrorPrediction = 0.53361345 * 476; time = 0.0261s; samplesPerSecond = 18236.8
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 1.85543368 * 485; EvalErrorPrediction = 0.47628866 * 485; time = 0.0194s; samplesPerSecond = 25028.4
MPI Rank 0: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.07171549 * 505; EvalErrorPrediction = 0.58613861 * 505; time = 0.0365s; samplesPerSecond = 13839.4
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.10 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.16 seconds since last report (0.00 seconds on comm.); 4250 samples processed by 2 workers (2128 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 25.77k samplesPerSecond , throughputPerWorker = 12.89k samplesPerSecond
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 1.93443065 * 500; EvalErrorPrediction = 0.51200000 * 500; time = 0.0713s; samplesPerSecond = 7010.9
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.91656735 * 519; EvalErrorPrediction = 0.51252408 * 519; time = 0.0413s; samplesPerSecond = 12568.4
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.95147850 * 515; EvalErrorPrediction = 0.51456311 * 515; time = 0.0282s; samplesPerSecond = 18284.5
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.86077671 * 501; EvalErrorPrediction = 0.51097804 * 501; time = 0.0159s; samplesPerSecond = 31432.3
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 1.94154565 * 513; EvalErrorPrediction = 0.51267057 * 513; time = 0.0155s; samplesPerSecond = 33148.1
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 2.07050721 * 483; EvalErrorPrediction = 0.56728778 * 483; time = 0.0152s; samplesPerSecond = 31830.8
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 2.00042470 * 480; EvalErrorPrediction = 0.54375000 * 480; time = 0.0151s; samplesPerSecond = 31727.1
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.94461274 * 496; EvalErrorPrediction = 0.53629032 * 496; time = 0.0153s; samplesPerSecond = 32397.1
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.82466302 * 468; EvalErrorPrediction = 0.52136752 * 468; time = 0.0150s; samplesPerSecond = 31154.3
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.85524403 * 482; EvalErrorPrediction = 0.49792531 * 482; time = 0.0151s; samplesPerSecond = 31817.3
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.97381208 * 513; EvalErrorPrediction = 0.55945419 * 513; time = 0.0155s; samplesPerSecond = 33064.8
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.92147790 * 504; EvalErrorPrediction = 0.52777778 * 504; time = 0.0154s; samplesPerSecond = 32808.2
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.87200618 * 479; EvalErrorPrediction = 0.53027140 * 479; time = 0.0151s; samplesPerSecond = 31684.1
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.82076290 * 477; EvalErrorPrediction = 0.46960168 * 477; time = 0.0151s; samplesPerSecond = 31637.6
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.84150772 * 324; EvalErrorPrediction = 0.52469136 * 324; time = 0.0101s; samplesPerSecond = 32003.2
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.10 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.27 seconds since last report (0.00 seconds on comm.); 7786 samples processed by 2 workers (6754 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 29.21k samplesPerSecond , throughputPerWorker = 14.60k samplesPerSecond
MPI Rank 0: 07/15/2016 07:41:00: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.00414082 * 20480; EvalErrorPrediction = 0.54272461 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=0.768479s
MPI Rank 0: 07/15/2016 07:41:00: SGD: Saving checkpoint model '/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.2'
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:41:00: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:41:00: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.90132851 * 1914; EvalErrorPrediction = 0.52403344 * 1914; time = 0.0897s; samplesPerSecond = 21338.0
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4884 samples processed by 2 workers (2567 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 39.30k samplesPerSecond , throughputPerWorker = 19.65k samplesPerSecond
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.90556334 * 1913; EvalErrorPrediction = 0.52117094 * 1913; time = 0.0773s; samplesPerSecond = 24744.5
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.13 seconds since last report (0.00 seconds on comm.); 4824 samples processed by 2 workers (2568 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 38.52k samplesPerSecond , throughputPerWorker = 19.26k samplesPerSecond
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.87200006 * 1966; EvalErrorPrediction = 0.50966429 * 1966; time = 0.1054s; samplesPerSecond = 18654.2
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.03 seconds , average latency = 0.01 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.13 seconds since last report (0.01 seconds on comm.); 4895 samples processed by 2 workers (2580 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 38.69k samplesPerSecond , throughputPerWorker = 19.35k samplesPerSecond
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.86941057 * 1922; EvalErrorPrediction = 0.51144641 * 1922; time = 0.0996s; samplesPerSecond = 19303.6
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.93073676 * 1909; EvalErrorPrediction = 0.53012048 * 1909; time = 0.0586s; samplesPerSecond = 32572.9
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.80252432 * 1920; EvalErrorPrediction = 0.49375000 * 1920; time = 0.0440s; samplesPerSecond = 43658.2
MPI Rank 0: 07/15/2016 07:41:00:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.90845580 * 1304; EvalErrorPrediction = 0.54677914 * 1304; time = 0.0298s; samplesPerSecond = 43829.0
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.03 seconds , average latency = 0.01 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.15 seconds since last report (0.00 seconds on comm.); 5877 samples processed by 2 workers (5133 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 39.11k samplesPerSecond , throughputPerWorker = 19.56k samplesPerSecond
MPI Rank 0: 07/15/2016 07:41:00: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.88605878 * 20480; EvalErrorPrediction = 0.52036133 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-05; epochTime=0.526418s
MPI Rank 0: 07/15/2016 07:41:01: SGD: Saving checkpoint model '/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.3'
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:41:01: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:41:01: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/15/2016 07:41:01:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.86004845 * 1881; EvalErrorPrediction = 0.51568315 * 1881; time = 0.0637s; samplesPerSecond = 29515.6
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.04 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.13 seconds since last report (0.01 seconds on comm.); 4909 samples processed by 2 workers (2523 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 38.19k samplesPerSecond , throughputPerWorker = 19.10k samplesPerSecond
MPI Rank 0: 07/15/2016 07:41:01:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.87418703 * 1877; EvalErrorPrediction = 0.51678210 * 1877; time = 0.1082s; samplesPerSecond = 17349.1
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.07 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.13 seconds since last report (0.01 seconds on comm.); 4856 samples processed by 2 workers (2522 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 38.50k samplesPerSecond , throughputPerWorker = 19.25k samplesPerSecond
MPI Rank 0: 07/15/2016 07:41:01:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.88282394 * 1913; EvalErrorPrediction = 0.51751176 * 1913; time = 0.1020s; samplesPerSecond = 18752.1
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.10 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.13 seconds since last report (0.01 seconds on comm.); 4962 samples processed by 2 workers (2523 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 38.11k samplesPerSecond , throughputPerWorker = 19.06k samplesPerSecond
MPI Rank 0: 07/15/2016 07:41:01:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.90007603 * 1897; EvalErrorPrediction = 0.52345809 * 1897; time = 0.1067s; samplesPerSecond = 17782.8
MPI Rank 0: 07/15/2016 07:41:01:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.86586700 * 1852; EvalErrorPrediction = 0.51889849 * 1852; time = 0.0602s; samplesPerSecond = 30778.4
MPI Rank 0: 07/15/2016 07:41:01:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.87453371 * 1853; EvalErrorPrediction = 0.52239611 * 1853; time = 0.0420s; samplesPerSecond = 44144.3
MPI Rank 0: 07/15/2016 07:41:01:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.93574146 * 1258; EvalErrorPrediction = 0.53338633 * 1258; time = 0.0280s; samplesPerSecond = 45007.3
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.10 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.15 seconds since last report (0.00 seconds on comm.); 5753 samples processed by 2 workers (4963 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 38.51k samplesPerSecond , throughputPerWorker = 19.25k samplesPerSecond
MPI Rank 0: 07/15/2016 07:41:01: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.86624989 * 20480; EvalErrorPrediction = 0.51992187 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-05; epochTime=0.534424s
MPI Rank 0: 07/15/2016 07:41:01: SGD: Saving checkpoint model '/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn.4'
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:41:01: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:41:01: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/15/2016 07:41:01:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.84565891 * 1871; EvalErrorPrediction = 0.51416355 * 1871; time = 0.0758s; samplesPerSecond = 24668.1
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.02 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.12 seconds since last report (0.01 seconds on comm.); 4883 samples processed by 2 workers (2507 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 39.22k samplesPerSecond , throughputPerWorker = 19.61k samplesPerSecond
MPI Rank 0: 07/15/2016 07:41:01:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.81142747 * 1897; EvalErrorPrediction = 0.50131787 * 1897; time = 0.0922s; samplesPerSecond = 20568.4
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.05 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.11 seconds since last report (0.01 seconds on comm.); 4599 samples processed by 2 workers (2509 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 41.49k samplesPerSecond , throughputPerWorker = 20.74k samplesPerSecond
MPI Rank 0: 07/15/2016 07:41:02:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.82087472 * 1838; EvalErrorPrediction = 0.50979325 * 1838; time = 0.0867s; samplesPerSecond = 21205.4
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.08 seconds , average latency = 0.03 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     0.12 seconds since last report (0.01 seconds on comm.); 4768 samples processed by 2 workers (2396 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 40.29k samplesPerSecond , throughputPerWorker = 20.15k samplesPerSecond
MPI Rank 0: 07/15/2016 07:41:02:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.79812121 * 1806; EvalErrorPrediction = 0.48947951 * 1806; time = 0.0945s; samplesPerSecond = 19107.7
MPI Rank 0: 07/15/2016 07:41:02:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.80888316 * 1902; EvalErrorPrediction = 0.49684543 * 1902; time = 0.0684s; samplesPerSecond = 27823.7
MPI Rank 0: 07/15/2016 07:41:02:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.91811830 * 1852; EvalErrorPrediction = 0.52969762 * 1852; time = 0.0420s; samplesPerSecond = 44090.0
MPI Rank 0: 07/15/2016 07:41:02:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.82505797 * 1281; EvalErrorPrediction = 0.50039032 * 1281; time = 0.0312s; samplesPerSecond = 41022.2
MPI Rank 0: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.08 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 4-th sync:     0.15 seconds since last report (0.00 seconds on comm.); 6230 samples processed by 2 workers (5035 by me);
MPI Rank 0: 		(model aggregation stats) 4-th sync: totalThroughput = 41.20k samplesPerSecond , throughputPerWorker = 20.60k samplesPerSecond
MPI Rank 0: 07/15/2016 07:41:02: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.84176859 * 20480; EvalErrorPrediction = 0.51396484 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-05; epochTime=0.505038s
MPI Rank 0: 07/15/2016 07:41:02: SGD: Saving checkpoint model '/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn'
MPI Rank 0: 07/15/2016 07:41:02: CNTKCommandTrainEnd: speechTrain
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:41:02: Action "train" complete.
MPI Rank 0: 
MPI Rank 0: 07/15/2016 07:41:02: __COMPLETED__
MPI Rank 0: ~MPIWrapper
MPI Rank 1: 07/15/2016 07:40:53: -------------------------------------------------------------------
MPI Rank 1: 07/15/2016 07:40:53: Build info: 
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:53: 		Built time: Jul 15 2016 07:37:16
MPI Rank 1: 07/15/2016 07:40:53: 		Last modified date: Tue Jul 12 04:28:35 2016
MPI Rank 1: 07/15/2016 07:40:53: 		Build type: release
MPI Rank 1: 07/15/2016 07:40:53: 		Build target: GPU
MPI Rank 1: 07/15/2016 07:40:53: 		With 1bit-SGD: yes
MPI Rank 1: 07/15/2016 07:40:53: 		Math lib: mkl
MPI Rank 1: 07/15/2016 07:40:53: 		CUDA_PATH: /usr/local/cuda-7.5
MPI Rank 1: 07/15/2016 07:40:53: 		CUB_PATH: /usr/local/cub-1.4.1
MPI Rank 1: 07/15/2016 07:40:53: 		CUDNN_PATH: /usr/local/cudnn-4.0
MPI Rank 1: 07/15/2016 07:40:53: 		Build Branch: HEAD
MPI Rank 1: 07/15/2016 07:40:53: 		Build SHA1: 500f0ccaa040821405404d7879c0e823003f1544
MPI Rank 1: 07/15/2016 07:40:53: 		Built by philly on 34e58dd0283f
MPI Rank 1: 07/15/2016 07:40:53: 		Build Path: /home/philly/jenkins/workspace/CNTK-Build-Linux
MPI Rank 1: 07/15/2016 07:40:53: -------------------------------------------------------------------
MPI Rank 1: 07/15/2016 07:40:54: -------------------------------------------------------------------
MPI Rank 1: 07/15/2016 07:40:54: GPU info:
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:54: 		Device[0]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 1: 07/15/2016 07:40:54: 		Device[1]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 1: 07/15/2016 07:40:54: 		Device[2]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 1: 07/15/2016 07:40:54: 		Device[3]: cores = 2880; computeCapability = 3.5; type = "GeForce GTX 780 Ti"; memory = 3071 MB
MPI Rank 1: 07/15/2016 07:40:54: -------------------------------------------------------------------
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:54: Running on localhost at 2016/07/15 07:40:54
MPI Rank 1: 07/15/2016 07:40:54: Command line: 
MPI Rank 1: /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/build/1bitsgd/release/bin/cntk  configFile=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/../ParallelBM/cntk.cntk  currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu  DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data  ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..  OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu  DeviceId=0  timestamping=true  numCPUThreads=12  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:54: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 07/15/2016 07:40:54: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = $DeviceId$
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = $DeviceId$
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: DeviceId=0
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=12
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:54: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:54: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 07/15/2016 07:40:54: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = 0
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = 0
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: DeviceId=0
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=12
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:54: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:54: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: configparameters: cntk.cntk:command=speechTrain
MPI Rank 1: configparameters: cntk.cntk:ConfigDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/DNN/ParallelBM/..
MPI Rank 1: configparameters: cntk.cntk:currentDirectory=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: configparameters: cntk.cntk:DataDir=/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data
MPI Rank 1: configparameters: cntk.cntk:deviceId=0
MPI Rank 1: configparameters: cntk.cntk:numCPUThreads=12
MPI Rank 1: configparameters: cntk.cntk:OutputDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 1: configparameters: cntk.cntk:precision=double
MPI Rank 1: configparameters: cntk.cntk:RunDir=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu
MPI Rank 1: configparameters: cntk.cntk:speechTrain=[
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = 0
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "/home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: 
MPI Rank 1: configparameters: cntk.cntk:stderr=/tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/stderr
MPI Rank 1: configparameters: cntk.cntk:timestamping=true
MPI Rank 1: 07/15/2016 07:40:54: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 07/15/2016 07:40:54: Commands: speechTrain
MPI Rank 1: 07/15/2016 07:40:54: Precision = "double"
MPI Rank 1: 07/15/2016 07:40:54: Using 12 CPU threads.
MPI Rank 1: 07/15/2016 07:40:54: CNTKModelPath: /tmp/cntk-test-20160715073939.844581/Speech/DNN_ParallelBM@release_gpu/models/cntkSpeech.dnn
MPI Rank 1: 07/15/2016 07:40:54: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 1: 07/15/2016 07:40:54: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:54: ##############################################################################
MPI Rank 1: 07/15/2016 07:40:54: #                                                                            #
MPI Rank 1: 07/15/2016 07:40:54: # Action "train"                                                             #
MPI Rank 1: 07/15/2016 07:40:54: #                                                                            #
MPI Rank 1: 07/15/2016 07:40:54: ##############################################################################
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:54: CNTKCommandTrainBegin: speechTrain
MPI Rank 1: SimpleNetworkBuilder Using GPU 0
MPI Rank 1: reading script file glob_0000.scp ... 946 entries
MPI Rank 1: total 132 state names in state list /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/state.list
MPI Rank 1: htkmlfreader: reading MLF file /home/philly/jenkins/workspace/CNTK-Test-Linux-W1/Tests/EndToEndTests/Speech/Data/glob_0000.mlf ... total 948 entries
MPI Rank 1: ...............................................................................................feature set 0: 252508 frames in 946 out of 946 utterances
MPI Rank 1: label set 0: 129 classes
MPI Rank 1: minibatchutterancesource: 946 utterances grouped into 3 chunks, av. chunk size: 315.3 utterances, 84169.3 frames
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:54: Creating virgin network.
MPI Rank 1: SetUniformRandomValue (GPU): creating curand object with seed 1, sizeof(ElemType)==8
MPI Rank 1: 
MPI Rank 1: Post-processing network...
MPI Rank 1: 
MPI Rank 1: 7 roots:
MPI Rank 1: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 1: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 1: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 	MeanOfFeatures = Mean()
MPI Rank 1: 	PosteriorProb = Softmax()
MPI Rank 1: 	Prior = Mean()
MPI Rank 1: 	ScaledLogLikelihood = Minus()
MPI Rank 1: 
MPI Rank 1: Validating network. 25 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 1: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 1: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 1: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 1: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 1: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 1: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 1: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 1: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 1: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 1: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 1: 
MPI Rank 1: Validating network. 17 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating network, final pass.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: Post-processing network complete.
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:55: Created model with 25 nodes on GPU 0.
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:55: Training criterion node(s):
MPI Rank 1: 07/15/2016 07:40:55: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:55: Evaluation criterion node(s):
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:55: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Allocating matrices for forward and/or backward propagation.
MPI Rank 1: 
MPI Rank 1: Memory Sharing Structure:
MPI Rank 1: 
MPI Rank 1: (nil): {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 1: 0x2eef148: {[features Value[363 x *]] }
MPI Rank 1: 0x438e4c8: {[MeanOfFeatures Value[363]] }
MPI Rank 1: 0x438e9d8: {[InvStdOfFeatures Value[363]] }
MPI Rank 1: 0x438f708: {[W0 Value[512 x 363]] }
MPI Rank 1: 0x44871c8: {[labels Value[132 x *]] }
MPI Rank 1: 0x4488428: {[Prior Value[132]] }
MPI Rank 1: 0x448dcc8: {[EvalErrorPrediction Value[1]] }
MPI Rank 1: 0x448dfc8: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 1: 0x448e188: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 1: 0x448e618: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 1: 0x448e788: {[LogOfPrior Value[132]] }
MPI Rank 1: 0x4490328: {[B0 Value[512 x 1]] }
MPI Rank 1: 0x4492498: {[W1 Value[512 x 512]] }
MPI Rank 1: 0x4493268: {[B1 Value[512 x 1]] }
MPI Rank 1: 0x4494408: {[W2 Value[132 x 512]] }
MPI Rank 1: 0x4494e58: {[B2 Value[132 x 1]] }
MPI Rank 1: 0x476fed8: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 1: 0x4770698: {[W0*features Value[512 x *]] }
MPI Rank 1: 0x47708a8: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 1: 0x4770a08: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 1: 0x4770b68: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 1: 0x4770d28: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 1: 0x4770ee8: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 1: 0x47710a8: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 1: 0x4771c08: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 1: 0x4771dc8: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 1: 0x4771f88: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 1: 0x4772148: {[B2 Gradient[132 x 1]] }
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:55: Precomputing --> 3 PreCompute nodes found.
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:55: 	MeanOfFeatures = Mean()
MPI Rank 1: 07/15/2016 07:40:55: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 07/15/2016 07:40:55: 	Prior = Mean()
MPI Rank 1: minibatchiterator: epoch 0: frames [0..252508] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:57: Precomputing --> Completed.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:57: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 1: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:57: Starting minibatch loop.
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.65975105 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 0.0208s; samplesPerSecond = 9238.3
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.55327870 * 192; EvalErrorPrediction = 0.95312500 * 192; time = 0.0196s; samplesPerSecond = 9778.5
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.57535762 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0197s; samplesPerSecond = 9759.1
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.38188648 * 192; EvalErrorPrediction = 0.90104167 * 192; time = 0.0197s; samplesPerSecond = 9768.5
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.45906506 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0196s; samplesPerSecond = 9778.5
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.62%]: CrossEntropyWithSoftmax = 4.36042571 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0197s; samplesPerSecond = 9769.0
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 3.92816653 * 192; EvalErrorPrediction = 0.86979167 * 192; time = 0.0196s; samplesPerSecond = 9778.0
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.07128689 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0196s; samplesPerSecond = 9778.5
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.92540406 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0196s; samplesPerSecond = 9777.5
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.91665259 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0197s; samplesPerSecond = 9736.3
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.93187129 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0196s; samplesPerSecond = 9774.0
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.86063942 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0197s; samplesPerSecond = 9769.0
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.85775127 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0197s; samplesPerSecond = 9770.5
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.12%]: CrossEntropyWithSoftmax = 3.60554340 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0196s; samplesPerSecond = 9781.4
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.68187602 * 192; EvalErrorPrediction = 0.84895833 * 192; time = 0.0196s; samplesPerSecond = 9774.0
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.65624550 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0197s; samplesPerSecond = 9767.5
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.82670705 * 192; EvalErrorPrediction = 0.88020833 * 192; time = 0.0196s; samplesPerSecond = 9785.9
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.60134199 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0196s; samplesPerSecond = 9771.5
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.40815866 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0197s; samplesPerSecond = 9771.0
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.74057042 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0196s; samplesPerSecond = 9775.5
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.73982483 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0197s; samplesPerSecond = 9728.4
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.62%]: CrossEntropyWithSoftmax = 3.66129398 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0197s; samplesPerSecond = 9759.1
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.63107164 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0196s; samplesPerSecond = 9775.5
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.40512706 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0197s; samplesPerSecond = 9768.5
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.46680642 * 192; EvalErrorPrediction = 0.81770833 * 192; time = 0.0196s; samplesPerSecond = 9775.0
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.14408141 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0197s; samplesPerSecond = 9736.3
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.45844320 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0196s; samplesPerSecond = 9781.9
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.23660464 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0196s; samplesPerSecond = 9780.0
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.48527247 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.0196s; samplesPerSecond = 9778.5
MPI Rank 1: 07/15/2016 07:40:57:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.12%]: CrossEntropyWithSoftmax = 3.22198011 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0196s; samplesPerSecond = 9778.5
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.59115276 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0197s; samplesPerSecond = 9761.6
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.36392434 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0196s; samplesPerSecond = 9779.5
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.31162016 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0172s; samplesPerSecond = 11147.2
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.28101436 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0190s; samplesPerSecond = 10090.4
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.24629888 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.0190s; samplesPerSecond = 10100.5
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.51034636 * 192; EvalErrorPrediction = 0.80208333 * 192; time = 0.0190s; samplesPerSecond = 10090.4
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.12512975 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0190s; samplesPerSecond = 10093.0
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.62%]: CrossEntropyWithSoftmax = 3.09608686 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0190s; samplesPerSecond = 10102.1
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.11321109 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0190s; samplesPerSecond = 10104.2
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.38243295 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.0190s; samplesPerSecond = 10104.2
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.24719907 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0190s; samplesPerSecond = 10095.2
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 2.91641342 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0190s; samplesPerSecond = 10101.5
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.15592288 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0190s; samplesPerSecond = 10097.8
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.11570520 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0180s; samplesPerSecond = 10694.0
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 3.11725644 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0173s; samplesPerSecond = 11081.0
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.12%]: CrossEntropyWithSoftmax = 2.90128826 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0191s; samplesPerSecond = 10028.2
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.93656846 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0191s; samplesPerSecond = 10042.4
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 3.09806645 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0191s; samplesPerSecond = 10040.3
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 3.03497307 * 192; EvalErrorPrediction = 0.76562500 * 192; time = 0.0191s; samplesPerSecond = 10040.3
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 3.05741199 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0191s; samplesPerSecond = 10029.8
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 3.06180258 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0192s; samplesPerSecond = 10026.1
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 2.96061231 * 192; EvalErrorPrediction = 0.72395833 * 192; time = 0.0191s; samplesPerSecond = 10033.4
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 2.88269046 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0191s; samplesPerSecond = 10040.8
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.62%]: CrossEntropyWithSoftmax = 2.87544964 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0191s; samplesPerSecond = 10028.7
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 2.97421438 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0192s; samplesPerSecond = 10012.0
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.77480559 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0192s; samplesPerSecond = 10013.0
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.87698515 * 192; EvalErrorPrediction = 0.71875000 * 192; time = 0.0191s; samplesPerSecond = 10028.2
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.89483909 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0191s; samplesPerSecond = 10028.2
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.87603450 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0191s; samplesPerSecond = 10043.9
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.83147893 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0191s; samplesPerSecond = 10027.7
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 2.77117969 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0192s; samplesPerSecond = 10024.5
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.72145865 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0191s; samplesPerSecond = 10043.9
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.89654258 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0191s; samplesPerSecond = 10030.3
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.57594435 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0191s; samplesPerSecond = 10041.8
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.56638259 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0192s; samplesPerSecond = 10016.2
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.62584797 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0191s; samplesPerSecond = 10028.7
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.76147740 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0192s; samplesPerSecond = 10017.2
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.58581382 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0192s; samplesPerSecond = 10012.5
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.58264171 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0191s; samplesPerSecond = 10041.8
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.62%]: CrossEntropyWithSoftmax = 2.77646032 * 192; EvalErrorPrediction = 0.68229167 * 192; time = 0.0191s; samplesPerSecond = 10048.7
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.49416357 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0191s; samplesPerSecond = 10043.9
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.63014880 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0191s; samplesPerSecond = 10028.7
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.44158480 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0192s; samplesPerSecond = 10017.2
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.65698802 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0191s; samplesPerSecond = 10036.6
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.68573611 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0191s; samplesPerSecond = 10032.9
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.71202514 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0191s; samplesPerSecond = 10041.3
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.47320534 * 192; EvalErrorPrediction = 0.66666667 * 192; time = 0.0191s; samplesPerSecond = 10033.4
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.12%]: CrossEntropyWithSoftmax = 2.36032720 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0192s; samplesPerSecond = 10020.9
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.49364747 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0191s; samplesPerSecond = 10040.8
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.48111825 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0192s; samplesPerSecond = 10011.5
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.37408271 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0192s; samplesPerSecond = 10021.9
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.55668018 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0191s; samplesPerSecond = 10035.0
MPI Rank 1: 07/15/2016 07:40:58:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.43476395 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0192s; samplesPerSecond = 10024.5
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.40167293 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0191s; samplesPerSecond = 10037.6
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.49632054 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0191s; samplesPerSecond = 10046.6
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.62%]: CrossEntropyWithSoftmax = 2.42386276 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0191s; samplesPerSecond = 10032.9
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.39243346 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0191s; samplesPerSecond = 10041.3
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.33506597 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0191s; samplesPerSecond = 10041.8
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.46269780 * 192; EvalErrorPrediction = 0.63541667 * 192; time = 0.0191s; samplesPerSecond = 10037.6
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.16525044 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0191s; samplesPerSecond = 10028.7
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.38205640 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0192s; samplesPerSecond = 10016.7
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.26268150 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0192s; samplesPerSecond = 10013.6
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.29520393 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0191s; samplesPerSecond = 10031.9
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.12%]: CrossEntropyWithSoftmax = 2.40100177 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0191s; samplesPerSecond = 10032.9
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.17147342 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0191s; samplesPerSecond = 10034.5
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.21319452 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0191s; samplesPerSecond = 10029.8
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.18936500 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0191s; samplesPerSecond = 10038.2
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.20091024 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0191s; samplesPerSecond = 10043.4
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.19512173 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0192s; samplesPerSecond = 10025.1
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.06818658 * 192; EvalErrorPrediction = 0.51562500 * 192; time = 0.0191s; samplesPerSecond = 10039.2
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.33278311 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0191s; samplesPerSecond = 10036.6
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.62%]: CrossEntropyWithSoftmax = 2.32658849 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0191s; samplesPerSecond = 10040.3
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.24668364 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0192s; samplesPerSecond = 10016.2
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.36022537 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0191s; samplesPerSecond = 10030.8
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.22775172 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0191s; samplesPerSecond = 10038.2
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 1.95309060 * 192; EvalErrorPrediction = 0.53645833 * 192; time = 0.0191s; samplesPerSecond = 10035.5
MPI Rank 1: 07/15/2016 07:40:59: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.00582250 * 20480; EvalErrorPrediction = 0.72578125 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=2.06038s
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:59: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:40:59: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.21426161 * 266; EvalErrorPrediction = 0.60902256 * 266; time = 0.0304s; samplesPerSecond = 8745.4
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.41358700 * 279; EvalErrorPrediction = 0.65232975 * 279; time = 0.0329s; samplesPerSecond = 8489.8
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.02946829 * 277; EvalErrorPrediction = 0.56678700 * 277; time = 0.0206s; samplesPerSecond = 13451.8
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.16642725 * 270; EvalErrorPrediction = 0.56296296 * 270; time = 0.0163s; samplesPerSecond = 16609.3
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.32620647 * 262; EvalErrorPrediction = 0.62213740 * 262; time = 0.0204s; samplesPerSecond = 12824.9
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.01657387 * 267; EvalErrorPrediction = 0.53558052 * 267; time = 0.0108s; samplesPerSecond = 24758.9
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 1.99759224 * 288; EvalErrorPrediction = 0.55208333 * 288; time = 0.0119s; samplesPerSecond = 24161.1
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.17 seconds since last report (0.01 seconds on comm.); 4224 samples processed by 2 workers (2080 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 24.65k samplesPerSecond , throughputPerWorker = 12.32k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 1.97947986 * 265; EvalErrorPrediction = 0.53207547 * 265; time = 0.0292s; samplesPerSecond = 9074.7
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.19209473 * 267; EvalErrorPrediction = 0.58052434 * 267; time = 0.0161s; samplesPerSecond = 16622.1
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.13771034 * 292; EvalErrorPrediction = 0.57534247 * 292; time = 0.0311s; samplesPerSecond = 9398.7
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.03107747 * 283; EvalErrorPrediction = 0.56183746 * 283; time = 0.0257s; samplesPerSecond = 11025.4
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.12124755 * 263; EvalErrorPrediction = 0.60456274 * 263; time = 0.0208s; samplesPerSecond = 12621.2
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.10202004 * 268; EvalErrorPrediction = 0.57462687 * 268; time = 0.0250s; samplesPerSecond = 10737.2
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.99919683 * 249; EvalErrorPrediction = 0.52610442 * 249; time = 0.0109s; samplesPerSecond = 22789.7
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 2.04726089 * 253; EvalErrorPrediction = 0.54150198 * 253; time = 0.0106s; samplesPerSecond = 23890.5
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.17 seconds since last report (0.01 seconds on comm.); 4220 samples processed by 2 workers (2055 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 25.52k samplesPerSecond , throughputPerWorker = 12.76k samplesPerSecond
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 2.04802809 * 267; EvalErrorPrediction = 0.55056180 * 267; time = 0.0333s; samplesPerSecond = 8026.0
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 2.02992295 * 255; EvalErrorPrediction = 0.54117647 * 255; time = 0.0252s; samplesPerSecond = 10135.9
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 1.95301174 * 285; EvalErrorPrediction = 0.52280702 * 285; time = 0.0324s; samplesPerSecond = 8801.5
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.99077489 * 288; EvalErrorPrediction = 0.56250000 * 288; time = 0.0163s; samplesPerSecond = 17669.8
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.94619005 * 272; EvalErrorPrediction = 0.53308824 * 272; time = 0.0217s; samplesPerSecond = 12546.1
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 2.01952619 * 300; EvalErrorPrediction = 0.53000000 * 300; time = 0.0181s; samplesPerSecond = 16538.0
MPI Rank 1: 07/15/2016 07:40:59:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 2.02183874 * 286; EvalErrorPrediction = 0.53496503 * 286; time = 0.0110s; samplesPerSecond = 25952.8
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.16 seconds since last report (0.01 seconds on comm.); 4250 samples processed by 2 workers (2122 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 25.77k samplesPerSecond , throughputPerWorker = 12.89k samplesPerSecond
MPI Rank 1: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 2.09071154 * 255; EvalErrorPrediction = 0.56862745 * 255; time = 0.0274s; samplesPerSecond = 9311.0
MPI Rank 1: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 1.99362301 * 264; EvalErrorPrediction = 0.54166667 * 264; time = 0.0208s; samplesPerSecond = 12675.2
MPI Rank 1: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.84240793 * 289; EvalErrorPrediction = 0.55709343 * 289; time = 0.0134s; samplesPerSecond = 21596.2
MPI Rank 1: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 2.06042773 * 291; EvalErrorPrediction = 0.57044674 * 291; time = 0.0213s; samplesPerSecond = 13668.4
MPI Rank 1: 07/15/2016 07:41:00:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 1.84027793 * 188; EvalErrorPrediction = 0.49468085 * 188; time = 0.0150s; samplesPerSecond = 12573.6
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.03 seconds , average latency = 0.01 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.27 seconds since last report (0.16 seconds on comm.); 7786 samples processed by 2 workers (1032 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 29.21k samplesPerSecond , throughputPerWorker = 14.60k samplesPerSecond
MPI Rank 1: 07/15/2016 07:41:00: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.00414082 * 20480; EvalErrorPrediction = 0.54272461 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=0.768484s
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:41:00: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:41:00: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/15/2016 07:41:00:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.99074047 * 1158; EvalErrorPrediction = 0.55785838 * 1158; time = 0.0433s; samplesPerSecond = 26757.2
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.12 seconds since last report (0.01 seconds on comm.); 4884 samples processed by 2 workers (2317 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 39.33k samplesPerSecond , throughputPerWorker = 19.67k samplesPerSecond
MPI Rank 1: 07/15/2016 07:41:00:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.86299182 * 1159; EvalErrorPrediction = 0.51855047 * 1159; time = 0.0779s; samplesPerSecond = 14880.5
MPI Rank 1: 07/15/2016 07:41:00:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.90592061 * 1106; EvalErrorPrediction = 0.54068716 * 1106; time = 0.0528s; samplesPerSecond = 20945.8
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.13 seconds since last report (0.02 seconds on comm.); 4824 samples processed by 2 workers (2256 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 38.52k samplesPerSecond , throughputPerWorker = 19.26k samplesPerSecond
MPI Rank 1: 07/15/2016 07:41:00:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.91946358 * 1150; EvalErrorPrediction = 0.52869565 * 1150; time = 0.0723s; samplesPerSecond = 15912.6
MPI Rank 1: 07/15/2016 07:41:00:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.83964515 * 1163; EvalErrorPrediction = 0.50558899 * 1163; time = 0.0616s; samplesPerSecond = 18883.9
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.13 seconds since last report (0.01 seconds on comm.); 4895 samples processed by 2 workers (2315 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 38.69k samplesPerSecond , throughputPerWorker = 19.35k samplesPerSecond
MPI Rank 1: 07/15/2016 07:41:00:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.85292839 * 1152; EvalErrorPrediction = 0.50954861 * 1152; time = 0.0648s; samplesPerSecond = 17788.2
MPI Rank 1: 07/15/2016 07:41:00:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.85415669 * 744; EvalErrorPrediction = 0.49865591 * 744; time = 0.0388s; samplesPerSecond = 19162.4
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.03 seconds , average latency = 0.01 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.15 seconds since last report (0.08 seconds on comm.); 5877 samples processed by 2 workers (744 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 39.11k samplesPerSecond , throughputPerWorker = 19.56k samplesPerSecond
MPI Rank 1: 07/15/2016 07:41:00: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.88605878 * 20480; EvalErrorPrediction = 0.52036133 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-05; epochTime=0.52642s
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:41:01: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:41:01: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/15/2016 07:41:01:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.87845960 * 1191; EvalErrorPrediction = 0.53484467 * 1191; time = 0.0801s; samplesPerSecond = 14862.6
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.13 seconds since last report (0.00 seconds on comm.); 4909 samples processed by 2 workers (2386 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 38.23k samplesPerSecond , throughputPerWorker = 19.11k samplesPerSecond
MPI Rank 1: 07/15/2016 07:41:01:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.84749387 * 1195; EvalErrorPrediction = 0.52970711 * 1195; time = 0.0452s; samplesPerSecond = 26450.3
MPI Rank 1: 07/15/2016 07:41:01:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.77251769 * 1159; EvalErrorPrediction = 0.51251079 * 1159; time = 0.0608s; samplesPerSecond = 19054.4
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.13 seconds since last report (0.01 seconds on comm.); 4856 samples processed by 2 workers (2334 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 38.50k samplesPerSecond , throughputPerWorker = 19.25k samplesPerSecond
MPI Rank 1: 07/15/2016 07:41:01:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.81981856 * 1175; EvalErrorPrediction = 0.51148936 * 1175; time = 0.0651s; samplesPerSecond = 18041.9
MPI Rank 1: 07/15/2016 07:41:01:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.89233098 * 1220; EvalErrorPrediction = 0.50737705 * 1220; time = 0.0797s; samplesPerSecond = 15316.8
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.13 seconds since last report (0.01 seconds on comm.); 4962 samples processed by 2 workers (2439 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 38.11k samplesPerSecond , throughputPerWorker = 19.06k samplesPerSecond
MPI Rank 1: 07/15/2016 07:41:01:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.81322608 * 1219; EvalErrorPrediction = 0.51271534 * 1219; time = 0.0504s; samplesPerSecond = 24196.6
MPI Rank 1: 07/15/2016 07:41:01:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.86968339 * 790; EvalErrorPrediction = 0.52658228 * 790; time = 0.0410s; samplesPerSecond = 19257.0
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.02 seconds , average latency = 0.01 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.15 seconds since last report (0.08 seconds on comm.); 5753 samples processed by 2 workers (790 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 38.51k samplesPerSecond , throughputPerWorker = 19.25k samplesPerSecond
MPI Rank 1: 07/15/2016 07:41:01: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.86624989 * 20480; EvalErrorPrediction = 0.51992187 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-05; epochTime=0.534418s
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:41:01: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:41:01: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/15/2016 07:41:01:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.93381296 * 1201; EvalErrorPrediction = 0.54704413 * 1201; time = 0.0640s; samplesPerSecond = 18755.4
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4883 samples processed by 2 workers (2376 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 39.26k samplesPerSecond , throughputPerWorker = 19.63k samplesPerSecond
MPI Rank 1: 07/15/2016 07:41:01:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.86772846 * 1175; EvalErrorPrediction = 0.53106383 * 1175; time = 0.0563s; samplesPerSecond = 20874.4
MPI Rank 1: 07/15/2016 07:41:01:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.83611687 * 1234; EvalErrorPrediction = 0.51539708 * 1234; time = 0.0751s; samplesPerSecond = 16440.8
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.11 seconds since last report (0.00 seconds on comm.); 4599 samples processed by 2 workers (2090 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 41.49k samplesPerSecond , throughputPerWorker = 20.74k samplesPerSecond
MPI Rank 1: 07/15/2016 07:41:02:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.85010061 * 1266; EvalErrorPrediction = 0.53712480 * 1266; time = 0.0595s; samplesPerSecond = 21285.2
MPI Rank 1: 07/15/2016 07:41:02:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.85371633 * 1170; EvalErrorPrediction = 0.50000000 * 1170; time = 0.0657s; samplesPerSecond = 17802.5
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     0.12 seconds since last report (0.00 seconds on comm.); 4768 samples processed by 2 workers (2372 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 40.30k samplesPerSecond , throughputPerWorker = 20.15k samplesPerSecond
MPI Rank 1: 07/15/2016 07:41:02:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.77639044 * 1220; EvalErrorPrediction = 0.51311475 * 1220; time = 0.0500s; samplesPerSecond = 24415.6
MPI Rank 1: 07/15/2016 07:41:02:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.88247702 * 767; EvalErrorPrediction = 0.54367666 * 767; time = 0.0408s; samplesPerSecond = 18805.9
MPI Rank 1: 		(model aggregation stats): 4-th sync point was hit, introducing a 0.01-seconds latency this time; accumulated time on sync point = 0.01 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 4-th sync:     0.15 seconds since last report (0.07 seconds on comm.); 6230 samples processed by 2 workers (1195 by me);
MPI Rank 1: 		(model aggregation stats) 4-th sync: totalThroughput = 41.22k samplesPerSecond , throughputPerWorker = 20.61k samplesPerSecond
MPI Rank 1: 07/15/2016 07:41:02: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.84176859 * 20480; EvalErrorPrediction = 0.51396484 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-05; epochTime=0.505038s
MPI Rank 1: 07/15/2016 07:41:02: CNTKCommandTrainEnd: speechTrain
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:41:02: Action "train" complete.
MPI Rank 1: 
MPI Rank 1: 07/15/2016 07:41:02: __COMPLETED__
MPI Rank 1: ~MPIWrapper