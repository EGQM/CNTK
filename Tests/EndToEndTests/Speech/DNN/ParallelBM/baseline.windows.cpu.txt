CPU info:
    CPU Model Name: Intel(R) Xeon(R) CPU W3530 @ 2.80GHz
    Hardware threads: 4
    Total Memory: 12580404 kB
-------------------------------------------------------------------
=== Running C:\Program Files\Microsoft MPI\Bin\/mpiexec.exe -n 2 C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu DeviceId=-1 timestamping=true numCPUThreads=2 precision=double speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]] stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/stderr
-------------------------------------------------------------------
Build info: 

		Built time: Jul 15 2016 00:48:16
		Last modified date: Fri Jul  8 02:53:05 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: c:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 500f0ccaa040821405404d7879c0e823003f1544
		Built by svcphil on Philly-Pool1
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPIWrapper: initializing MPI
-------------------------------------------------------------------
Build info: 

		Built time: Jul 15 2016 00:48:16
		Last modified date: Fri Jul  8 02:53:05 2016
		Build type: Release
		Build target: GPU
		With 1bit-SGD: no
		Math lib: mkl
		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
		CUB_PATH: c:\src\cub-1.4.1
		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
		Build Branch: HEAD
		Build SHA1: 500f0ccaa040821405404d7879c0e823003f1544
		Built by svcphil on Philly-Pool1
		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
-------------------------------------------------------------------
Changed current directory to C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPIWrapper: initializing MPI
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: 2 nodes pinging each other
ping [requestnodes (before change)]: all 2 nodes responded
ping [requestnodes (before change)]: all 2 nodes responded
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (1) are in (participating)
requestnodes [MPIWrapper]: using 2 out of 2 MPI nodes (2 requested); we (0) are in (participating)
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: 2 nodes pinging each other
ping [requestnodes (after change)]: all 2 nodes responded
mpihelper: we are cog 0 in a gearbox of 2
ping [requestnodes (after change)]: all 2 nodes responded
ping [mpihelper]: 2 nodes pinging each other
mpihelper: we are cog 1 in a gearbox of 2
ping [mpihelper]: 2 nodes pinging each other
ping [mpihelper]: all 2 nodes responded
ping [mpihelper]: all 2 nodes responded
MPI Rank 0: 07/15/2016 00:55:37: Redirecting stderr to file C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/stderr_speechTrain.logrank0
MPI Rank 0: 07/15/2016 00:55:37: -------------------------------------------------------------------
MPI Rank 0: 07/15/2016 00:55:37: Build info: 
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: 		Built time: Jul 15 2016 00:48:16
MPI Rank 0: 07/15/2016 00:55:37: 		Last modified date: Fri Jul  8 02:53:05 2016
MPI Rank 0: 07/15/2016 00:55:37: 		Build type: Release
MPI Rank 0: 07/15/2016 00:55:37: 		Build target: GPU
MPI Rank 0: 07/15/2016 00:55:37: 		With 1bit-SGD: no
MPI Rank 0: 07/15/2016 00:55:37: 		Math lib: mkl
MPI Rank 0: 07/15/2016 00:55:37: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
MPI Rank 0: 07/15/2016 00:55:37: 		CUB_PATH: c:\src\cub-1.4.1
MPI Rank 0: 07/15/2016 00:55:37: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
MPI Rank 0: 07/15/2016 00:55:37: 		Build Branch: HEAD
MPI Rank 0: 07/15/2016 00:55:37: 		Build SHA1: 500f0ccaa040821405404d7879c0e823003f1544
MPI Rank 0: 07/15/2016 00:55:37: 		Built by svcphil on Philly-Pool1
MPI Rank 0: 07/15/2016 00:55:37: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
MPI Rank 0: 07/15/2016 00:55:37: -------------------------------------------------------------------
MPI Rank 0: 07/15/2016 00:55:37: -------------------------------------------------------------------
MPI Rank 0: 07/15/2016 00:55:37: GPU info:
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8090 MB
MPI Rank 0: 07/15/2016 00:55:37: -------------------------------------------------------------------
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: Running on cntk-muc00 at 2016/07/15 00:55:37
MPI Rank 0: 07/15/2016 00:55:37: Command line: 
MPI Rank 0: C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu  DeviceId=-1  timestamping=true  numCPUThreads=2  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 07/15/2016 00:55:37: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = $DeviceId$
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = $DeviceId$
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=2
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: 07/15/2016 00:55:37: precision = "float"
MPI Rank 0: command = speechTrain
MPI Rank 0: deviceId = -1
MPI Rank 0: parallelTrain = true
MPI Rank 0: speechTrain = [
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ]
MPI Rank 0: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: DeviceId=-1
MPI Rank 0: timestamping=true
MPI Rank 0: numCPUThreads=2
MPI Rank 0: precision=double
MPI Rank 0: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 0: configparameters: cntk.cntk:command=speechTrain
MPI Rank 0: configparameters: cntk.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 0: configparameters: cntk.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: configparameters: cntk.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 0: configparameters: cntk.cntk:deviceId=-1
MPI Rank 0: configparameters: cntk.cntk:numCPUThreads=2
MPI Rank 0: configparameters: cntk.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 0: configparameters: cntk.cntk:precision=double
MPI Rank 0: configparameters: cntk.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu
MPI Rank 0: configparameters: cntk.cntk:speechTrain=[
MPI Rank 0:     action = "train"
MPI Rank 0:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 0:     deviceId = -1
MPI Rank 0:     traceLevel = 1
MPI Rank 0:     SimpleNetworkBuilder = [
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 0:         evalCriterion = "ErrorPrediction"
MPI Rank 0:         layerTypes = "Sigmoid"
MPI Rank 0:         initValueScale = 1.0
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         uniformInit = true
MPI Rank 0:         needPrior = true
MPI Rank 0:     ]
MPI Rank 0:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 0:         layerSizes = 363:512:512:132
MPI Rank 0:         trainingCriterion = 'CE'
MPI Rank 0:         evalCriterion = 'Err'
MPI Rank 0:         applyMeanVarNorm = true
MPI Rank 0:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 0:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 0:         featNorm = if applyMeanVarNorm
MPI Rank 0:                    then MeanVarNorm(features)
MPI Rank 0:                    else features
MPI Rank 0:         layers[layer:1..L-1] = if layer > 1
MPI Rank 0:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 0:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 0:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 0:         CE = if trainingCriterion == 'CE'
MPI Rank 0:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 0:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 0:         Err = if evalCriterion == 'Err' then
MPI Rank 0:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 0:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 0:         logPrior = LogPrior(labels)
MPI Rank 0:         // TODO: how to add a tag to an infix operation?
MPI Rank 0:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 0:     ]
MPI Rank 0:     SGD = [
MPI Rank 0:         epochSize = 20480
MPI Rank 0:         minibatchSize = 64:256:1024
MPI Rank 0:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 0:         numMBsToShowResult = 3
MPI Rank 0:         momentumPerMB = 0.9:0.656119
MPI Rank 0:         dropoutRate = 0.0
MPI Rank 0:         maxEpochs = 5
MPI Rank 0:         keepCheckPointFiles = true
MPI Rank 0:         clippingThresholdPerSample = 1#INF
MPI Rank 0:         ParallelTrain = [
MPI Rank 0:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 0:             distributedMBReading = true
MPI Rank 0:             syncPerfStats=1
MPI Rank 0:             BlockMomentumSGD = [
MPI Rank 0:                 blockSizePerWorker=2048
MPI Rank 0:                 resetSGDMomentum=true
MPI Rank 0:                 useNesterovMomentum=true
MPI Rank 0:             ]
MPI Rank 0:         ]
MPI Rank 0:         AutoAdjust = [
MPI Rank 0:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 0:             loadBestModel = true
MPI Rank 0:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 0:             learnRateDecreaseFactor = 0.5
MPI Rank 0:             learnRateIncreaseFactor = 1.382
MPI Rank 0:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0:     reader = [
MPI Rank 0:         readerType = "HTKMLFReader"
MPI Rank 0:         readMethod = "blockRandomize"
MPI Rank 0:         miniBatchMode = "partial"
MPI Rank 0:         randomize = "auto"
MPI Rank 0:         verbosity = 0
MPI Rank 0:         features = [
MPI Rank 0:             dim = 363
MPI Rank 0:             type = "real"
MPI Rank 0:             scpFile = "glob_0000.scp"
MPI Rank 0:         ]
MPI Rank 0:         labels = [
MPI Rank 0:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 0:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 0:             labelDim = 132
MPI Rank 0:             labelType = "category"
MPI Rank 0:         ]
MPI Rank 0:     ]
MPI Rank 0: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 0: 
MPI Rank 0: configparameters: cntk.cntk:stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 0: configparameters: cntk.cntk:timestamping=true
MPI Rank 0: 07/15/2016 00:55:37: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 0: 07/15/2016 00:55:37: Commands: speechTrain
MPI Rank 0: 07/15/2016 00:55:37: Precision = "double"
MPI Rank 0: 07/15/2016 00:55:37: Using 2 CPU threads.
MPI Rank 0: 07/15/2016 00:55:37: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn
MPI Rank 0: 07/15/2016 00:55:37: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 0: 07/15/2016 00:55:37: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: ##############################################################################
MPI Rank 0: 07/15/2016 00:55:37: #                                                                            #
MPI Rank 0: 07/15/2016 00:55:37: # Action "train"                                                             #
MPI Rank 0: 07/15/2016 00:55:37: #                                                                            #
MPI Rank 0: 07/15/2016 00:55:37: ##############################################################################
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: CNTKCommandTrainBegin: speechTrain
MPI Rank 0: SimpleNetworkBuilder Using CPU
MPI Rank 0: reading script file glob_0000.scp ... 946 entries
MPI Rank 0: total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
MPI Rank 0: htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
MPI Rank 0: ...............................................................................................feature set 0: 252508 frames in 946 out of 946 utterances
MPI Rank 0: label set 0: 129 classes
MPI Rank 0: minibatchutterancesource: 946 utterances grouped into 3 chunks, av. chunk size: 315.3 utterances, 84169.3 frames
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: Creating virgin network.
MPI Rank 0: 
MPI Rank 0: Post-processing network...
MPI Rank 0: 
MPI Rank 0: 7 roots:
MPI Rank 0: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 0: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 0: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 	MeanOfFeatures = Mean()
MPI Rank 0: 	PosteriorProb = Softmax()
MPI Rank 0: 	Prior = Mean()
MPI Rank 0: 	ScaledLogLikelihood = Minus()
MPI Rank 0: 
MPI Rank 0: Validating network. 25 nodes to process in pass 1.
MPI Rank 0: 
MPI Rank 0: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 0: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 0: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 0: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 0: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 0: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 0: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 0: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 0: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 0: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 0: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 0: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 0: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 0: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 0: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 0: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 0: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 0: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 0: 
MPI Rank 0: Validating network. 17 nodes to process in pass 2.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Validating network, final pass.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 0: 
MPI Rank 0: Post-processing network complete.
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: Created model with 25 nodes on CPU.
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: Training criterion node(s):
MPI Rank 0: 07/15/2016 00:55:37: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: Evaluation criterion node(s):
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: Allocating matrices for forward and/or backward propagation.
MPI Rank 0: 
MPI Rank 0: Memory Sharing Structure:
MPI Rank 0: 
MPI Rank 0: 0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 0: 0000005B73CE0D30: {[InvStdOfFeatures Value[363]] }
MPI Rank 0: 0000005B73CE0FB0: {[W1 Value[512 x 512]] }
MPI Rank 0: 0000005B73CE1230: {[features Value[363 x *]] }
MPI Rank 0: 0000005B73CE1730: {[W0 Value[512 x 363]] }
MPI Rank 0: 0000005B73CE1870: {[MeanOfFeatures Value[363]] }
MPI Rank 0: 0000005B73CE19B0: {[B0 Value[512 x 1]] }
MPI Rank 0: 0000005B7C5F8B60: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 0: 0000005B7C5F8C00: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 0: 0000005B7C5F8CA0: {[B1 Value[512 x 1]] }
MPI Rank 0: 0000005B7C5F8D40: {[W2 Value[132 x 512]] }
MPI Rank 0: 0000005B7C5F8E80: {[EvalErrorPrediction Value[1]] }
MPI Rank 0: 0000005B7C5F8F20: {[labels Value[132 x *]] }
MPI Rank 0: 0000005B7C5F8FC0: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 0: 0000005B7C5F9060: {[Prior Value[132]] }
MPI Rank 0: 0000005B7C5F9240: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 0: 0000005B7C5F9600: {[B2 Value[132 x 1]] }
MPI Rank 0: 0000005B7C5F97E0: {[W0*features Value[512 x *]] }
MPI Rank 0: 0000005B7C5F9880: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 0: 0000005B7C5F9D80: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 0: 0000005B7C5F9EC0: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 0: 0000005B7C5FA0A0: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 0: 0000005B7C5FA140: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 0: 0000005B7C5FA1E0: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 0: 0000005B7C5FA3C0: {[LogOfPrior Value[132]] }
MPI Rank 0: 0000005B7C5FA460: {[B2 Gradient[132 x 1]] }
MPI Rank 0: 0000005B7C5FA5A0: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 0: 0000005B7C5FA640: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 0: 0000005B7C5FAA00: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: Precomputing --> 3 PreCompute nodes found.
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:37: 	MeanOfFeatures = Mean()
MPI Rank 0: 07/15/2016 00:55:37: 	InvStdOfFeatures = InvStdDev()
MPI Rank 0: 07/15/2016 00:55:37: 	Prior = Mean()
MPI Rank 0: minibatchiterator: epoch 0: frames [0..252508] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:39: Precomputing --> Completed.
MPI Rank 0: 
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:40: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 0: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:40: Starting minibatch loop.
MPI Rank 0: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.52619519 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0758s; samplesPerSecond = 2534.2
MPI Rank 0: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.44869060 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.0737s; samplesPerSecond = 2604.0
MPI Rank 0: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.35402726 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.0713s; samplesPerSecond = 2691.1
MPI Rank 0: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.72002449 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.0734s; samplesPerSecond = 2617.5
MPI Rank 0: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.46631494 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 0.0708s; samplesPerSecond = 2712.5
MPI Rank 0: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.63%]: CrossEntropyWithSoftmax = 4.19658095 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0734s; samplesPerSecond = 2615.4
MPI Rank 0: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 3.95051698 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0713s; samplesPerSecond = 2694.0
MPI Rank 0: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.09131145 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 0.0732s; samplesPerSecond = 2624.3
MPI Rank 0: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.92589621 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 0.0712s; samplesPerSecond = 2695.3
MPI Rank 0: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.97094022 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 0.0731s; samplesPerSecond = 2625.3
MPI Rank 0: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.90748019 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.0712s; samplesPerSecond = 2695.7
MPI Rank 0: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.84060577 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0726s; samplesPerSecond = 2644.2
MPI Rank 0: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.74439442 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0711s; samplesPerSecond = 2699.1
MPI Rank 0: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.13%]: CrossEntropyWithSoftmax = 3.73463224 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0732s; samplesPerSecond = 2623.3
MPI Rank 0: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.80432021 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 0.0711s; samplesPerSecond = 2699.0
MPI Rank 0: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.62651803 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0727s; samplesPerSecond = 2639.7
MPI Rank 0: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.86269477 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0713s; samplesPerSecond = 2693.9
MPI Rank 0: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.68769031 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0728s; samplesPerSecond = 2636.3
MPI Rank 0: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.79565902 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0712s; samplesPerSecond = 2697.3
MPI Rank 0: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.58570247 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0725s; samplesPerSecond = 2647.1
MPI Rank 0: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.85954183 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0714s; samplesPerSecond = 2690.1
MPI Rank 0: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.63%]: CrossEntropyWithSoftmax = 3.74183896 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.1018s; samplesPerSecond = 1885.2
MPI Rank 0: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.54735982 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0852s; samplesPerSecond = 2252.8
MPI Rank 0: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.70633864 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0752s; samplesPerSecond = 2554.4
MPI Rank 0: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.58354117 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0751s; samplesPerSecond = 2555.0
MPI Rank 0: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.36542230 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0746s; samplesPerSecond = 2572.1
MPI Rank 0: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.50380193 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0752s; samplesPerSecond = 2554.1
MPI Rank 0: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.37334568 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0756s; samplesPerSecond = 2538.1
MPI Rank 0: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.27012708 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0745s; samplesPerSecond = 2576.2
MPI Rank 0: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.13%]: CrossEntropyWithSoftmax = 3.54250582 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0749s; samplesPerSecond = 2563.7
MPI Rank 0: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.43886428 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0744s; samplesPerSecond = 2581.7
MPI Rank 0: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.44146233 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0773s; samplesPerSecond = 2482.8
MPI Rank 0: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.45187987 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0764s; samplesPerSecond = 2512.3
MPI Rank 0: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.39578376 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0762s; samplesPerSecond = 2520.9
MPI Rank 0: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.46890360 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0741s; samplesPerSecond = 2592.5
MPI Rank 0: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.24849404 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0764s; samplesPerSecond = 2513.3
MPI Rank 0: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.05262393 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0754s; samplesPerSecond = 2547.7
MPI Rank 0: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.63%]: CrossEntropyWithSoftmax = 2.98820629 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0751s; samplesPerSecond = 2555.5
MPI Rank 0: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.28196504 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.0753s; samplesPerSecond = 2551.0
MPI Rank 0: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.08130382 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0754s; samplesPerSecond = 2544.8
MPI Rank 0: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.11800935 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0751s; samplesPerSecond = 2555.0
MPI Rank 0: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.08261207 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0744s; samplesPerSecond = 2578.9
MPI Rank 0: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.14629426 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0751s; samplesPerSecond = 2557.1
MPI Rank 0: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.05300475 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0760s; samplesPerSecond = 2525.2
MPI Rank 0: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 2.93310751 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0759s; samplesPerSecond = 2528.6
MPI Rank 0: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.13%]: CrossEntropyWithSoftmax = 3.06987053 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0753s; samplesPerSecond = 2551.4
MPI Rank 0: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.99158632 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0747s; samplesPerSecond = 2568.7
MPI Rank 0: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 2.92552128 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0752s; samplesPerSecond = 2553.9
MPI Rank 0: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 2.89043932 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0751s; samplesPerSecond = 2557.5
MPI Rank 0: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 3.27732055 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0749s; samplesPerSecond = 2564.3
MPI Rank 0: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 2.96695331 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0754s; samplesPerSecond = 2545.7
MPI Rank 0: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 2.97293322 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0751s; samplesPerSecond = 2557.5
MPI Rank 0: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 3.07734181 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0755s; samplesPerSecond = 2544.3
MPI Rank 0: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.63%]: CrossEntropyWithSoftmax = 3.07365736 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0752s; samplesPerSecond = 2553.0
MPI Rank 0: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 3.06739608 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0749s; samplesPerSecond = 2562.6
MPI Rank 0: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.89333305 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0752s; samplesPerSecond = 2554.8
MPI Rank 0: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.82344057 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0753s; samplesPerSecond = 2549.2
MPI Rank 0: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.85573927 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0751s; samplesPerSecond = 2555.4
MPI Rank 0: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.75028679 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0755s; samplesPerSecond = 2541.5
MPI Rank 0: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.61737750 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0747s; samplesPerSecond = 2570.8
MPI Rank 0: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 3.11044335 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0755s; samplesPerSecond = 2541.6
MPI Rank 0: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.55191248 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0750s; samplesPerSecond = 2561.2
MPI Rank 0: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.71537562 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0748s; samplesPerSecond = 2567.3
MPI Rank 0: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.78186640 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0812s; samplesPerSecond = 2364.5
MPI Rank 0: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.78744982 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0822s; samplesPerSecond = 2336.9
MPI Rank 0: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.61882367 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0751s; samplesPerSecond = 2556.9
MPI Rank 0: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.42551903 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0749s; samplesPerSecond = 2563.0
MPI Rank 0: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.65008144 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0758s; samplesPerSecond = 2534.0
MPI Rank 0: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.64561568 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0744s; samplesPerSecond = 2581.7
MPI Rank 0: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.63%]: CrossEntropyWithSoftmax = 2.50331821 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0765s; samplesPerSecond = 2510.1
MPI Rank 0: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.76779766 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0750s; samplesPerSecond = 2558.3
MPI Rank 0: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.57439782 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0866s; samplesPerSecond = 2217.7
MPI Rank 0: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.59506816 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0753s; samplesPerSecond = 2550.4
MPI Rank 0: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.79748320 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0742s; samplesPerSecond = 2589.0
MPI Rank 0: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.42389357 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0751s; samplesPerSecond = 2558.1
MPI Rank 0: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.52120106 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0752s; samplesPerSecond = 2553.6
MPI Rank 0: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.45625555 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0768s; samplesPerSecond = 2499.8
MPI Rank 0: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.13%]: CrossEntropyWithSoftmax = 2.54008135 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0752s; samplesPerSecond = 2554.8
MPI Rank 0: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.61808382 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0747s; samplesPerSecond = 2570.3
MPI Rank 0: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.56966171 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0752s; samplesPerSecond = 2552.5
MPI Rank 0: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.52902238 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0747s; samplesPerSecond = 2570.9
MPI Rank 0: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.46993069 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0741s; samplesPerSecond = 2592.4
MPI Rank 0: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.58191721 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0763s; samplesPerSecond = 2517.9
MPI Rank 0: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.33294393 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0749s; samplesPerSecond = 2562.2
MPI Rank 0: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.53151511 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0752s; samplesPerSecond = 2551.7
MPI Rank 0: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.63%]: CrossEntropyWithSoftmax = 2.16605995 * 192; EvalErrorPrediction = 0.54166667 * 192; time = 0.0758s; samplesPerSecond = 2533.6
MPI Rank 0: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.30564389 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.1024s; samplesPerSecond = 1875.2
MPI Rank 0: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.34726392 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0761s; samplesPerSecond = 2524.0
MPI Rank 0: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.37504577 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0747s; samplesPerSecond = 2569.9
MPI Rank 0: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.28547431 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.0753s; samplesPerSecond = 2549.1
MPI Rank 0: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.40907425 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0754s; samplesPerSecond = 2547.9
MPI Rank 0: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.45676229 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0749s; samplesPerSecond = 2562.9
MPI Rank 0: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.33149384 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0750s; samplesPerSecond = 2560.2
MPI Rank 0: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.13%]: CrossEntropyWithSoftmax = 2.33979511 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.0750s; samplesPerSecond = 2561.0
MPI Rank 0: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.24386280 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0756s; samplesPerSecond = 2538.5
MPI Rank 0: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.14332823 * 192; EvalErrorPrediction = 0.55729167 * 192; time = 0.0755s; samplesPerSecond = 2542.6
MPI Rank 0: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.30478756 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0747s; samplesPerSecond = 2571.0
MPI Rank 0: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.44992118 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0760s; samplesPerSecond = 2525.6
MPI Rank 0: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.23812771 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0751s; samplesPerSecond = 2556.1
MPI Rank 0: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.15788726 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0768s; samplesPerSecond = 2499.3
MPI Rank 0: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.31167683 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0846s; samplesPerSecond = 2270.7
MPI Rank 0: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.63%]: CrossEntropyWithSoftmax = 2.18184534 * 192; EvalErrorPrediction = 0.55729167 * 192; time = 0.0751s; samplesPerSecond = 2556.7
MPI Rank 0: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.18158668 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.0749s; samplesPerSecond = 2564.8
MPI Rank 0: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.25920101 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0755s; samplesPerSecond = 2544.7
MPI Rank 0: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.08901028 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0753s; samplesPerSecond = 2550.0
MPI Rank 0: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.54781841 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0749s; samplesPerSecond = 2564.7
MPI Rank 0: 07/15/2016 00:55:48: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.02730057 * 20480; EvalErrorPrediction = 0.72924805 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=8.1018s
MPI Rank 0: 07/15/2016 00:55:48: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.1'
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:48: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:48: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 07/15/2016 00:55:48:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.22359696 * 542; EvalErrorPrediction = 0.57564576 * 542; time = 0.1753s; samplesPerSecond = 3092.1
MPI Rank 0: 07/15/2016 00:55:49:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.11336715 * 531; EvalErrorPrediction = 0.58380414 * 531; time = 0.1709s; samplesPerSecond = 3107.2
MPI Rank 0: 07/15/2016 00:55:49:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.08094673 * 553; EvalErrorPrediction = 0.54611212 * 553; time = 0.1751s; samplesPerSecond = 3157.8
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.04-seconds latency this time; accumulated time on sync point = 0.04 seconds , average latency = 0.04 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.77 seconds since last report (0.02 seconds on comm.); 4236 samples processed by 2 workers (2172 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 5.47k samplesPerSecond , throughputPerWorker = 2.74k samplesPerSecond
MPI Rank 0: 07/15/2016 00:55:49:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.18390039 * 546; EvalErrorPrediction = 0.59340659 * 546; time = 0.2464s; samplesPerSecond = 2216.2
MPI Rank 0: 07/15/2016 00:55:49:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.21172281 * 521; EvalErrorPrediction = 0.59692898 * 521; time = 0.2409s; samplesPerSecond = 2162.3
MPI Rank 0: 07/15/2016 00:55:49:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.13478700 * 545; EvalErrorPrediction = 0.57981651 * 545; time = 0.2517s; samplesPerSecond = 2165.3
MPI Rank 0: 07/15/2016 00:55:50:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 2.09674076 * 553; EvalErrorPrediction = 0.56238698 * 553; time = 0.2531s; samplesPerSecond = 2184.5
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.11-seconds latency this time; accumulated time on sync point = 0.15 seconds , average latency = 0.07 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     1.19 seconds since last report (0.04 seconds on comm.); 4285 samples processed by 2 workers (2182 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 3.61k samplesPerSecond , throughputPerWorker = 1.80k samplesPerSecond
MPI Rank 0: 07/15/2016 00:55:50:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 1.99229131 * 563; EvalErrorPrediction = 0.57371226 * 563; time = 0.4413s; samplesPerSecond = 1275.8
MPI Rank 0: 07/15/2016 00:55:50:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 1.95359427 * 557; EvalErrorPrediction = 0.53321364 * 557; time = 0.2305s; samplesPerSecond = 2416.9
MPI Rank 0: 07/15/2016 00:55:51:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 1.99356622 * 548; EvalErrorPrediction = 0.53102190 * 548; time = 0.2243s; samplesPerSecond = 2443.4
MPI Rank 0: 07/15/2016 00:55:51:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.01073371 * 544; EvalErrorPrediction = 0.54411765 * 544; time = 0.2116s; samplesPerSecond = 2570.8
MPI Rank 0: 07/15/2016 00:55:51:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 1.92402327 * 551; EvalErrorPrediction = 0.53357532 * 551; time = 0.0979s; samplesPerSecond = 5629.9
MPI Rank 0: 07/15/2016 00:55:51:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 1.86861497 * 547; EvalErrorPrediction = 0.52285192 * 547; time = 0.0955s; samplesPerSecond = 5725.9
MPI Rank 0: 07/15/2016 00:55:51:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 1.95767075 * 528; EvalErrorPrediction = 0.53409091 * 528; time = 0.0928s; samplesPerSecond = 5688.6
MPI Rank 0: 07/15/2016 00:55:51:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 1.93195756 * 564; EvalErrorPrediction = 0.53014184 * 564; time = 0.0981s; samplesPerSecond = 5747.5
MPI Rank 0: 07/15/2016 00:55:51:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 1.99046512 * 528; EvalErrorPrediction = 0.56818182 * 528; time = 0.0928s; samplesPerSecond = 5690.0
MPI Rank 0: 07/15/2016 00:55:51:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 2.00563778 * 542; EvalErrorPrediction = 0.54243542 * 542; time = 0.0947s; samplesPerSecond = 5722.9
MPI Rank 0: 07/15/2016 00:55:51:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 2.05780103 * 554; EvalErrorPrediction = 0.53068592 * 554; time = 0.0976s; samplesPerSecond = 5675.5
MPI Rank 0: 07/15/2016 00:55:52:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.88599380 * 522; EvalErrorPrediction = 0.52873563 * 522; time = 0.0920s; samplesPerSecond = 5673.5
MPI Rank 0: 07/15/2016 00:55:52:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 2.00965537 * 526; EvalErrorPrediction = 0.56273764 * 526; time = 0.0917s; samplesPerSecond = 5738.6
MPI Rank 0: 07/15/2016 00:55:52:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 1.95375716 * 546; EvalErrorPrediction = 0.52380952 * 546; time = 0.0943s; samplesPerSecond = 5792.8
MPI Rank 0: 07/15/2016 00:55:52:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 1.92932361 * 543; EvalErrorPrediction = 0.51565378 * 543; time = 0.0936s; samplesPerSecond = 5801.1
MPI Rank 0: 07/15/2016 00:55:52:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.92152236 * 521; EvalErrorPrediction = 0.51247601 * 521; time = 0.0905s; samplesPerSecond = 5755.9
MPI Rank 0: 07/15/2016 00:55:52:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 2.01825970 * 571; EvalErrorPrediction = 0.55866900 * 571; time = 0.0981s; samplesPerSecond = 5821.7
MPI Rank 0: 07/15/2016 00:55:52:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 1.99066016 * 544; EvalErrorPrediction = 0.54411765 * 544; time = 0.0954s; samplesPerSecond = 5702.8
MPI Rank 0: 07/15/2016 00:55:52:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 1.92618984 * 554; EvalErrorPrediction = 0.52166065 * 554; time = 0.0985s; samplesPerSecond = 5624.4
MPI Rank 0: 07/15/2016 00:55:52:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 2.01748480 * 380; EvalErrorPrediction = 0.54210526 * 380; time = 0.0663s; samplesPerSecond = 5728.4
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.15 seconds , average latency = 0.05 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     2.21 seconds since last report (0.04 seconds on comm.); 11959 samples processed by 2 workers (10170 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 5.40k samplesPerSecond , throughputPerWorker = 2.70k samplesPerSecond
MPI Rank 0: 07/15/2016 00:55:52: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.03834499 * 20480; EvalErrorPrediction = 0.55161133 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=4.18367s
MPI Rank 0: 07/15/2016 00:55:53: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.2'
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:53: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:53: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.43 seconds since last report (0.00 seconds on comm.); 4268 samples processed by 2 workers (2127 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 10.01k samplesPerSecond , throughputPerWorker = 5.01k samplesPerSecond
MPI Rank 0: 07/15/2016 00:55:53:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.96401545 * 2127; EvalErrorPrediction = 0.55477198 * 2127; time = 0.4202s; samplesPerSecond = 5061.9
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.65 seconds since last report (0.00 seconds on comm.); 4329 samples processed by 2 workers (2188 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 6.67k samplesPerSecond , throughputPerWorker = 3.33k samplesPerSecond
MPI Rank 0: 07/15/2016 00:55:54:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.95453757 * 2188; EvalErrorPrediction = 0.55575868 * 2188; time = 0.6491s; samplesPerSecond = 3371.0
MPI Rank 0: 07/15/2016 00:55:54:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.92433814 * 2171; EvalErrorPrediction = 0.53431598 * 2171; time = 0.5936s; samplesPerSecond = 3657.4
MPI Rank 0: 07/15/2016 00:55:55:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.98809590 * 2137; EvalErrorPrediction = 0.54843238 * 2137; time = 0.3607s; samplesPerSecond = 5924.3
MPI Rank 0: 07/15/2016 00:55:55:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.92868917 * 2125; EvalErrorPrediction = 0.53505882 * 2125; time = 0.3533s; samplesPerSecond = 6014.1
MPI Rank 0: 07/15/2016 00:55:55:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.88612882 * 2107; EvalErrorPrediction = 0.52586616 * 2107; time = 0.3543s; samplesPerSecond = 5947.3
MPI Rank 0: 07/15/2016 00:55:56:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.88679446 * 1407; EvalErrorPrediction = 0.52096660 * 1407; time = 0.2338s; samplesPerSecond = 6017.5
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     1.95 seconds since last report (0.04 seconds on comm.); 11883 samples processed by 2 workers (9947 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 6.09k samplesPerSecond , throughputPerWorker = 3.05k samplesPerSecond
MPI Rank 0: 07/15/2016 00:55:56: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.94470793 * 20480; EvalErrorPrediction = 0.54301758 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=3.03263s
MPI Rank 0: 07/15/2016 00:55:56: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.3'
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:56: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:56: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.05-seconds latency this time; accumulated time on sync point = 0.05 seconds , average latency = 0.05 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.50 seconds since last report (0.03 seconds on comm.); 4392 samples processed by 2 workers (2128 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 8.85k samplesPerSecond , throughputPerWorker = 4.42k samplesPerSecond
MPI Rank 0: 07/15/2016 00:55:56:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 2.05633114 * 2128; EvalErrorPrediction = 0.57894737 * 2128; time = 0.4901s; samplesPerSecond = 4342.1
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.14-seconds latency this time; accumulated time on sync point = 0.19 seconds , average latency = 0.10 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     1.06 seconds since last report (0.04 seconds on comm.); 4376 samples processed by 2 workers (2090 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 4.12k samplesPerSecond , throughputPerWorker = 2.06k samplesPerSecond
MPI Rank 0: 07/15/2016 00:55:57:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 2.00554536 * 2090; EvalErrorPrediction = 0.54401914 * 2090; time = 1.0615s; samplesPerSecond = 1968.9
MPI Rank 0: 07/15/2016 00:55:58:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.90568041 * 2075; EvalErrorPrediction = 0.53060241 * 2075; time = 0.6757s; samplesPerSecond = 3070.8
MPI Rank 0: 07/15/2016 00:55:58:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.87122351 * 2100; EvalErrorPrediction = 0.53476190 * 2100; time = 0.3524s; samplesPerSecond = 5959.9
MPI Rank 0: 07/15/2016 00:55:59:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.87378274 * 2099; EvalErrorPrediction = 0.52167699 * 2099; time = 0.3564s; samplesPerSecond = 5889.9
MPI Rank 0: 07/15/2016 00:55:59:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.87718204 * 2126; EvalErrorPrediction = 0.51599247 * 2126; time = 0.3594s; samplesPerSecond = 5915.6
MPI Rank 0: 07/15/2016 00:55:59:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.91848187 * 1397; EvalErrorPrediction = 0.53328561 * 1397; time = 0.2297s; samplesPerSecond = 6081.8
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.19 seconds , average latency = 0.06 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     2.03 seconds since last report (0.04 seconds on comm.); 11712 samples processed by 2 workers (9797 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 5.77k samplesPerSecond , throughputPerWorker = 2.88k samplesPerSecond
MPI Rank 0: 07/15/2016 00:55:59: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.93652806 * 20480; EvalErrorPrediction = 0.53950195 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-005; epochTime=3.5965s
MPI Rank 0: 07/15/2016 00:55:59: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn.4'
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:59: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 0: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 0: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 0 of 2, with 1 datapasses
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:55:59: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 0: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.02 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 1-th sync:     0.46 seconds since last report (0.04 seconds on comm.); 4373 samples processed by 2 workers (2117 by me);
MPI Rank 0: 		(model aggregation stats) 1-th sync: totalThroughput = 9.48k samplesPerSecond , throughputPerWorker = 4.74k samplesPerSecond
MPI Rank 0: 07/15/2016 00:56:00:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.92153209 * 2117; EvalErrorPrediction = 0.53471894 * 2117; time = 0.4547s; samplesPerSecond = 4655.5
MPI Rank 0: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.03-seconds latency this time; accumulated time on sync point = 0.05 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 2-th sync:     0.80 seconds since last report (0.04 seconds on comm.); 4374 samples processed by 2 workers (2101 by me);
MPI Rank 0: 		(model aggregation stats) 2-th sync: totalThroughput = 5.46k samplesPerSecond , throughputPerWorker = 2.73k samplesPerSecond
MPI Rank 0: 07/15/2016 00:56:01:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.83227227 * 2101; EvalErrorPrediction = 0.51070919 * 2101; time = 0.8001s; samplesPerSecond = 2625.9
MPI Rank 0: 07/15/2016 00:56:01:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.88671724 * 2087; EvalErrorPrediction = 0.51940585 * 2087; time = 0.6764s; samplesPerSecond = 3085.4
MPI Rank 0: 07/15/2016 00:56:02:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.81969992 * 2091; EvalErrorPrediction = 0.51171688 * 2091; time = 0.3517s; samplesPerSecond = 5945.3
MPI Rank 0: 07/15/2016 00:56:02:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.90356332 * 2145; EvalErrorPrediction = 0.51701632 * 2145; time = 0.3592s; samplesPerSecond = 5970.9
MPI Rank 0: 07/15/2016 00:56:02:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.84876609 * 2115; EvalErrorPrediction = 0.52104019 * 2115; time = 0.3526s; samplesPerSecond = 5999.0
MPI Rank 0: 07/15/2016 00:56:03:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.80928637 * 1422; EvalErrorPrediction = 0.51687764 * 1422; time = 0.2346s; samplesPerSecond = 6062.5
MPI Rank 0: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.05 seconds , average latency = 0.02 seconds
MPI Rank 0: 		(model aggregation stats) 3-th sync:     2.03 seconds since last report (0.04 seconds on comm.); 11733 samples processed by 2 workers (9860 by me);
MPI Rank 0: 		(model aggregation stats) 3-th sync: totalThroughput = 5.77k samplesPerSecond , throughputPerWorker = 2.88k samplesPerSecond
MPI Rank 0: 07/15/2016 00:56:03: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.86258051 * 20480; EvalErrorPrediction = 0.51679688 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-005; epochTime=3.30403s
MPI Rank 0: 07/15/2016 00:56:03: SGD: Saving checkpoint model 'C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn'
MPI Rank 0: 07/15/2016 00:56:03: CNTKCommandTrainEnd: speechTrain
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:56:03: Action "train" complete.
MPI Rank 0: 
MPI Rank 0: 07/15/2016 00:56:03: __COMPLETED__
MPI Rank 0: ~MPIWrapper
MPI Rank 1: 07/15/2016 00:55:37: Redirecting stderr to file C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/stderr_speechTrain.logrank1
MPI Rank 1: 07/15/2016 00:55:37: -------------------------------------------------------------------
MPI Rank 1: 07/15/2016 00:55:37: Build info: 
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:37: 		Built time: Jul 15 2016 00:48:16
MPI Rank 1: 07/15/2016 00:55:37: 		Last modified date: Fri Jul  8 02:53:05 2016
MPI Rank 1: 07/15/2016 00:55:37: 		Build type: Release
MPI Rank 1: 07/15/2016 00:55:37: 		Build target: GPU
MPI Rank 1: 07/15/2016 00:55:37: 		With 1bit-SGD: no
MPI Rank 1: 07/15/2016 00:55:37: 		Math lib: mkl
MPI Rank 1: 07/15/2016 00:55:37: 		CUDA_PATH: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5
MPI Rank 1: 07/15/2016 00:55:37: 		CUB_PATH: c:\src\cub-1.4.1
MPI Rank 1: 07/15/2016 00:55:37: 		CUDNN_PATH: c:\NVIDIA\cudnn-4.0\cuda
MPI Rank 1: 07/15/2016 00:55:37: 		Build Branch: HEAD
MPI Rank 1: 07/15/2016 00:55:37: 		Build SHA1: 500f0ccaa040821405404d7879c0e823003f1544
MPI Rank 1: 07/15/2016 00:55:37: 		Built by svcphil on Philly-Pool1
MPI Rank 1: 07/15/2016 00:55:37: 		Build Path: c:\jenkins\workspace\CNTK-Build-Windows\Source\CNTK\
MPI Rank 1: 07/15/2016 00:55:37: -------------------------------------------------------------------
MPI Rank 1: 07/15/2016 00:55:37: -------------------------------------------------------------------
MPI Rank 1: 07/15/2016 00:55:37: GPU info:
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:37: 		Device[0]: cores = 2496; computeCapability = 5.2; type = "Quadro M4000"; memory = 8090 MB
MPI Rank 1: 07/15/2016 00:55:37: -------------------------------------------------------------------
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:37: Running on cntk-muc00 at 2016/07/15 00:55:37
MPI Rank 1: 07/15/2016 00:55:37: Command line: 
MPI Rank 1: C:\jenkins\workspace\CNTK-Test-Windows-W1\x64\release\cntk.exe  configFile=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN/ParallelBM/cntk.cntk  currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu  DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data  ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN  OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu  DeviceId=-1  timestamping=true  numCPUThreads=2  precision=double  speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]  stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:37: >>>>>>>>>>>>>>>>>>>> RAW CONFIG (VARIABLES NOT RESOLVED) >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 07/15/2016 00:55:37: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = $DeviceId$
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "$RunDir$/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = $DeviceId$
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "$DataDir$/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "$DataDir$/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=2
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:37: <<<<<<<<<<<<<<<<<<<< RAW CONFIG (VARIABLES NOT RESOLVED)  <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:37: >>>>>>>>>>>>>>>>>>>> RAW CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: 07/15/2016 00:55:37: precision = "float"
MPI Rank 1: command = speechTrain
MPI Rank 1: deviceId = -1
MPI Rank 1: parallelTrain = true
MPI Rank 1: speechTrain = [
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ]
MPI Rank 1: currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: DeviceId=-1
MPI Rank 1: timestamping=true
MPI Rank 1: numCPUThreads=2
MPI Rank 1: precision=double
MPI Rank 1: speechTrain=[SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:37: <<<<<<<<<<<<<<<<<<<< RAW CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:37: >>>>>>>>>>>>>>>>>>>> PROCESSED CONFIG WITH ALL VARIABLES RESOLVED >>>>>>>>>>>>>>>>>>>>
MPI Rank 1: configparameters: cntk.cntk:command=speechTrain
MPI Rank 1: configparameters: cntk.cntk:ConfigDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\DNN
MPI Rank 1: configparameters: cntk.cntk:currentDirectory=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: configparameters: cntk.cntk:DataDir=C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data
MPI Rank 1: configparameters: cntk.cntk:deviceId=-1
MPI Rank 1: configparameters: cntk.cntk:numCPUThreads=2
MPI Rank 1: configparameters: cntk.cntk:OutputDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: configparameters: cntk.cntk:parallelTrain=true
MPI Rank 1: configparameters: cntk.cntk:precision=double
MPI Rank 1: configparameters: cntk.cntk:RunDir=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu
MPI Rank 1: configparameters: cntk.cntk:speechTrain=[
MPI Rank 1:     action = "train"
MPI Rank 1:     modelPath = "C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn"
MPI Rank 1:     deviceId = -1
MPI Rank 1:     traceLevel = 1
MPI Rank 1:     SimpleNetworkBuilder = [
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = "CrossEntropyWithSoftmax"
MPI Rank 1:         evalCriterion = "ErrorPrediction"
MPI Rank 1:         layerTypes = "Sigmoid"
MPI Rank 1:         initValueScale = 1.0
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         uniformInit = true
MPI Rank 1:         needPrior = true
MPI Rank 1:     ]
MPI Rank 1:     ExperimentalNetworkBuilder = [    // the same as above but with BS. Not active; activate by commenting out the SimpleNetworkBuilder entry above
MPI Rank 1:         layerSizes = 363:512:512:132
MPI Rank 1:         trainingCriterion = 'CE'
MPI Rank 1:         evalCriterion = 'Err'
MPI Rank 1:         applyMeanVarNorm = true
MPI Rank 1:         L = Length(layerSizes)-1    // number of model layers
MPI Rank 1:         features = Input(layerSizes[0], 1, tag='feature') ; labels = Input(layerSizes[Length(layerSizes)-1], 1, tag='label')
MPI Rank 1:         featNorm = if applyMeanVarNorm
MPI Rank 1:                    then MeanVarNorm(features)
MPI Rank 1:                    else features
MPI Rank 1:         layers[layer:1..L-1] = if layer > 1
MPI Rank 1:                                then SBFF(layers[layer-1].Eh, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:                                else SBFF(featNorm, layerSizes[layer], layerSizes[layer-1])
MPI Rank 1:         outLayer = BFF(layers[L-1].Eh, layerSizes[L], layerSizes[L-1])
MPI Rank 1:         outZ = outLayer.z        // + PastValue(layerSizes[L], 1, outLayer.z)
MPI Rank 1:         CE = if trainingCriterion == 'CE'
MPI Rank 1:              then CrossEntropyWithSoftmax(labels, outZ, tag='criterion')
MPI Rank 1:              else Fail('unknown trainingCriterion ' + trainingCriterion)
MPI Rank 1:         Err = if evalCriterion == 'Err' then
MPI Rank 1:               ErrorPrediction(labels, outZ, tag='evaluation')
MPI Rank 1:               else Fail('unknown evalCriterion ' + evalCriterion)
MPI Rank 1:         logPrior = LogPrior(labels)
MPI Rank 1:         // TODO: how to add a tag to an infix operation?
MPI Rank 1:         ScaledLogLikelihood = Minus (outZ, logPrior, tag='output')
MPI Rank 1:     ]
MPI Rank 1:     SGD = [
MPI Rank 1:         epochSize = 20480
MPI Rank 1:         minibatchSize = 64:256:1024
MPI Rank 1:         learningRatesPerMB = 1.0:0.5:0.1
MPI Rank 1:         numMBsToShowResult = 3
MPI Rank 1:         momentumPerMB = 0.9:0.656119
MPI Rank 1:         dropoutRate = 0.0
MPI Rank 1:         maxEpochs = 5
MPI Rank 1:         keepCheckPointFiles = true
MPI Rank 1:         clippingThresholdPerSample = 1#INF
MPI Rank 1:         ParallelTrain = [
MPI Rank 1:             parallelizationMethod = "BlockMomentumSGD"
MPI Rank 1:             distributedMBReading = true
MPI Rank 1:             syncPerfStats=1
MPI Rank 1:             BlockMomentumSGD = [
MPI Rank 1:                 blockSizePerWorker=2048
MPI Rank 1:                 resetSGDMomentum=true
MPI Rank 1:                 useNesterovMomentum=true
MPI Rank 1:             ]
MPI Rank 1:         ]
MPI Rank 1:         AutoAdjust = [
MPI Rank 1:             reduceLearnRateIfImproveLessThan = 0
MPI Rank 1:             loadBestModel = true
MPI Rank 1:             increaseLearnRateIfImproveMoreThan = 1000000000
MPI Rank 1:             learnRateDecreaseFactor = 0.5
MPI Rank 1:             learnRateIncreaseFactor = 1.382
MPI Rank 1:             autoAdjustLR = "adjustAfterEpoch"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1:     reader = [
MPI Rank 1:         readerType = "HTKMLFReader"
MPI Rank 1:         readMethod = "blockRandomize"
MPI Rank 1:         miniBatchMode = "partial"
MPI Rank 1:         randomize = "auto"
MPI Rank 1:         verbosity = 0
MPI Rank 1:         features = [
MPI Rank 1:             dim = 363
MPI Rank 1:             type = "real"
MPI Rank 1:             scpFile = "glob_0000.scp"
MPI Rank 1:         ]
MPI Rank 1:         labels = [
MPI Rank 1:             mlfFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf"
MPI Rank 1:             labelMappingFile = "C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list"
MPI Rank 1:             labelDim = 132
MPI Rank 1:             labelType = "category"
MPI Rank 1:         ]
MPI Rank 1:     ]
MPI Rank 1: ] [SGD=[ParallelTrain=[parallelizationStartEpoch=2]]]
MPI Rank 1: 
MPI Rank 1: configparameters: cntk.cntk:stderr=C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/stderr
MPI Rank 1: configparameters: cntk.cntk:timestamping=true
MPI Rank 1: 07/15/2016 00:55:37: <<<<<<<<<<<<<<<<<<<< PROCESSED CONFIG WITH ALL VARIABLES RESOLVED <<<<<<<<<<<<<<<<<<<<
MPI Rank 1: 07/15/2016 00:55:37: Commands: speechTrain
MPI Rank 1: 07/15/2016 00:55:37: Precision = "double"
MPI Rank 1: 07/15/2016 00:55:37: Using 2 CPU threads.
MPI Rank 1: 07/15/2016 00:55:37: CNTKModelPath: C:\Users\svcphil\AppData\Local\Temp\cntk-test-20160715005451.919244\Speech\DNN_ParallelBM@release_cpu/models/cntkSpeech.dnn
MPI Rank 1: 07/15/2016 00:55:37: CNTKCommandTrainInfo: speechTrain : 5
MPI Rank 1: 07/15/2016 00:55:37: CNTKCommandTrainInfo: CNTKNoMoreCommands_Total : 5
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:37: ##############################################################################
MPI Rank 1: 07/15/2016 00:55:37: #                                                                            #
MPI Rank 1: 07/15/2016 00:55:37: # Action "train"                                                             #
MPI Rank 1: 07/15/2016 00:55:37: #                                                                            #
MPI Rank 1: 07/15/2016 00:55:37: ##############################################################################
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:37: CNTKCommandTrainBegin: speechTrain
MPI Rank 1: SimpleNetworkBuilder Using CPU
MPI Rank 1: reading script file glob_0000.scp ... 946 entries
MPI Rank 1: total 132 state names in state list C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/state.list
MPI Rank 1: htkmlfreader: reading MLF file C:\jenkins\workspace\CNTK-Test-Windows-W1\Tests\EndToEndTests\Speech\Data/glob_0000.mlf ... total 948 entries
MPI Rank 1: ...............................................................................................feature set 0: 252508 frames in 946 out of 946 utterances
MPI Rank 1: label set 0: 129 classes
MPI Rank 1: minibatchutterancesource: 946 utterances grouped into 3 chunks, av. chunk size: 315.3 utterances, 84169.3 frames
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:38: Creating virgin network.
MPI Rank 1: 
MPI Rank 1: Post-processing network...
MPI Rank 1: 
MPI Rank 1: 7 roots:
MPI Rank 1: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax()
MPI Rank 1: 	EvalErrorPrediction = ErrorPrediction()
MPI Rank 1: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 	MeanOfFeatures = Mean()
MPI Rank 1: 	PosteriorProb = Softmax()
MPI Rank 1: 	Prior = Mean()
MPI Rank 1: 	ScaledLogLikelihood = Minus()
MPI Rank 1: 
MPI Rank 1: Validating network. 25 nodes to process in pass 1.
MPI Rank 1: 
MPI Rank 1: Validating --> labels = InputValue() :  -> [132 x *]
MPI Rank 1: Validating --> W2 = LearnableParameter() :  -> [132 x 512]
MPI Rank 1: Validating --> W1 = LearnableParameter() :  -> [512 x 512]
MPI Rank 1: Validating --> W0 = LearnableParameter() :  -> [512 x 363]
MPI Rank 1: Validating --> features = InputValue() :  -> [363 x *]
MPI Rank 1: Validating --> MeanOfFeatures = Mean (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> InvStdOfFeatures = InvStdDev (features) : [363 x *] -> [363]
MPI Rank 1: Validating --> MVNormalizedFeatures = PerDimMeanVarNormalization (features, MeanOfFeatures, InvStdOfFeatures) : [363 x *], [363], [363] -> [363 x *]
MPI Rank 1: Validating --> W0*features = Times (W0, MVNormalizedFeatures) : [512 x 363], [363 x *] -> [512 x *]
MPI Rank 1: Validating --> B0 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W0*features+B0 = Plus (W0*features, B0) : [512 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H1 = Sigmoid (W0*features+B0) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W1*H1 = Times (W1, H1) : [512 x 512], [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> B1 = LearnableParameter() :  -> [512 x 1]
MPI Rank 1: Validating --> W1*H1+B1 = Plus (W1*H1, B1) : [512 x 1 x *], [512 x 1] -> [512 x 1 x *]
MPI Rank 1: Validating --> H2 = Sigmoid (W1*H1+B1) : [512 x 1 x *] -> [512 x 1 x *]
MPI Rank 1: Validating --> W2*H1 = Times (W2, H2) : [132 x 512], [512 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> B2 = LearnableParameter() :  -> [132 x 1]
MPI Rank 1: Validating --> HLast = Plus (W2*H1, B2) : [132 x 1 x *], [132 x 1] -> [132 x 1 x *]
MPI Rank 1: Validating --> CrossEntropyWithSoftmax = CrossEntropyWithSoftmax (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> EvalErrorPrediction = ErrorPrediction (labels, HLast) : [132 x *], [132 x 1 x *] -> [1]
MPI Rank 1: Validating --> PosteriorProb = Softmax (HLast) : [132 x 1 x *] -> [132 x 1 x *]
MPI Rank 1: Validating --> Prior = Mean (labels) : [132 x *] -> [132]
MPI Rank 1: Validating --> LogOfPrior = Log (Prior) : [132] -> [132]
MPI Rank 1: Validating --> ScaledLogLikelihood = Minus (HLast, LogOfPrior) : [132 x 1 x *], [132] -> [132 x 1 x *]
MPI Rank 1: 
MPI Rank 1: Validating network. 17 nodes to process in pass 2.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Validating network, final pass.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 12 out of 25 nodes do not share the minibatch layout with the input data.
MPI Rank 1: 
MPI Rank 1: Post-processing network complete.
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:38: Created model with 25 nodes on CPU.
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:38: Training criterion node(s):
MPI Rank 1: 07/15/2016 00:55:38: 	CrossEntropyWithSoftmax = CrossEntropyWithSoftmax
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:38: Evaluation criterion node(s):
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:38: 	EvalErrorPrediction = ErrorPrediction
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: Allocating matrices for forward and/or backward propagation.
MPI Rank 1: 
MPI Rank 1: Memory Sharing Structure:
MPI Rank 1: 
MPI Rank 1: 0000000000000000: {[EvalErrorPrediction Gradient[1]] [InvStdOfFeatures Gradient[363]] [LogOfPrior Gradient[132]] [MVNormalizedFeatures Gradient[363 x *]] [MeanOfFeatures Gradient[363]] [PosteriorProb Gradient[132 x 1 x *]] [PosteriorProb Value[132 x 1 x *]] [Prior Gradient[132]] [ScaledLogLikelihood Gradient[132 x 1 x *]] [features Gradient[363 x *]] [labels Gradient[132 x *]] }
MPI Rank 1: 0000005A1D262010: {[W0 Value[512 x 363]] }
MPI Rank 1: 0000005A1D262150: {[B0 Value[512 x 1]] }
MPI Rank 1: 0000005A1D2621F0: {[MeanOfFeatures Value[363]] }
MPI Rank 1: 0000005A1D262510: {[InvStdOfFeatures Value[363]] }
MPI Rank 1: 0000005A1D2625B0: {[features Value[363 x *]] }
MPI Rank 1: 0000005A1D262C90: {[W1 Value[512 x 512]] }
MPI Rank 1: 0000005A25AB4410: {[EvalErrorPrediction Value[1]] }
MPI Rank 1: 0000005A25AB44B0: {[W1 Gradient[512 x 512]] [W1*H1+B1 Value[512 x 1 x *]] }
MPI Rank 1: 0000005A25AB4B90: {[ScaledLogLikelihood Value[132 x 1 x *]] }
MPI Rank 1: 0000005A25AB4C30: {[W0*features+B0 Gradient[512 x 1 x *]] [W1*H1 Value[512 x 1 x *]] }
MPI Rank 1: 0000005A25AB4D70: {[W2*H1 Gradient[132 x 1 x *]] }
MPI Rank 1: 0000005A25AB4EB0: {[HLast Value[132 x 1 x *]] [W2 Gradient[132 x 512]] }
MPI Rank 1: 0000005A25AB5270: {[B2 Gradient[132 x 1]] }
MPI Rank 1: 0000005A25AB56D0: {[W0*features Value[512 x *]] }
MPI Rank 1: 0000005A25AB5810: {[LogOfPrior Value[132]] }
MPI Rank 1: 0000005A25AB58B0: {[MVNormalizedFeatures Value[363 x *]] }
MPI Rank 1: 0000005A25AB5950: {[B0 Gradient[512 x 1]] [H1 Gradient[512 x 1 x *]] [W1*H1+B1 Gradient[512 x 1 x *]] [W2*H1 Value[132 x 1 x *]] }
MPI Rank 1: 0000005A25AB5A90: {[H1 Value[512 x 1 x *]] [W0*features Gradient[512 x *]] }
MPI Rank 1: 0000005A25AB5B30: {[W0 Gradient[512 x 363]] [W0*features+B0 Value[512 x 1 x *]] }
MPI Rank 1: 0000005A25AB5C70: {[CrossEntropyWithSoftmax Value[1]] }
MPI Rank 1: 0000005A25AB5D10: {[H2 Value[512 x 1 x *]] [W1*H1 Gradient[512 x 1 x *]] }
MPI Rank 1: 0000005A25AB5EF0: {[CrossEntropyWithSoftmax Gradient[1]] }
MPI Rank 1: 0000005A25AB5F90: {[B1 Gradient[512 x 1]] [H2 Gradient[512 x 1 x *]] [HLast Gradient[132 x 1 x *]] }
MPI Rank 1: 0000005A3A7C12A0: {[labels Value[132 x *]] }
MPI Rank 1: 0000005A3A7C1660: {[W2 Value[132 x 512]] }
MPI Rank 1: 0000005A3A7C1A20: {[B1 Value[512 x 1]] }
MPI Rank 1: 0000005A3A7C1C00: {[B2 Value[132 x 1]] }
MPI Rank 1: 0000005A3A7C1CA0: {[Prior Value[132]] }
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:38: Precomputing --> 3 PreCompute nodes found.
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:38: 	MeanOfFeatures = Mean()
MPI Rank 1: 07/15/2016 00:55:38: 	InvStdOfFeatures = InvStdDev()
MPI Rank 1: 07/15/2016 00:55:38: 	Prior = Mean()
MPI Rank 1: minibatchiterator: epoch 0: frames [0..252508] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: requiredata: determined feature kind as 33-dimensional 'USER' with frame shift 10.0 ms
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:40: Precomputing --> Completed.
MPI Rank 1: 
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:40: Starting Epoch 1: learning rate per sample = 0.015625  effective momentum = 0.900000  momentum as time constant = 607.4 samples
MPI Rank 1: minibatchiterator: epoch 0: frames [0..20480] (first utterance at frame 0), data subset 0 of 1, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:40: Starting minibatch loop.
MPI Rank 1: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[   1-   3, 0.94%]: CrossEntropyWithSoftmax = 4.52619519 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.1504s; samplesPerSecond = 1276.9
MPI Rank 1: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[   4-   6, 1.88%]: CrossEntropyWithSoftmax = 4.44869060 * 192; EvalErrorPrediction = 0.89062500 * 192; time = 0.1451s; samplesPerSecond = 1323.6
MPI Rank 1: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[   7-   9, 2.81%]: CrossEntropyWithSoftmax = 4.35402726 * 192; EvalErrorPrediction = 0.91145833 * 192; time = 0.1445s; samplesPerSecond = 1328.3
MPI Rank 1: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[  10-  12, 3.75%]: CrossEntropyWithSoftmax = 4.72002449 * 192; EvalErrorPrediction = 0.92187500 * 192; time = 0.1449s; samplesPerSecond = 1325.1
MPI Rank 1: 07/15/2016 00:55:40:  Epoch[ 1 of 5]-Minibatch[  13-  15, 4.69%]: CrossEntropyWithSoftmax = 4.46631494 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 0.1448s; samplesPerSecond = 1326.2
MPI Rank 1: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  16-  18, 5.63%]: CrossEntropyWithSoftmax = 4.19658095 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.1443s; samplesPerSecond = 1331.0
MPI Rank 1: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  19-  21, 6.56%]: CrossEntropyWithSoftmax = 3.95051698 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.1447s; samplesPerSecond = 1326.6
MPI Rank 1: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  22-  24, 7.50%]: CrossEntropyWithSoftmax = 4.09131145 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 0.1443s; samplesPerSecond = 1330.7
MPI Rank 1: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  25-  27, 8.44%]: CrossEntropyWithSoftmax = 3.92589621 * 192; EvalErrorPrediction = 0.92708333 * 192; time = 0.1445s; samplesPerSecond = 1328.7
MPI Rank 1: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  28-  30, 9.38%]: CrossEntropyWithSoftmax = 3.97094022 * 192; EvalErrorPrediction = 0.91666667 * 192; time = 0.1461s; samplesPerSecond = 1314.1
MPI Rank 1: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  31-  33, 10.31%]: CrossEntropyWithSoftmax = 3.90748019 * 192; EvalErrorPrediction = 0.83854167 * 192; time = 0.1182s; samplesPerSecond = 1623.7
MPI Rank 1: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  34-  36, 11.25%]: CrossEntropyWithSoftmax = 3.84060577 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0679s; samplesPerSecond = 2826.2
MPI Rank 1: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  37-  39, 12.19%]: CrossEntropyWithSoftmax = 3.74439442 * 192; EvalErrorPrediction = 0.85937500 * 192; time = 0.0706s; samplesPerSecond = 2720.7
MPI Rank 1: 07/15/2016 00:55:41:  Epoch[ 1 of 5]-Minibatch[  40-  42, 13.13%]: CrossEntropyWithSoftmax = 3.73463224 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0752s; samplesPerSecond = 2551.7
MPI Rank 1: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  43-  45, 14.06%]: CrossEntropyWithSoftmax = 3.80432021 * 192; EvalErrorPrediction = 0.88541667 * 192; time = 0.0742s; samplesPerSecond = 2586.9
MPI Rank 1: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  46-  48, 15.00%]: CrossEntropyWithSoftmax = 3.62651803 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0757s; samplesPerSecond = 2537.3
MPI Rank 1: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  49-  51, 15.94%]: CrossEntropyWithSoftmax = 3.86269477 * 192; EvalErrorPrediction = 0.90625000 * 192; time = 0.0752s; samplesPerSecond = 2553.3
MPI Rank 1: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  52-  54, 16.88%]: CrossEntropyWithSoftmax = 3.68769031 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0756s; samplesPerSecond = 2540.8
MPI Rank 1: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  55-  57, 17.81%]: CrossEntropyWithSoftmax = 3.79565902 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0751s; samplesPerSecond = 2558.0
MPI Rank 1: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  58-  60, 18.75%]: CrossEntropyWithSoftmax = 3.58570247 * 192; EvalErrorPrediction = 0.84375000 * 192; time = 0.0749s; samplesPerSecond = 2562.3
MPI Rank 1: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  61-  63, 19.69%]: CrossEntropyWithSoftmax = 3.85954183 * 192; EvalErrorPrediction = 0.86458333 * 192; time = 0.0754s; samplesPerSecond = 2547.6
MPI Rank 1: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  64-  66, 20.63%]: CrossEntropyWithSoftmax = 3.74183896 * 192; EvalErrorPrediction = 0.89583333 * 192; time = 0.0759s; samplesPerSecond = 2530.8
MPI Rank 1: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  67-  69, 21.56%]: CrossEntropyWithSoftmax = 3.54735982 * 192; EvalErrorPrediction = 0.80729167 * 192; time = 0.0766s; samplesPerSecond = 2507.3
MPI Rank 1: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  70-  72, 22.50%]: CrossEntropyWithSoftmax = 3.70633864 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0761s; samplesPerSecond = 2522.3
MPI Rank 1: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  73-  75, 23.44%]: CrossEntropyWithSoftmax = 3.58354117 * 192; EvalErrorPrediction = 0.83333333 * 192; time = 0.0753s; samplesPerSecond = 2551.3
MPI Rank 1: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  76-  78, 24.38%]: CrossEntropyWithSoftmax = 3.36542230 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0753s; samplesPerSecond = 2549.6
MPI Rank 1: 07/15/2016 00:55:42:  Epoch[ 1 of 5]-Minibatch[  79-  81, 25.31%]: CrossEntropyWithSoftmax = 3.50380193 * 192; EvalErrorPrediction = 0.79166667 * 192; time = 0.0754s; samplesPerSecond = 2546.7
MPI Rank 1: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[  82-  84, 26.25%]: CrossEntropyWithSoftmax = 3.37334568 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0752s; samplesPerSecond = 2554.5
MPI Rank 1: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[  85-  87, 27.19%]: CrossEntropyWithSoftmax = 3.27012708 * 192; EvalErrorPrediction = 0.81250000 * 192; time = 0.0757s; samplesPerSecond = 2537.4
MPI Rank 1: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[  88-  90, 28.13%]: CrossEntropyWithSoftmax = 3.54250582 * 192; EvalErrorPrediction = 0.85416667 * 192; time = 0.0751s; samplesPerSecond = 2555.9
MPI Rank 1: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[  91-  93, 29.06%]: CrossEntropyWithSoftmax = 3.43886428 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0751s; samplesPerSecond = 2556.5
MPI Rank 1: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[  94-  96, 30.00%]: CrossEntropyWithSoftmax = 3.44146233 * 192; EvalErrorPrediction = 0.79687500 * 192; time = 0.0755s; samplesPerSecond = 2541.5
MPI Rank 1: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[  97-  99, 30.94%]: CrossEntropyWithSoftmax = 3.45187987 * 192; EvalErrorPrediction = 0.82812500 * 192; time = 0.0752s; samplesPerSecond = 2553.3
MPI Rank 1: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 100- 102, 31.87%]: CrossEntropyWithSoftmax = 3.39578376 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0751s; samplesPerSecond = 2555.1
MPI Rank 1: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 103- 105, 32.81%]: CrossEntropyWithSoftmax = 3.46890360 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0757s; samplesPerSecond = 2534.8
MPI Rank 1: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 106- 108, 33.75%]: CrossEntropyWithSoftmax = 3.24849404 * 192; EvalErrorPrediction = 0.82291667 * 192; time = 0.0753s; samplesPerSecond = 2550.8
MPI Rank 1: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 109- 111, 34.69%]: CrossEntropyWithSoftmax = 3.05262393 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0752s; samplesPerSecond = 2552.5
MPI Rank 1: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 112- 114, 35.63%]: CrossEntropyWithSoftmax = 2.98820629 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0752s; samplesPerSecond = 2553.1
MPI Rank 1: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 115- 117, 36.56%]: CrossEntropyWithSoftmax = 3.28196504 * 192; EvalErrorPrediction = 0.77083333 * 192; time = 0.0749s; samplesPerSecond = 2562.2
MPI Rank 1: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 118- 120, 37.50%]: CrossEntropyWithSoftmax = 3.08130382 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0754s; samplesPerSecond = 2546.2
MPI Rank 1: 07/15/2016 00:55:43:  Epoch[ 1 of 5]-Minibatch[ 121- 123, 38.44%]: CrossEntropyWithSoftmax = 3.11800935 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0749s; samplesPerSecond = 2561.8
MPI Rank 1: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 124- 126, 39.38%]: CrossEntropyWithSoftmax = 3.08261207 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0751s; samplesPerSecond = 2556.4
MPI Rank 1: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 127- 129, 40.31%]: CrossEntropyWithSoftmax = 3.14629426 * 192; EvalErrorPrediction = 0.74479167 * 192; time = 0.0752s; samplesPerSecond = 2552.8
MPI Rank 1: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 130- 132, 41.25%]: CrossEntropyWithSoftmax = 3.05300475 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0753s; samplesPerSecond = 2549.3
MPI Rank 1: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 133- 135, 42.19%]: CrossEntropyWithSoftmax = 2.93310751 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0752s; samplesPerSecond = 2554.3
MPI Rank 1: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 136- 138, 43.13%]: CrossEntropyWithSoftmax = 3.06987053 * 192; EvalErrorPrediction = 0.70833333 * 192; time = 0.0753s; samplesPerSecond = 2551.4
MPI Rank 1: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 139- 141, 44.06%]: CrossEntropyWithSoftmax = 2.99158632 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0749s; samplesPerSecond = 2561.7
MPI Rank 1: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 142- 144, 45.00%]: CrossEntropyWithSoftmax = 2.92552128 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0752s; samplesPerSecond = 2554.8
MPI Rank 1: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 145- 147, 45.94%]: CrossEntropyWithSoftmax = 2.89043932 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0759s; samplesPerSecond = 2530.2
MPI Rank 1: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 148- 150, 46.88%]: CrossEntropyWithSoftmax = 3.27732055 * 192; EvalErrorPrediction = 0.78125000 * 192; time = 0.0752s; samplesPerSecond = 2554.0
MPI Rank 1: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 151- 153, 47.81%]: CrossEntropyWithSoftmax = 2.96695331 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0749s; samplesPerSecond = 2563.8
MPI Rank 1: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 154- 156, 48.75%]: CrossEntropyWithSoftmax = 2.97293322 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0752s; samplesPerSecond = 2553.2
MPI Rank 1: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 157- 159, 49.69%]: CrossEntropyWithSoftmax = 3.07734181 * 192; EvalErrorPrediction = 0.77604167 * 192; time = 0.0750s; samplesPerSecond = 2560.8
MPI Rank 1: 07/15/2016 00:55:44:  Epoch[ 1 of 5]-Minibatch[ 160- 162, 50.63%]: CrossEntropyWithSoftmax = 3.07365736 * 192; EvalErrorPrediction = 0.72916667 * 192; time = 0.0671s; samplesPerSecond = 2861.8
MPI Rank 1: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 163- 165, 51.56%]: CrossEntropyWithSoftmax = 3.06739608 * 192; EvalErrorPrediction = 0.73437500 * 192; time = 0.0703s; samplesPerSecond = 2730.0
MPI Rank 1: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 166- 168, 52.50%]: CrossEntropyWithSoftmax = 2.89333305 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0749s; samplesPerSecond = 2564.3
MPI Rank 1: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 169- 171, 53.44%]: CrossEntropyWithSoftmax = 2.82344057 * 192; EvalErrorPrediction = 0.75000000 * 192; time = 0.0755s; samplesPerSecond = 2542.1
MPI Rank 1: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 172- 174, 54.37%]: CrossEntropyWithSoftmax = 2.85573927 * 192; EvalErrorPrediction = 0.75520833 * 192; time = 0.0752s; samplesPerSecond = 2553.0
MPI Rank 1: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 175- 177, 55.31%]: CrossEntropyWithSoftmax = 2.75028679 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0757s; samplesPerSecond = 2536.0
MPI Rank 1: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 178- 180, 56.25%]: CrossEntropyWithSoftmax = 2.61737750 * 192; EvalErrorPrediction = 0.64062500 * 192; time = 0.0755s; samplesPerSecond = 2542.5
MPI Rank 1: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 181- 183, 57.19%]: CrossEntropyWithSoftmax = 3.11044335 * 192; EvalErrorPrediction = 0.76041667 * 192; time = 0.0750s; samplesPerSecond = 2558.7
MPI Rank 1: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 184- 186, 58.13%]: CrossEntropyWithSoftmax = 2.55191248 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0665s; samplesPerSecond = 2886.2
MPI Rank 1: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 187- 189, 59.06%]: CrossEntropyWithSoftmax = 2.71537562 * 192; EvalErrorPrediction = 0.68750000 * 192; time = 0.0693s; samplesPerSecond = 2770.8
MPI Rank 1: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 190- 192, 60.00%]: CrossEntropyWithSoftmax = 2.78186640 * 192; EvalErrorPrediction = 0.71354167 * 192; time = 0.0760s; samplesPerSecond = 2525.2
MPI Rank 1: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 193- 195, 60.94%]: CrossEntropyWithSoftmax = 2.78744982 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0751s; samplesPerSecond = 2557.3
MPI Rank 1: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 196- 198, 61.88%]: CrossEntropyWithSoftmax = 2.61882367 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0753s; samplesPerSecond = 2549.5
MPI Rank 1: 07/15/2016 00:55:45:  Epoch[ 1 of 5]-Minibatch[ 199- 201, 62.81%]: CrossEntropyWithSoftmax = 2.42551903 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0754s; samplesPerSecond = 2545.3
MPI Rank 1: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 202- 204, 63.75%]: CrossEntropyWithSoftmax = 2.65008144 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0755s; samplesPerSecond = 2544.3
MPI Rank 1: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 205- 207, 64.69%]: CrossEntropyWithSoftmax = 2.64561568 * 192; EvalErrorPrediction = 0.67187500 * 192; time = 0.0753s; samplesPerSecond = 2550.7
MPI Rank 1: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 208- 210, 65.63%]: CrossEntropyWithSoftmax = 2.50331821 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0748s; samplesPerSecond = 2565.4
MPI Rank 1: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 211- 213, 66.56%]: CrossEntropyWithSoftmax = 2.76779766 * 192; EvalErrorPrediction = 0.70312500 * 192; time = 0.0751s; samplesPerSecond = 2557.2
MPI Rank 1: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 214- 216, 67.50%]: CrossEntropyWithSoftmax = 2.57439782 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0748s; samplesPerSecond = 2568.4
MPI Rank 1: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 217- 219, 68.44%]: CrossEntropyWithSoftmax = 2.59506816 * 192; EvalErrorPrediction = 0.69270833 * 192; time = 0.0749s; samplesPerSecond = 2562.4
MPI Rank 1: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 220- 222, 69.38%]: CrossEntropyWithSoftmax = 2.79748320 * 192; EvalErrorPrediction = 0.73958333 * 192; time = 0.0753s; samplesPerSecond = 2550.7
MPI Rank 1: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 223- 225, 70.31%]: CrossEntropyWithSoftmax = 2.42389357 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0755s; samplesPerSecond = 2541.9
MPI Rank 1: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 226- 228, 71.25%]: CrossEntropyWithSoftmax = 2.52120106 * 192; EvalErrorPrediction = 0.65625000 * 192; time = 0.0748s; samplesPerSecond = 2565.2
MPI Rank 1: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 229- 231, 72.19%]: CrossEntropyWithSoftmax = 2.45625555 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0757s; samplesPerSecond = 2536.8
MPI Rank 1: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 232- 234, 73.13%]: CrossEntropyWithSoftmax = 2.54008135 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0621s; samplesPerSecond = 3090.7
MPI Rank 1: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 235- 237, 74.06%]: CrossEntropyWithSoftmax = 2.61808382 * 192; EvalErrorPrediction = 0.69791667 * 192; time = 0.0659s; samplesPerSecond = 2914.3
MPI Rank 1: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 238- 240, 75.00%]: CrossEntropyWithSoftmax = 2.56966171 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0749s; samplesPerSecond = 2562.7
MPI Rank 1: 07/15/2016 00:55:46:  Epoch[ 1 of 5]-Minibatch[ 241- 243, 75.94%]: CrossEntropyWithSoftmax = 2.52902238 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0750s; samplesPerSecond = 2561.2
MPI Rank 1: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 244- 246, 76.88%]: CrossEntropyWithSoftmax = 2.46993069 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0752s; samplesPerSecond = 2552.5
MPI Rank 1: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 247- 249, 77.81%]: CrossEntropyWithSoftmax = 2.58191721 * 192; EvalErrorPrediction = 0.66145833 * 192; time = 0.0752s; samplesPerSecond = 2554.1
MPI Rank 1: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 250- 252, 78.75%]: CrossEntropyWithSoftmax = 2.33294393 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0750s; samplesPerSecond = 2558.9
MPI Rank 1: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 253- 255, 79.69%]: CrossEntropyWithSoftmax = 2.53151511 * 192; EvalErrorPrediction = 0.64583333 * 192; time = 0.0752s; samplesPerSecond = 2552.3
MPI Rank 1: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 256- 258, 80.63%]: CrossEntropyWithSoftmax = 2.16605995 * 192; EvalErrorPrediction = 0.54166667 * 192; time = 0.0755s; samplesPerSecond = 2543.3
MPI Rank 1: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 259- 261, 81.56%]: CrossEntropyWithSoftmax = 2.30564389 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0753s; samplesPerSecond = 2549.5
MPI Rank 1: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 262- 264, 82.50%]: CrossEntropyWithSoftmax = 2.34726392 * 192; EvalErrorPrediction = 0.63020833 * 192; time = 0.0752s; samplesPerSecond = 2554.3
MPI Rank 1: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 265- 267, 83.44%]: CrossEntropyWithSoftmax = 2.37504577 * 192; EvalErrorPrediction = 0.61979167 * 192; time = 0.0757s; samplesPerSecond = 2537.3
MPI Rank 1: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 268- 270, 84.38%]: CrossEntropyWithSoftmax = 2.28547431 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.0753s; samplesPerSecond = 2548.5
MPI Rank 1: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 271- 273, 85.31%]: CrossEntropyWithSoftmax = 2.40907425 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0739s; samplesPerSecond = 2597.3
MPI Rank 1: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 274- 276, 86.25%]: CrossEntropyWithSoftmax = 2.45676229 * 192; EvalErrorPrediction = 0.67708333 * 192; time = 0.0663s; samplesPerSecond = 2893.9
MPI Rank 1: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 277- 279, 87.19%]: CrossEntropyWithSoftmax = 2.33149384 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0710s; samplesPerSecond = 2704.3
MPI Rank 1: 07/15/2016 00:55:47:  Epoch[ 1 of 5]-Minibatch[ 280- 282, 88.13%]: CrossEntropyWithSoftmax = 2.33979511 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.0750s; samplesPerSecond = 2558.6
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 283- 285, 89.06%]: CrossEntropyWithSoftmax = 2.24386280 * 192; EvalErrorPrediction = 0.57812500 * 192; time = 0.0752s; samplesPerSecond = 2554.6
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 286- 288, 90.00%]: CrossEntropyWithSoftmax = 2.14332823 * 192; EvalErrorPrediction = 0.55729167 * 192; time = 0.0751s; samplesPerSecond = 2555.4
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 289- 291, 90.94%]: CrossEntropyWithSoftmax = 2.30478756 * 192; EvalErrorPrediction = 0.61458333 * 192; time = 0.0751s; samplesPerSecond = 2555.4
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 292- 294, 91.88%]: CrossEntropyWithSoftmax = 2.44992118 * 192; EvalErrorPrediction = 0.58854167 * 192; time = 0.0749s; samplesPerSecond = 2564.4
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 295- 297, 92.81%]: CrossEntropyWithSoftmax = 2.23812771 * 192; EvalErrorPrediction = 0.62500000 * 192; time = 0.0517s; samplesPerSecond = 3711.6
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 298- 300, 93.75%]: CrossEntropyWithSoftmax = 2.15788726 * 192; EvalErrorPrediction = 0.59375000 * 192; time = 0.0398s; samplesPerSecond = 4818.1
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 301- 303, 94.69%]: CrossEntropyWithSoftmax = 2.31167683 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0395s; samplesPerSecond = 4856.5
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 304- 306, 95.63%]: CrossEntropyWithSoftmax = 2.18184534 * 192; EvalErrorPrediction = 0.55729167 * 192; time = 0.0390s; samplesPerSecond = 4928.3
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 307- 309, 96.56%]: CrossEntropyWithSoftmax = 2.18158668 * 192; EvalErrorPrediction = 0.56250000 * 192; time = 0.0390s; samplesPerSecond = 4929.0
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 310- 312, 97.50%]: CrossEntropyWithSoftmax = 2.25920101 * 192; EvalErrorPrediction = 0.60937500 * 192; time = 0.0389s; samplesPerSecond = 4931.8
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 313- 315, 98.44%]: CrossEntropyWithSoftmax = 2.08901028 * 192; EvalErrorPrediction = 0.59895833 * 192; time = 0.0389s; samplesPerSecond = 4930.4
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 1 of 5]-Minibatch[ 316- 318, 99.38%]: CrossEntropyWithSoftmax = 2.54781841 * 192; EvalErrorPrediction = 0.65104167 * 192; time = 0.0392s; samplesPerSecond = 4901.6
MPI Rank 1: 07/15/2016 00:55:48: Finished Epoch[ 1 of 5]: [Training] CrossEntropyWithSoftmax = 3.02730057 * 20480; EvalErrorPrediction = 0.72924805 * 20480; totalSamplesSeen = 20480; learningRatePerSample = 0.015625; epochTime=8.43368s
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:48: Starting Epoch 2: learning rate per sample = 0.001953  effective momentum = 0.656119  momentum as time constant = 607.5 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 1: frames [20480..40960] (first utterance at frame 20480), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:48: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 2 of 5]-Minibatch[   1-   3, 3.75%]: CrossEntropyWithSoftmax = 2.10867145 * 226; EvalErrorPrediction = 0.56637168 * 226; time = 0.0801s; samplesPerSecond = 2822.1
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 2 of 5]-Minibatch[   4-   6, 7.50%]: CrossEntropyWithSoftmax = 2.28093762 * 237; EvalErrorPrediction = 0.69198312 * 237; time = 0.0839s; samplesPerSecond = 2824.1
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 2 of 5]-Minibatch[   7-   9, 11.25%]: CrossEntropyWithSoftmax = 2.34781161 * 215; EvalErrorPrediction = 0.64651163 * 215; time = 0.0762s; samplesPerSecond = 2819.7
MPI Rank 1: 07/15/2016 00:55:48:  Epoch[ 2 of 5]-Minibatch[  10-  12, 15.00%]: CrossEntropyWithSoftmax = 2.07702406 * 222; EvalErrorPrediction = 0.55855856 * 222; time = 0.0798s; samplesPerSecond = 2783.0
MPI Rank 1: 07/15/2016 00:55:49:  Epoch[ 2 of 5]-Minibatch[  13-  15, 18.75%]: CrossEntropyWithSoftmax = 2.37388283 * 247; EvalErrorPrediction = 0.64777328 * 247; time = 0.0866s; samplesPerSecond = 2853.3
MPI Rank 1: 07/15/2016 00:55:49:  Epoch[ 2 of 5]-Minibatch[  16-  18, 22.50%]: CrossEntropyWithSoftmax = 2.18646537 * 223; EvalErrorPrediction = 0.61434978 * 223; time = 0.0791s; samplesPerSecond = 2820.2
MPI Rank 1: 07/15/2016 00:55:49:  Epoch[ 2 of 5]-Minibatch[  19-  21, 26.25%]: CrossEntropyWithSoftmax = 2.05602232 * 215; EvalErrorPrediction = 0.53488372 * 215; time = 0.0771s; samplesPerSecond = 2790.0
MPI Rank 1: 07/15/2016 00:55:49:  Epoch[ 2 of 5]-Minibatch[  22-  24, 30.00%]: CrossEntropyWithSoftmax = 2.04301707 * 205; EvalErrorPrediction = 0.52682927 * 205; time = 0.0750s; samplesPerSecond = 2734.2
MPI Rank 1: 07/15/2016 00:55:49:  Epoch[ 2 of 5]-Minibatch[  25-  27, 33.75%]: CrossEntropyWithSoftmax = 2.10540844 * 211; EvalErrorPrediction = 0.53080569 * 211; time = 0.0758s; samplesPerSecond = 2784.4
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.78 seconds since last report (0.01 seconds on comm.); 4236 samples processed by 2 workers (2064 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 5.45k samplesPerSecond , throughputPerWorker = 2.73k samplesPerSecond
MPI Rank 1: 07/15/2016 00:55:49:  Epoch[ 2 of 5]-Minibatch[  28-  30, 37.50%]: CrossEntropyWithSoftmax = 2.18362562 * 220; EvalErrorPrediction = 0.59090909 * 220; time = 0.1409s; samplesPerSecond = 1560.9
MPI Rank 1: 07/15/2016 00:55:49:  Epoch[ 2 of 5]-Minibatch[  31-  33, 41.25%]: CrossEntropyWithSoftmax = 2.00531371 * 224; EvalErrorPrediction = 0.52678571 * 224; time = 0.1211s; samplesPerSecond = 1850.4
MPI Rank 1: 07/15/2016 00:55:49:  Epoch[ 2 of 5]-Minibatch[  34-  36, 45.00%]: CrossEntropyWithSoftmax = 2.00101335 * 217; EvalErrorPrediction = 0.54377880 * 217; time = 0.1294s; samplesPerSecond = 1676.5
MPI Rank 1: 07/15/2016 00:55:49:  Epoch[ 2 of 5]-Minibatch[  37-  39, 48.75%]: CrossEntropyWithSoftmax = 2.09581479 * 221; EvalErrorPrediction = 0.55203620 * 221; time = 0.1145s; samplesPerSecond = 1930.3
MPI Rank 1: 07/15/2016 00:55:50:  Epoch[ 2 of 5]-Minibatch[  40-  42, 52.50%]: CrossEntropyWithSoftmax = 2.10785168 * 240; EvalErrorPrediction = 0.54583333 * 240; time = 0.1441s; samplesPerSecond = 1665.8
MPI Rank 1: 07/15/2016 00:55:50:  Epoch[ 2 of 5]-Minibatch[  43-  45, 56.25%]: CrossEntropyWithSoftmax = 2.07199720 * 204; EvalErrorPrediction = 0.53921569 * 204; time = 0.1090s; samplesPerSecond = 1871.4
MPI Rank 1: 07/15/2016 00:55:50:  Epoch[ 2 of 5]-Minibatch[  46-  48, 60.00%]: CrossEntropyWithSoftmax = 2.09900125 * 240; EvalErrorPrediction = 0.51666667 * 240; time = 0.1434s; samplesPerSecond = 1673.1
MPI Rank 1: 07/15/2016 00:55:50:  Epoch[ 2 of 5]-Minibatch[  49-  51, 63.75%]: CrossEntropyWithSoftmax = 2.11459550 * 226; EvalErrorPrediction = 0.53982301 * 226; time = 0.1165s; samplesPerSecond = 1940.7
MPI Rank 1: 07/15/2016 00:55:50:  Epoch[ 2 of 5]-Minibatch[  52-  54, 67.50%]: CrossEntropyWithSoftmax = 1.92453780 * 214; EvalErrorPrediction = 0.51869159 * 214; time = 0.1055s; samplesPerSecond = 2028.7
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     1.19 seconds since last report (0.04 seconds on comm.); 4285 samples processed by 2 workers (2103 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 3.61k samplesPerSecond , throughputPerWorker = 1.80k samplesPerSecond
MPI Rank 1: 07/15/2016 00:55:50:  Epoch[ 2 of 5]-Minibatch[  55-  57, 71.25%]: CrossEntropyWithSoftmax = 1.97048238 * 246; EvalErrorPrediction = 0.48780488 * 246; time = 0.1370s; samplesPerSecond = 1795.5
MPI Rank 1: 07/15/2016 00:55:50:  Epoch[ 2 of 5]-Minibatch[  58-  60, 75.00%]: CrossEntropyWithSoftmax = 1.99754461 * 242; EvalErrorPrediction = 0.54958678 * 242; time = 0.0838s; samplesPerSecond = 2888.8
MPI Rank 1: 07/15/2016 00:55:50:  Epoch[ 2 of 5]-Minibatch[  61-  63, 78.75%]: CrossEntropyWithSoftmax = 2.00017156 * 222; EvalErrorPrediction = 0.55405405 * 222; time = 0.0776s; samplesPerSecond = 2860.2
MPI Rank 1: 07/15/2016 00:55:50:  Epoch[ 2 of 5]-Minibatch[  64-  66, 82.50%]: CrossEntropyWithSoftmax = 2.11571877 * 225; EvalErrorPrediction = 0.56888889 * 225; time = 0.0849s; samplesPerSecond = 2648.9
MPI Rank 1: 07/15/2016 00:55:50:  Epoch[ 2 of 5]-Minibatch[  67-  69, 86.25%]: CrossEntropyWithSoftmax = 1.97753740 * 247; EvalErrorPrediction = 0.55060729 * 247; time = 0.0837s; samplesPerSecond = 2952.6
MPI Rank 1: 07/15/2016 00:55:51:  Epoch[ 2 of 5]-Minibatch[  70-  72, 90.00%]: CrossEntropyWithSoftmax = 2.09391657 * 197; EvalErrorPrediction = 0.52791878 * 197; time = 0.0726s; samplesPerSecond = 2713.8
MPI Rank 1: 07/15/2016 00:55:51:  Epoch[ 2 of 5]-Minibatch[  73-  75, 93.75%]: CrossEntropyWithSoftmax = 2.11446556 * 224; EvalErrorPrediction = 0.56696429 * 224; time = 0.0805s; samplesPerSecond = 2781.5
MPI Rank 1: 07/15/2016 00:55:51:  Epoch[ 2 of 5]-Minibatch[  76-  78, 97.50%]: CrossEntropyWithSoftmax = 2.00727909 * 214; EvalErrorPrediction = 0.55607477 * 214; time = 0.0771s; samplesPerSecond = 2776.6
MPI Rank 1: 07/15/2016 00:55:51:  Epoch[ 2 of 5]-Minibatch[  79-  81, 101.25%]: CrossEntropyWithSoftmax = 2.19790657 * 132; EvalErrorPrediction = 0.58333333 * 132; time = 0.0521s; samplesPerSecond = 2534.5
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.13-seconds latency this time; accumulated time on sync point = 0.13 seconds , average latency = 0.04 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     2.21 seconds since last report (1.43 seconds on comm.); 11959 samples processed by 2 workers (1789 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 5.40k samplesPerSecond , throughputPerWorker = 2.70k samplesPerSecond
MPI Rank 1: 07/15/2016 00:55:52: Finished Epoch[ 2 of 5]: [Training] CrossEntropyWithSoftmax = 2.03834499 * 20480; EvalErrorPrediction = 0.55161133 * 20480; totalSamplesSeen = 40960; learningRatePerSample = 0.001953125; epochTime=4.18492s
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:53: Starting Epoch 3: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 2: frames [40960..61440] (first utterance at frame 40960), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:53: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/15/2016 00:55:53:  Epoch[ 3 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.96129007 * 945; EvalErrorPrediction = 0.54391534 * 945; time = 0.1748s; samplesPerSecond = 5405.9
MPI Rank 1: 07/15/2016 00:55:53:  Epoch[ 3 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.90975691 * 884; EvalErrorPrediction = 0.53506787 * 884; time = 0.1571s; samplesPerSecond = 5626.2
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.02-seconds latency this time; accumulated time on sync point = 0.02 seconds , average latency = 0.02 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.43 seconds since last report (0.01 seconds on comm.); 4268 samples processed by 2 workers (2141 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 10.01k samplesPerSecond , throughputPerWorker = 5.01k samplesPerSecond
MPI Rank 1: 07/15/2016 00:55:53:  Epoch[ 3 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.97226015 * 901; EvalErrorPrediction = 0.55715871 * 901; time = 0.1934s; samplesPerSecond = 4659.8
MPI Rank 1: 07/15/2016 00:55:53:  Epoch[ 3 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.94069842 * 935; EvalErrorPrediction = 0.54866310 * 935; time = 0.1728s; samplesPerSecond = 5410.4
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.24-seconds latency this time; accumulated time on sync point = 0.26 seconds , average latency = 0.13 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.65 seconds since last report (0.00 seconds on comm.); 4329 samples processed by 2 workers (2141 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 6.67k samplesPerSecond , throughputPerWorker = 3.33k samplesPerSecond
MPI Rank 1: 07/15/2016 00:55:54:  Epoch[ 3 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 2.01171443 * 947; EvalErrorPrediction = 0.54699050 * 947; time = 0.4332s; samplesPerSecond = 2185.9
MPI Rank 1: 07/15/2016 00:55:54:  Epoch[ 3 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.98676540 * 965; EvalErrorPrediction = 0.55233161 * 965; time = 0.1790s; samplesPerSecond = 5389.8
MPI Rank 1: 07/15/2016 00:55:54:  Epoch[ 3 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.97277178 * 641; EvalErrorPrediction = 0.56474259 * 641; time = 0.1119s; samplesPerSecond = 5727.4
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.24-seconds latency this time; accumulated time on sync point = 0.50 seconds , average latency = 0.17 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     1.95 seconds since last report (1.34 seconds on comm.); 11883 samples processed by 2 workers (1936 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 6.09k samplesPerSecond , throughputPerWorker = 3.04k samplesPerSecond
MPI Rank 1: 07/15/2016 00:55:56: Finished Epoch[ 3 of 5]: [Training] CrossEntropyWithSoftmax = 1.94470793 * 20480; EvalErrorPrediction = 0.54301758 * 20480; totalSamplesSeen = 61440; learningRatePerSample = 9.7656251e-005; epochTime=3.03391s
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:56: Starting Epoch 4: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 3: frames [61440..81920] (first utterance at frame 61440), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:56: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/15/2016 00:55:56:  Epoch[ 4 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.96478319 * 944; EvalErrorPrediction = 0.54872881 * 944; time = 0.1791s; samplesPerSecond = 5271.5
MPI Rank 1: 07/15/2016 00:55:56:  Epoch[ 4 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 2.02387000 * 982; EvalErrorPrediction = 0.55498982 * 982; time = 0.1921s; samplesPerSecond = 5111.9
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.49 seconds since last report (0.04 seconds on comm.); 4392 samples processed by 2 workers (2264 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 8.91k samplesPerSecond , throughputPerWorker = 4.45k samplesPerSecond
MPI Rank 1: 07/15/2016 00:55:57:  Epoch[ 4 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 2.01402831 * 997; EvalErrorPrediction = 0.56068205 * 997; time = 0.4246s; samplesPerSecond = 2348.1
MPI Rank 1: 07/15/2016 00:55:57:  Epoch[ 4 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.87984178 * 972; EvalErrorPrediction = 0.54115226 * 972; time = 0.4507s; samplesPerSecond = 2156.7
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     1.07 seconds since last report (0.04 seconds on comm.); 4376 samples processed by 2 workers (2286 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 4.09k samplesPerSecond , throughputPerWorker = 2.04k samplesPerSecond
MPI Rank 1: 07/15/2016 00:55:57:  Epoch[ 4 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.91702967 * 973; EvalErrorPrediction = 0.53442960 * 973; time = 0.3794s; samplesPerSecond = 2564.8
MPI Rank 1: 07/15/2016 00:55:58:  Epoch[ 4 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.85401355 * 946; EvalErrorPrediction = 0.51057082 * 946; time = 0.2965s; samplesPerSecond = 3190.8
MPI Rank 1: 07/15/2016 00:55:58:  Epoch[ 4 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 2.00943616 * 651; EvalErrorPrediction = 0.56528418 * 651; time = 0.2054s; samplesPerSecond = 3168.8
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.11-seconds latency this time; accumulated time on sync point = 0.11 seconds , average latency = 0.04 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     2.03 seconds since last report (1.33 seconds on comm.); 11712 samples processed by 2 workers (1915 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 5.78k samplesPerSecond , throughputPerWorker = 2.89k samplesPerSecond
MPI Rank 1: 07/15/2016 00:55:59: Finished Epoch[ 4 of 5]: [Training] CrossEntropyWithSoftmax = 1.93652806 * 20480; EvalErrorPrediction = 0.53950195 * 20480; totalSamplesSeen = 81920; learningRatePerSample = 9.7656251e-005; epochTime=3.59785s
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:59: Starting Epoch 5: learning rate per sample = 0.000098  effective momentum = 0.656119  momentum as time constant = 2429.9 samples
MPI Rank 1: Parallel training (2 workers) using BlockMomentumSGD with block momentum = 0.5000, block momentum time constant (per worker) = 2954.6394, block learning rate = 1.0000, block size per worker = 2048 samples, using Nesterov-style block momentum, resetting SGD momentum after sync.
MPI Rank 1: minibatchiterator: epoch 4: frames [81920..102400] (first utterance at frame 81920), data subset 1 of 2, with 1 datapasses
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:55:59: Starting minibatch loop, distributed reading is ENABLED.
MPI Rank 1: 07/15/2016 00:56:00:  Epoch[ 5 of 5]-Minibatch[   1-   3, 15.00%]: CrossEntropyWithSoftmax = 1.85038694 * 955; EvalErrorPrediction = 0.51413613 * 955; time = 0.1698s; samplesPerSecond = 5623.6
MPI Rank 1: 07/15/2016 00:56:00:  Epoch[ 5 of 5]-Minibatch[   4-   6, 30.00%]: CrossEntropyWithSoftmax = 1.89596544 * 971; EvalErrorPrediction = 0.53141092 * 971; time = 0.1709s; samplesPerSecond = 5682.7
MPI Rank 1: 		(model aggregation stats): 1-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 1-th sync:     0.47 seconds since last report (0.04 seconds on comm.); 4373 samples processed by 2 workers (2256 by me);
MPI Rank 1: 		(model aggregation stats) 1-th sync: totalThroughput = 9.37k samplesPerSecond , throughputPerWorker = 4.68k samplesPerSecond
MPI Rank 1: 07/15/2016 00:56:00:  Epoch[ 5 of 5]-Minibatch[   7-   9, 45.00%]: CrossEntropyWithSoftmax = 1.85016075 * 985; EvalErrorPrediction = 0.51370558 * 985; time = 0.2745s; samplesPerSecond = 3587.8
MPI Rank 1: 07/15/2016 00:56:00:  Epoch[ 5 of 5]-Minibatch[  10-  12, 60.00%]: CrossEntropyWithSoftmax = 1.87121403 * 981; EvalErrorPrediction = 0.51987768 * 981; time = 0.3572s; samplesPerSecond = 2746.4
MPI Rank 1: 		(model aggregation stats): 2-th sync point was hit, introducing a 0.00-seconds latency this time; accumulated time on sync point = 0.00 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 2-th sync:     0.80 seconds since last report (0.04 seconds on comm.); 4374 samples processed by 2 workers (2273 by me);
MPI Rank 1: 		(model aggregation stats) 2-th sync: totalThroughput = 5.46k samplesPerSecond , throughputPerWorker = 2.73k samplesPerSecond
MPI Rank 1: 07/15/2016 00:56:01:  Epoch[ 5 of 5]-Minibatch[  13-  15, 75.00%]: CrossEntropyWithSoftmax = 1.84715642 * 927; EvalErrorPrediction = 0.49946063 * 927; time = 0.3528s; samplesPerSecond = 2627.4
MPI Rank 1: 07/15/2016 00:56:01:  Epoch[ 5 of 5]-Minibatch[  16-  18, 90.00%]: CrossEntropyWithSoftmax = 1.85875473 * 957; EvalErrorPrediction = 0.50783699 * 957; time = 0.3103s; samplesPerSecond = 3084.3
MPI Rank 1: 07/15/2016 00:56:01:  Epoch[ 5 of 5]-Minibatch[  19-  21, 105.00%]: CrossEntropyWithSoftmax = 1.85652956 * 626; EvalErrorPrediction = 0.49041534 * 626; time = 0.2948s; samplesPerSecond = 2123.6
MPI Rank 1: 		(model aggregation stats): 3-th sync point was hit, introducing a 0.01-seconds latency this time; accumulated time on sync point = 0.01 seconds , average latency = 0.00 seconds
MPI Rank 1: 		(model aggregation stats) 3-th sync:     2.03 seconds since last report (1.33 seconds on comm.); 11733 samples processed by 2 workers (1873 by me);
MPI Rank 1: 		(model aggregation stats) 3-th sync: totalThroughput = 5.78k samplesPerSecond , throughputPerWorker = 2.89k samplesPerSecond
MPI Rank 1: 07/15/2016 00:56:03: Finished Epoch[ 5 of 5]: [Training] CrossEntropyWithSoftmax = 1.86258051 * 20480; EvalErrorPrediction = 0.51679688 * 20480; totalSamplesSeen = 102400; learningRatePerSample = 9.7656251e-005; epochTime=3.30549s
MPI Rank 1: 07/15/2016 00:56:03: CNTKCommandTrainEnd: speechTrain
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:56:03: Action "train" complete.
MPI Rank 1: 
MPI Rank 1: 07/15/2016 00:56:03: __COMPLETED__
MPI Rank 1: ~MPIWrapper